<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="class_base_dictionary" kind="class" prot="public">
    <compoundname>BaseDictionary</compoundname>
    <basecompoundref refid="class_abstract_dictionary" prot="public" virt="non-virtual">AbstractDictionary</basecompoundref>
    <derivedcompoundref refid="class_base_allocated_dictionary" prot="public" virt="non-virtual">BaseAllocatedDictionary&lt; T, Strategy, Allocator, OrderIndifferentDictionary&lt; T, Strategy, Allocator &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_base_allocated_dictionary" prot="public" virt="non-virtual">BaseAllocatedDictionary&lt; T, Strategy, Allocator, OrderPreservingDictionary&lt; T, Strategy, Allocator &gt; &gt;</derivedcompoundref>
    <includes refid="_base_dictionary_8h" local="no">BaseDictionary.h</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_base_dictionary_1a281b6dcb1f909d44ab7eb8b3718694d2" prot="public" static="no">
        <type><ref refid="class_dictionary_iterator" kindref="compound">DictionaryIterator</ref>&lt; T &gt;</type>
        <definition>typedef DictionaryIterator&lt;T&gt; BaseDictionary&lt; T &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="41" bodyfile="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_base_dictionary_1a6dc6677f03d2432c0d00d7bcf9d3b58d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref></type>
        <definition>virtual value_id_t BaseDictionary&lt; T &gt;::addValue</definition>
        <argsstring>(T value)=0</argsstring>
        <name>addValue</name>
        <reimplementedby refid="class_order_preserving_dictionary_1a50a90db56215dd5ea18ab1134cf815af">addValue</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1a465a5b228c9211a3fe68b96053ecf3a8">addValue</reimplementedby>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="13"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1aac9adb0a35bc6fd101daaeaa8413d02e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>T</type>
        <definition>virtual T BaseDictionary&lt; T &gt;::getValueForValueId</definition>
        <argsstring>(value_id_t value_id)=0</argsstring>
        <name>getValueForValueId</name>
        <reimplementedby refid="class_order_preserving_dictionary_1a313239ffcc4f5622cadf2b02b208beff">getValueForValueId</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1a983cd4b3da824dd8ccea9c8a894bb149">getValueForValueId</reimplementedby>
        <param>
          <type><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref></type>
          <declname>value_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="15"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1a10968f793c177bf112e075806801fcda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref></type>
        <definition>virtual value_id_t BaseDictionary&lt; T &gt;::getValueIdForValue</definition>
        <argsstring>(const T &amp;value) const =0</argsstring>
        <name>getValueIdForValue</name>
        <reimplementedby refid="class_order_preserving_dictionary_1a4188a48fdb96109cc1d2589fda627880">getValueIdForValue</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1a9dbf5768a350242da44f563dd5fff517">getValueIdForValue</reimplementedby>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="16"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1a1e342e5bf2086c71b04c4315467137f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref></type>
        <definition>virtual value_id_t BaseDictionary&lt; T &gt;::getValueIdForValueSmaller</definition>
        <argsstring>(T other)=0</argsstring>
        <name>getValueIdForValueSmaller</name>
        <reimplementedby refid="class_order_preserving_dictionary_1a7ccfab9eea7b5d83477bf39a530e9b52">getValueIdForValueSmaller</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1a2b4a4a4b385c6803873cabedb85cbc0f">getValueIdForValueSmaller</reimplementedby>
        <param>
          <type>T</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="25"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1a54690a4f2e564a84b79e1d26f04f5e7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref></type>
        <definition>virtual value_id_t BaseDictionary&lt; T &gt;::getValueIdForValueGreater</definition>
        <argsstring>(T other)=0</argsstring>
        <name>getValueIdForValueGreater</name>
        <reimplementedby refid="class_order_preserving_dictionary_1a5162c542f89a0d941e6098d584decf77">getValueIdForValueGreater</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1a7fb5ccecfe536f6695eb827e2c46118f">getValueIdForValueGreater</reimplementedby>
        <param>
          <type>T</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="26"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1a9039e0936f936561754300eea075ddc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const T</type>
        <definition>virtual const T BaseDictionary&lt; T &gt;::getSmallestValue</definition>
        <argsstring>()=0</argsstring>
        <name>getSmallestValue</name>
        <reimplementedby refid="class_order_preserving_dictionary_1a01786c759263bfd5408e9bcd9f4e216f">getSmallestValue</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1a505830fd9d5b149514088799e1f4a71a">getSmallestValue</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="28"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1ab90f493d26980c624f773d7cad05a3d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>const T</type>
        <definition>virtual const T BaseDictionary&lt; T &gt;::getGreatestValue</definition>
        <argsstring>()=0</argsstring>
        <name>getGreatestValue</name>
        <reimplementedby refid="class_order_preserving_dictionary_1a49192d7b8408584a8be518c5b1884968">getGreatestValue</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1a44b76427d344c0488d793bbcbf8b20e5">getGreatestValue</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="29"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1a738cb5130f6e458c0107df6b508e05a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BaseDictionary&lt; T &gt;::isValueIdValid</definition>
        <argsstring>(value_id_t value_id)=0</argsstring>
        <name>isValueIdValid</name>
        <reimplementedby refid="class_order_preserving_dictionary_1ad45d95fcefd00298ec837108e422b8f9">isValueIdValid</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1ac1c8682e67d42636b3eab489af14fe7b">isValueIdValid</reimplementedby>
        <param>
          <type><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref></type>
          <declname>value_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="31"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1abdeceaa40e819367debaebaff293a463" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BaseDictionary&lt; T &gt;::valueExists</definition>
        <argsstring>(const T &amp;value) const =0</argsstring>
        <name>valueExists</name>
        <reimplementedby refid="class_order_preserving_dictionary_1a230dc6ece1fbedb3e95182509dac7249">valueExists</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1ab12d5b00e51c710fc934ad81dd281293">valueExists</reimplementedby>
        <param>
          <type>const T &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="32"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1ae3c53d970ee95b00169dd6b784902174" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void BaseDictionary&lt; T &gt;::reserve</definition>
        <argsstring>(size_t size)=0</argsstring>
        <name>reserve</name>
        <reimplements refid="class_abstract_dictionary_1a2ea90fb9b1d7b19399f03d4f3e1d0c95">reserve</reimplements>
        <reimplementedby refid="class_order_preserving_dictionary_1a9427a4ea7d5778cc25373eb87238ba12">reserve</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1a696a95aded3ae17ebce247c82d8dc6d7">reserve</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="34"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1a335a2ad8aff598b74704829f35adbfc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t BaseDictionary&lt; T &gt;::size</definition>
        <argsstring>()=0</argsstring>
        <name>size</name>
        <reimplements refid="class_abstract_dictionary_1a2146dedbe62e66b1bcdec23945e869d1">size</reimplements>
        <reimplementedby refid="class_order_preserving_dictionary_1a027b7d8daf2c16de47068ad702c96aa9">size</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1a657edbbe644f8bf1f8fc102e65d4a382">size</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="35"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1af5993ae21b2e5b32fa8e4c6c2387d889" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::shared_ptr&lt; <ref refid="class_abstract_dictionary" kindref="compound">AbstractDictionary</ref> &gt;</type>
        <definition>virtual std::shared_ptr&lt;AbstractDictionary&gt; BaseDictionary&lt; T &gt;::copy</definition>
        <argsstring>()=0</argsstring>
        <name>copy</name>
        <reimplements refid="class_abstract_dictionary_1a6f760b80be9b9139e2f089cbd4042d0b">copy</reimplements>
        <reimplementedby refid="class_order_preserving_dictionary_1a6611970acc861038fe1cc6f7eed44f23">copy</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1a96097b280ce81696760f805d3f9062d9">copy</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="37"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1a3c7dd2234656fbda5531fa9de29ffc81" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool BaseDictionary&lt; T &gt;::isOrdered</definition>
        <argsstring>()=0</argsstring>
        <name>isOrdered</name>
        <reimplements refid="class_abstract_dictionary_1ad3a7a25c73742760c643d189cdf269e7">isOrdered</reimplements>
        <reimplementedby refid="class_order_preserving_dictionary_1a21f77be611c0f2a062d632c43a476779">isOrdered</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1a674d4ade9b462154411c33575043ac52">isOrdered</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="39"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1af295f8b12e4c22aba395c23d4df71ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_dictionary_iterator" kindref="compound">DictionaryIterator</ref>&lt; T &gt;</type>
        <definition>virtual DictionaryIterator&lt;T&gt; BaseDictionary&lt; T &gt;::begin</definition>
        <argsstring>()=0</argsstring>
        <name>begin</name>
        <reimplementedby refid="class_order_preserving_dictionary_1a1723d753092bd01c460d177b539f2546">begin</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1afeac2939b2a3b7cdfefc30cd522eda4b">begin</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="43"/>
      </memberdef>
      <memberdef kind="function" id="class_base_dictionary_1a61461dc90085108337b8930923755870" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_dictionary_iterator" kindref="compound">DictionaryIterator</ref>&lt; T &gt;</type>
        <definition>virtual DictionaryIterator&lt;T&gt; BaseDictionary&lt; T &gt;::end</definition>
        <argsstring>()=0</argsstring>
        <name>end</name>
        <reimplementedby refid="class_order_preserving_dictionary_1ae8b901d726403b04cea75061193c5045">end</reimplementedby>
        <reimplementedby refid="class_order_indifferent_dictionary_1ae4d47cde54a05c84f624d29041b33ee6">end</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="44"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1535">
        <label>AbstractDictionary</label>
        <link refid="class_abstract_dictionary"/>
      </node>
      <node id="1537">
        <label>OrderIndifferentDictionary&lt; T, Strategy, Allocator &gt;</label>
        <link refid="class_order_indifferent_dictionary"/>
        <childnode refid="1536" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1536">
        <label>BaseAllocatedDictionary&lt; T, Strategy, Allocator, OrderIndifferentDictionary&lt; T, Strategy, Allocator &gt; &gt;</label>
        <link refid="class_base_allocated_dictionary"/>
        <childnode refid="1534" relation="public-inheritance">
        </childnode>
        <childnode refid="1541" relation="template-instance">
          <edgelabel>&lt; T, Strategy, Allocator, OrderIndifferentDictionary&lt; T, Strategy, Allocator &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1539">
        <label>OrderPreservingDictionary&lt; T, Strategy, Allocator &gt;</label>
        <link refid="class_order_preserving_dictionary"/>
        <childnode refid="1538" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1540">
        <label>BaseDictionary&lt; DictionaryType &gt;</label>
        <link refid="class_base_dictionary"/>
        <childnode refid="1534" relation="template-instance">
          <edgelabel>&lt; DictionaryType &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1538">
        <label>BaseAllocatedDictionary&lt; T, Strategy, Allocator, OrderPreservingDictionary&lt; T, Strategy, Allocator &gt; &gt;</label>
        <link refid="class_base_allocated_dictionary"/>
        <childnode refid="1534" relation="public-inheritance">
        </childnode>
        <childnode refid="1541" relation="template-instance">
          <edgelabel>&lt; T, Strategy, Allocator, OrderPreservingDictionary&lt; T, Strategy, Allocator &gt; &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1534">
        <label>BaseDictionary&lt; T &gt;</label>
        <link refid="class_base_dictionary"/>
        <childnode refid="1535" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1541">
        <label>BaseAllocatedDictionary&lt; DictionaryType, Strategy, Allocator, AllocatedClass &gt;</label>
        <link refid="class_base_allocated_dictionary"/>
        <childnode refid="1540" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1543">
        <label>AbstractDictionary</label>
        <link refid="class_abstract_dictionary"/>
      </node>
      <node id="1542">
        <label>BaseDictionary&lt; T &gt;</label>
        <link refid="class_base_dictionary"/>
        <childnode refid="1543" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" line="10" bodyfile="/home/grund/hyrise/src/lib/storage/BaseDictionary.h" bodystart="10" bodyend="46"/>
    <listofallmembers>
      <member refid="class_base_dictionary_1a6dc6677f03d2432c0d00d7bcf9d3b58d" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>addValue</name></member>
      <member refid="class_base_dictionary_1af295f8b12e4c22aba395c23d4df71ef5" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>begin</name></member>
      <member refid="class_base_dictionary_1af5993ae21b2e5b32fa8e4c6c2387d889" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>copy</name></member>
      <member refid="class_abstract_dictionary_1ad2dcfff13a96812365cd3144b966be92" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>copy_empty</name></member>
      <member refid="class_abstract_dictionary_1a051863f8c78b2312e92705eb3554f156" prot="public" virt="non-virtual"><scope>BaseDictionary</scope><name>dictionaryWithType</name></member>
      <member refid="class_base_dictionary_1a61461dc90085108337b8930923755870" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>end</name></member>
      <member refid="class_base_dictionary_1ab90f493d26980c624f773d7cad05a3d5" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>getGreatestValue</name></member>
      <member refid="class_base_dictionary_1a9039e0936f936561754300eea075ddc4" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>getSmallestValue</name></member>
      <member refid="class_base_dictionary_1aac9adb0a35bc6fd101daaeaa8413d02e" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>getValueForValueId</name></member>
      <member refid="class_base_dictionary_1a10968f793c177bf112e075806801fcda" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>getValueIdForValue</name></member>
      <member refid="class_base_dictionary_1a54690a4f2e564a84b79e1d26f04f5e7a" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>getValueIdForValueGreater</name></member>
      <member refid="class_base_dictionary_1a1e342e5bf2086c71b04c4315467137f7" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>getValueIdForValueSmaller</name></member>
      <member refid="class_base_dictionary_1a3c7dd2234656fbda5531fa9de29ffc81" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>isOrdered</name></member>
      <member refid="class_base_dictionary_1a738cb5130f6e458c0107df6b508e05a9" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>isValueIdValid</name></member>
      <member refid="class_base_dictionary_1a281b6dcb1f909d44ab7eb8b3718694d2" prot="public" virt="non-virtual"><scope>BaseDictionary</scope><name>iterator</name></member>
      <member refid="class_base_dictionary_1ae3c53d970ee95b00169dd6b784902174" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>reserve</name></member>
      <member refid="class_abstract_dictionary_1acce31627df9551d83eab518366ea7cc8" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>shrink</name></member>
      <member refid="class_base_dictionary_1a335a2ad8aff598b74704829f35adbfc6" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>size</name></member>
      <member refid="class_base_dictionary_1abdeceaa40e819367debaebaff293a463" prot="public" virt="pure-virtual"><scope>BaseDictionary</scope><name>valueExists</name></member>
      <member refid="class_abstract_dictionary_1a9a9216aed0689529a55c572b3ef69bcf" prot="public" virt="virtual"><scope>BaseDictionary</scope><name>~AbstractDictionary</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
