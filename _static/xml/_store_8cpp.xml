<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_store_8cpp" kind="file">
    <compoundname>Store.cpp</compoundname>
    <includes refid="_store_8h" local="no">storage/Store.h</includes>
    <includes local="no">iostream</includes>
    <includes refid="_pretty_printer_8h" local="yes">storage/PrettyPrinter.h</includes>
    <incdepgraph>
      <node id="22683">
        <label>list</label>
      </node>
      <node id="22708">
        <label>atomic</label>
      </node>
      <node id="22712">
        <label>storage/BaseAllocatedAttributeVector.h</label>
        <link refid="_base_allocated_attribute_vector_8h"/>
        <childnode refid="22704" relation="include">
        </childnode>
        <childnode refid="22688" relation="include">
        </childnode>
      </node>
      <node id="22670">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="22655">
        <label>src/lib/storage/Store.cpp</label>
        <link refid="Store.cpp"/>
        <childnode refid="22656" relation="include">
        </childnode>
        <childnode refid="22678" relation="include">
        </childnode>
        <childnode refid="22725" relation="include">
        </childnode>
      </node>
      <node id="22662">
        <label>limits</label>
      </node>
      <node id="22702">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="22703">
        <label>storage/AbstractAllocatedTable.h</label>
        <link refid="_abstract_allocated_table_8h"/>
        <childnode refid="22680" relation="include">
        </childnode>
        <childnode refid="22684" relation="include">
        </childnode>
        <childnode refid="22686" relation="include">
        </childnode>
      </node>
      <node id="22677">
        <label>assert.h</label>
      </node>
      <node id="22672">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="22693">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="22661">
        <label>cstdint</label>
      </node>
      <node id="22657">
        <label>storage/MutableVerticalTable.h</label>
        <link refid="_mutable_vertical_table_8h"/>
        <childnode refid="22658" relation="include">
        </childnode>
        <childnode refid="22659" relation="include">
        </childnode>
        <childnode refid="22660" relation="include">
        </childnode>
        <childnode refid="22664" relation="include">
        </childnode>
        <childnode refid="22716" relation="include">
        </childnode>
        <childnode refid="22665" relation="include">
        </childnode>
        <childnode refid="22673" relation="include">
        </childnode>
      </node>
      <node id="22707">
        <label>storage/FixedLengthVector.h</label>
        <link refid="_fixed_length_vector_8h"/>
        <childnode refid="22708" relation="include">
        </childnode>
        <childnode refid="22687" relation="include">
        </childnode>
        <childnode refid="22709" relation="include">
        </childnode>
        <childnode refid="22663" relation="include">
        </childnode>
        <childnode refid="22710" relation="include">
        </childnode>
        <childnode refid="22659" relation="include">
        </childnode>
        <childnode refid="22667" relation="include">
        </childnode>
        <childnode refid="22711" relation="include">
        </childnode>
        <childnode refid="22693" relation="include">
        </childnode>
        <childnode refid="22705" relation="include">
        </childnode>
        <childnode refid="22704" relation="include">
        </childnode>
        <childnode refid="22712" relation="include">
        </childnode>
        <childnode refid="22680" relation="include">
        </childnode>
        <childnode refid="22684" relation="include">
        </childnode>
      </node>
      <node id="22690">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="22666" relation="include">
        </childnode>
        <childnode refid="22679" relation="include">
        </childnode>
        <childnode refid="22691" relation="include">
        </childnode>
      </node>
      <node id="22706">
        <label>storage/AttributeVectorFactory.h</label>
        <link refid="_attribute_vector_factory_8h"/>
        <childnode refid="22663" relation="include">
        </childnode>
        <childnode refid="22704" relation="include">
        </childnode>
        <childnode refid="22707" relation="include">
        </childnode>
        <childnode refid="22713" relation="include">
        </childnode>
      </node>
      <node id="22668">
        <label>stdint.h</label>
      </node>
      <node id="22689">
        <label>stdlib.h</label>
      </node>
      <node id="22715">
        <label>cmath</label>
      </node>
      <node id="22687">
        <label>errno.h</label>
      </node>
      <node id="22667">
        <label>stdexcept</label>
      </node>
      <node id="22659">
        <label>string</label>
      </node>
      <node id="22699">
        <label>map</label>
      </node>
      <node id="22675">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="22676" relation="include">
        </childnode>
        <childnode refid="22695" relation="include">
        </childnode>
      </node>
      <node id="22686">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="22687" relation="include">
        </childnode>
        <childnode refid="22688" relation="include">
        </childnode>
        <childnode refid="22689" relation="include">
        </childnode>
      </node>
      <node id="22698">
        <label>exception</label>
      </node>
      <node id="22681">
        <label>stddef.h</label>
      </node>
      <node id="22695">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="22666" relation="include">
        </childnode>
        <childnode refid="22679" relation="include">
        </childnode>
        <childnode refid="22690" relation="include">
        </childnode>
        <childnode refid="22691" relation="include">
        </childnode>
        <childnode refid="22696" relation="include">
        </childnode>
        <childnode refid="22694" relation="include">
        </childnode>
        <childnode refid="22698" relation="include">
        </childnode>
        <childnode refid="22658" relation="include">
        </childnode>
        <childnode refid="22699" relation="include">
        </childnode>
        <childnode refid="22663" relation="include">
        </childnode>
        <childnode refid="22700" relation="include">
        </childnode>
        <childnode refid="22701" relation="include">
        </childnode>
        <childnode refid="22702" relation="include">
        </childnode>
      </node>
      <node id="22669">
        <label>ostream</label>
      </node>
      <node id="22718">
        <label>storage/AbstractMergeStrategy.h</label>
        <link refid="_abstract_merge_strategy_8h"/>
        <childnode refid="22658" relation="include">
        </childnode>
        <childnode refid="22673" relation="include">
        </childnode>
      </node>
      <node id="22700">
        <label>limits.h</label>
      </node>
      <node id="22691">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="22692" relation="include">
        </childnode>
        <childnode refid="22693" relation="include">
        </childnode>
      </node>
      <node id="22679">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="22658" relation="include">
        </childnode>
        <childnode refid="22659" relation="include">
        </childnode>
        <childnode refid="22663" relation="include">
        </childnode>
        <childnode refid="22680" relation="include">
        </childnode>
        <childnode refid="22684" relation="include">
        </childnode>
        <childnode refid="22686" relation="include">
        </childnode>
        <childnode refid="22666" relation="include">
        </childnode>
      </node>
      <node id="22656">
        <label>storage/Store.h</label>
        <link refid="_store_8h"/>
        <childnode refid="22657" relation="include">
        </childnode>
        <childnode refid="22673" relation="include">
        </childnode>
        <childnode refid="22717" relation="include">
        </childnode>
        <childnode refid="22722" relation="include">
        </childnode>
        <childnode refid="22723" relation="include">
        </childnode>
        <childnode refid="22703" relation="include">
        </childnode>
        <childnode refid="22660" relation="include">
        </childnode>
      </node>
      <node id="22664">
        <label>storage/Table.h</label>
        <link refid="_table_8h"/>
        <childnode refid="22659" relation="include">
        </childnode>
        <childnode refid="22658" relation="include">
        </childnode>
        <childnode refid="22663" relation="include">
        </childnode>
        <childnode refid="22660" relation="include">
        </childnode>
        <childnode refid="22665" relation="include">
        </childnode>
        <childnode refid="22673" relation="include">
        </childnode>
        <childnode refid="22679" relation="include">
        </childnode>
        <childnode refid="22703" relation="include">
        </childnode>
        <childnode refid="22704" relation="include">
        </childnode>
        <childnode refid="22706" relation="include">
        </childnode>
        <childnode refid="22714" relation="include">
        </childnode>
      </node>
      <node id="22697">
        <label>string.h</label>
      </node>
      <node id="22673">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="22662" relation="include">
        </childnode>
        <childnode refid="22663" relation="include">
        </childnode>
        <childnode refid="22667" relation="include">
        </childnode>
        <childnode refid="22658" relation="include">
        </childnode>
        <childnode refid="22659" relation="include">
        </childnode>
        <childnode refid="22660" relation="include">
        </childnode>
        <childnode refid="22674" relation="include">
        </childnode>
        <childnode refid="22666" relation="include">
        </childnode>
        <childnode refid="22665" relation="include">
        </childnode>
        <childnode refid="22675" relation="include">
        </childnode>
      </node>
      <node id="22674">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="22716">
        <label>storage/TableFactory.h</label>
        <link refid="_table_factory_8h"/>
        <childnode refid="22663" relation="include">
        </childnode>
        <childnode refid="22660" relation="include">
        </childnode>
        <childnode refid="22673" relation="include">
        </childnode>
        <childnode refid="22664" relation="include">
        </childnode>
      </node>
      <node id="22725">
        <label>storage/PrettyPrinter.h</label>
        <link refid="_pretty_printer_8h"/>
        <childnode refid="22660" relation="include">
        </childnode>
      </node>
      <node id="22719">
        <label>storage/AbstractMerger.h</label>
        <link refid="_abstract_merger_8h"/>
        <childnode refid="22658" relation="include">
        </childnode>
        <childnode refid="22720" relation="include">
        </childnode>
        <childnode refid="22660" relation="include">
        </childnode>
        <childnode refid="22673" relation="include">
        </childnode>
        <childnode refid="22721" relation="include">
        </childnode>
      </node>
      <node id="22701">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="22658">
        <label>vector</label>
      </node>
      <node id="22722">
        <label>storage/LogarithmicMergeStrategy.h</label>
        <link refid="_logarithmic_merge_strategy_8h"/>
        <childnode refid="22660" relation="include">
        </childnode>
        <childnode refid="22718" relation="include">
        </childnode>
        <childnode refid="22673" relation="include">
        </childnode>
      </node>
      <node id="22660">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="22661" relation="include">
        </childnode>
        <childnode refid="22659" relation="include">
        </childnode>
        <childnode refid="22662" relation="include">
        </childnode>
        <childnode refid="22663" relation="include">
        </childnode>
        <childnode refid="22658" relation="include">
        </childnode>
      </node>
      <node id="22711">
        <label>sstream</label>
      </node>
      <node id="22724">
        <label>storage/DictionaryPosition.h</label>
        <link refid="_dictionary_position_8h"/>
      </node>
      <node id="22723">
        <label>storage/SequentialHeapMerger.h</label>
        <link refid="_sequential_heap_merger_8h"/>
        <childnode refid="22675" relation="include">
        </childnode>
        <childnode refid="22673" relation="include">
        </childnode>
        <childnode refid="22719" relation="include">
        </childnode>
        <childnode refid="22724" relation="include">
        </childnode>
      </node>
      <node id="22692">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="22680">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="22681" relation="include">
        </childnode>
        <childnode refid="22682" relation="include">
        </childnode>
        <childnode refid="22683" relation="include">
        </childnode>
        <childnode refid="22667" relation="include">
        </childnode>
      </node>
      <node id="22709">
        <label>math.h</label>
      </node>
      <node id="22678">
        <label>iostream</label>
      </node>
      <node id="22717">
        <label>storage/TableMerger.h</label>
        <link refid="_table_merger_8h"/>
        <childnode refid="22658" relation="include">
        </childnode>
        <childnode refid="22660" relation="include">
        </childnode>
        <childnode refid="22673" relation="include">
        </childnode>
        <childnode refid="22718" relation="include">
        </childnode>
        <childnode refid="22719" relation="include">
        </childnode>
      </node>
      <node id="22665">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="22666" relation="include">
        </childnode>
        <childnode refid="22659" relation="include">
        </childnode>
        <childnode refid="22667" relation="include">
        </childnode>
      </node>
      <node id="22705">
        <label>storage/AbstractAttributeVector.h</label>
        <link refid="_abstract_attribute_vector_8h"/>
      </node>
      <node id="22720">
        <label>unordered_map</label>
      </node>
      <node id="22671">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="22710">
        <label>mutex</label>
      </node>
      <node id="22721">
        <label>storage/TableUtils.h</label>
        <link refid="_table_utils_8h"/>
        <childnode refid="22663" relation="include">
        </childnode>
        <childnode refid="22720" relation="include">
        </childnode>
      </node>
      <node id="22694">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="22714">
        <label>Table-impl.h</label>
        <link refid="_table-impl_8h"/>
        <childnode refid="22715" relation="include">
        </childnode>
        <childnode refid="22706" relation="include">
        </childnode>
      </node>
      <node id="22713">
        <label>storage/BitCompressedVector.h</label>
        <link refid="_bit_compressed_vector_8h"/>
        <childnode refid="22709" relation="include">
        </childnode>
        <childnode refid="22668" relation="include">
        </childnode>
        <childnode refid="22685" relation="include">
        </childnode>
        <childnode refid="22710" relation="include">
        </childnode>
        <childnode refid="22659" relation="include">
        </childnode>
        <childnode refid="22667" relation="include">
        </childnode>
        <childnode refid="22705" relation="include">
        </childnode>
        <childnode refid="22704" relation="include">
        </childnode>
      </node>
      <node id="22704">
        <label>storage/BaseAttributeVector.h</label>
        <link refid="_base_attribute_vector_8h"/>
        <childnode refid="22663" relation="include">
        </childnode>
        <childnode refid="22667" relation="include">
        </childnode>
        <childnode refid="22705" relation="include">
        </childnode>
      </node>
      <node id="22684">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="22678" relation="include">
        </childnode>
        <childnode refid="22661" relation="include">
        </childnode>
        <childnode refid="22685" relation="include">
        </childnode>
      </node>
      <node id="22676">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="22677" relation="include">
        </childnode>
        <childnode refid="22678" relation="include">
        </childnode>
        <childnode refid="22663" relation="include">
        </childnode>
        <childnode refid="22666" relation="include">
        </childnode>
        <childnode refid="22679" relation="include">
        </childnode>
        <childnode refid="22690" relation="include">
        </childnode>
        <childnode refid="22691" relation="include">
        </childnode>
        <childnode refid="22694" relation="include">
        </childnode>
        <childnode refid="22692" relation="include">
        </childnode>
      </node>
      <node id="22682">
        <label>algorithm</label>
      </node>
      <node id="22688">
        <label>stdio.h</label>
      </node>
      <node id="22685">
        <label>cstring</label>
      </node>
      <node id="22696">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="22658" relation="include">
        </childnode>
        <childnode refid="22678" relation="include">
        </childnode>
        <childnode refid="22683" relation="include">
        </childnode>
        <childnode refid="22663" relation="include">
        </childnode>
        <childnode refid="22697" relation="include">
        </childnode>
        <childnode refid="22677" relation="include">
        </childnode>
        <childnode refid="22693" relation="include">
        </childnode>
      </node>
      <node id="22663">
        <label>memory</label>
      </node>
      <node id="22666">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="22658" relation="include">
        </childnode>
        <childnode refid="22659" relation="include">
        </childnode>
        <childnode refid="22667" relation="include">
        </childnode>
        <childnode refid="22668" relation="include">
        </childnode>
        <childnode refid="22669" relation="include">
        </childnode>
        <childnode refid="22670" relation="include">
        </childnode>
        <childnode refid="22671" relation="include">
        </childnode>
        <childnode refid="22672" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_store_8h" kindref="compound">storage/Store.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_pretty_printer_8h" kindref="compound">storage/PrettyPrinter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="class_store_1afa891764f2dd013645c558e2806971c5" refkind="member"><highlight class="normal"><ref refid="class_store_1a5f58eadcb7385d5a5aa6830daef84f7d" kindref="member">Store::Store</ref>(std::vector&lt;std::vector&lt;const<sp/>ColumnMetadata<sp/>*&gt;<sp/>*&gt;<sp/>md)<sp/>:</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>merger(<ref refid="csb__tree_8cpp_1ab979d9d4b4923f7c54d6caa6e1a61936" kindref="member">nullptr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Bad<sp/>things<sp/>happende&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10"><highlight class="normal">}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_store_1a5f58eadcb7385d5a5aa6830daef84f7d" refkind="member"><highlight class="normal"><ref refid="class_store_1a5f58eadcb7385d5a5aa6830daef84f7d" kindref="member">Store::Store</ref>()<sp/>:</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>merger(<ref refid="csb__tree_8cpp_1ab979d9d4b4923f7c54d6caa6e1a61936" kindref="member">nullptr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_store_1ac1e1478d5ba70c1ca5996d2ab054279b" refkind="member"><highlight class="normal"><ref refid="class_store_1a5f58eadcb7385d5a5aa6830daef84f7d" kindref="member">Store::Store</ref>(<ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>main_table)<sp/>:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>delta(main_table-&gt;copy_structure_modifiable()),</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>merger(<ref refid="csb__tree_8cpp_1ab979d9d4b4923f7c54d6caa6e1a61936" kindref="member">nullptr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.push_back(main_table);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="class_store_1a4fd725fdb2de0632ed98bfbd131c2512" refkind="member"><highlight class="normal"><ref refid="class_store_1a4fd725fdb2de0632ed98bfbd131c2512" kindref="member">Store::~Store</ref>()<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_store_1a64e75844b85ac164809b2df60d826f06" kindref="member">merger</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_store_1a1011812043e6963e8e122dd77bdec2c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_store_1a1011812043e6963e8e122dd77bdec2c5" kindref="member">Store::merge</ref>()<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_store_1a64e75844b85ac164809b2df60d826f06" kindref="member">merger</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;No<sp/>Merger<sp/>set.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>new_delta<sp/>=<sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;copy_structure_modifiable();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t&gt;<sp/>tmp(<ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.begin(),<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.end());</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>tmp.push_back(<ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref><sp/>=<sp/><ref refid="class_store_1a64e75844b85ac164809b2df60d826f06" kindref="member">merger</ref>-&gt;<ref refid="class_table_merger_1ab062784a0c522a34ee897334d6e19ea3" kindref="member">merge</ref>(tmp);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref><sp/>=<sp/>new_delta;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="class_store_1ab089e4aecf19089cc155f5d62292850b" refkind="member"><highlight class="normal">std::vector&lt;<sp/>hyrise::storage::atable_ptr_t<sp/>&gt;<sp/><ref refid="class_store_1ab089e4aecf19089cc155f5d62292850b" kindref="member">Store::getMainTables</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_store_1af2cdc7e2ed4e03785a5982b797a768d5" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_store_1af2cdc7e2ed4e03785a5982b797a768d5" kindref="member">Store::getDeltaTable</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_store_1a6d5749cca0eeeb84fcc7476e6bdbfc9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_column_metadata" kindref="compound">ColumnMetadata</ref><sp/>*<ref refid="class_store_1a6d5749cca0eeeb84fcc7476e6bdbfc9f" kindref="member">Store::metadataAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>=<sp/>0;<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>&lt;<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.size();<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>++)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;<ref refid="class_store_1a7a16ab17df15f50f605a4243d993d928" kindref="member">size</ref>()<sp/>+<sp/>offset<sp/>&gt;<sp/>row_index)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;metadataAt(column_index,<sp/>row_index<sp/>-<sp/>offset,<sp/>table_id);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;size();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>row<sp/>is<sp/>not<sp/>in<sp/>main<sp/>tables.<sp/>return<sp/>metadata<sp/>from<sp/>delta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;metadataAt(column_index,<sp/>row_index<sp/>-<sp/>offset,<sp/>table_id);</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="class_store_1a46770db9f688639313b1c8da39d7994f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_store_1a46770db9f688639313b1c8da39d7994f" kindref="member">Store::setDictionaryAt</ref>(<ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref><sp/>dict,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>=<sp/>0;<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>&lt;<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.size();<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>++)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;<ref refid="class_store_1a7a16ab17df15f50f605a4243d993d928" kindref="member">size</ref>()<sp/>+<sp/>offset<sp/>&gt;<sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;setDictionaryAt(dict,<sp/>column,<sp/>row<sp/>-<sp/>offset,<sp/>table_id);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;size();</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>row<sp/>is<sp/>not<sp/>in<sp/>main<sp/>tables.<sp/>set<sp/>dict<sp/>in<sp/>delta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;setDictionaryAt(dict,<sp/>column,<sp/>row<sp/>-<sp/>offset,<sp/>table_id);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_store_1ac99a49efd57349d2fdb4642e3c1ffb85" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref>&amp;<sp/><ref refid="class_store_1ac99a49efd57349d2fdb4642e3c1ffb85" kindref="member">Store::dictionaryAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>of_delta)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!row)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_store_1a897f1aaea02ea049f9687e0bbe821b19" kindref="member">dictionaryByTableId</ref>(column,<sp/>table_id);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table_id)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table_id<sp/>&lt;<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[table_id]-&gt;dictionaryAt(column,<sp/>row);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;dictionaryAt(column,<sp/>row);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>=<sp/>0;<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>&lt;<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.size();<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>++)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;<ref refid="class_store_1a7a16ab17df15f50f605a4243d993d928" kindref="member">size</ref>()<sp/>+<sp/>offset<sp/>&gt;<sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;dictionaryAt(column,<sp/>row<sp/>-<sp/>offset);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;size();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>row<sp/>is<sp/>not<sp/>in<sp/>main<sp/>tables.<sp/>return<sp/>row<sp/>from<sp/>delta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;dictionaryAt(column,<sp/>row<sp/>-<sp/>offset);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_store_1a897f1aaea02ea049f9687e0bbe821b19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref>&amp;<sp/><ref refid="class_store_1a897f1aaea02ea049f9687e0bbe821b19" kindref="member">Store::dictionaryByTableId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>assert(table_id<sp/>&lt;=<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.size());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table_id<sp/>&lt;<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[table_id]-&gt;dictionaryByTableId(column,<sp/>table_id);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;dictionaryByTableId(column,<sp/>table_id);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_store_1aaa27799e68d8882d50e1a5c4da096e57" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_store_1_1table__offset__idx__t" kindref="compound">Store::table_offset_idx_t</ref><sp/><ref refid="class_store_1aaa27799e68d8882d50e1a5c4da096e57" kindref="member">Store::responsibleTable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tableIdx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>table:<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>table-&gt;size();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sz<sp/>+<sp/>offset)<sp/>&gt;<sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{table,<sp/>row<sp/>-<sp/>offset,<sp/>tableIdx};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/>sz;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>++tableIdx;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;size()<sp/>+<sp/>offset)<sp/>&gt;<sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{<ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>,<sp/>row<sp/>-<sp/>offset,<sp/>tableIdx};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Requested<sp/>row<sp/>is<sp/>located<sp/>beyond<sp/>store<sp/>boundaries&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="class_store_1adb053acbcbb215a46324a083ecb5f23f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_store_1adb053acbcbb215a46324a083ecb5f23f" kindref="member">Store::setValueId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>vid)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_store_1aaa27799e68d8882d50e1a5c4da096e57" kindref="member">responsibleTable</ref>(row);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>location.table-&gt;setValueId(column,<sp/>location.offset_in_table,<sp/>vid);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_store_1a87540e0c8654a91fc01e3cc6925aa823" refkind="member"><highlight class="normal"><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/><ref refid="class_store_1a87540e0c8654a91fc01e3cc6925aa823" kindref="member">Store::getValueId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>location<sp/>=<sp/><ref refid="class_store_1aaa27799e68d8882d50e1a5c4da096e57" kindref="member">responsibleTable</ref>(row);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>valueId<sp/>=<sp/>location.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>-&gt;getValueId(column,<sp/>location.offset_in_table);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>valueId.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref><sp/>=<sp/>location.table_index;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>valueId;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="class_store_1a7a16ab17df15f50f605a4243d993d928" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_store_1a7a16ab17df15f50f605a4243d993d928" kindref="member">Store::size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>main_tables_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>=<sp/>0;<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>&lt;<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.size();<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>main_tables_size<sp/>+=<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;size();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>main_tables_size<sp/>+<sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;size();</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_store_1ae255c50f218def7b1f74b131b13b031c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_store_1ae255c50f218def7b1f74b131b13b031c" kindref="member">Store::columnCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;columnCount();</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="class_store_1a5985b78449c324e9c5000a8e076696ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="class_store_1a5985b78449c324e9c5000a8e076696ce" kindref="member">Store::sliceCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[0]-&gt;sliceCount();</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="class_store_1a46d326a26cebe6fd98a69016d5a34795" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_store_1a46d326a26cebe6fd98a69016d5a34795" kindref="member">Store::atSlice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slice,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>=<sp/>0;<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>&lt;<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.size();<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>++)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;<ref refid="class_store_1a7a16ab17df15f50f605a4243d993d928" kindref="member">size</ref>()<sp/>+<sp/>offset<sp/>&gt;<sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;atSlice(slice,<sp/>row<sp/>-<sp/>offset);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;size();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>row<sp/>is<sp/>not<sp/>in<sp/>main<sp/>tables.<sp/>return<sp/>slice<sp/>from<sp/>delta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;atSlice(slice,<sp/>row<sp/>-<sp/>offset);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="class_store_1a7073045d76aa1aea7e1b58c551d701fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_store_1a7073045d76aa1aea7e1b58c551d701fe" kindref="member">Store::getSliceWidth</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slice)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO<sp/>we<sp/>now<sp/>require<sp/>that<sp/>all<sp/>main<sp/>tables<sp/>have<sp/>the<sp/>same<sp/>layout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[0]-&gt;getSliceWidth(slice);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_store_1a20f897fce9ff1cd3aeb587f187d222ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_store_1a20f897fce9ff1cd3aeb587f187d222ab" kindref="member">Store::getSliceForColumn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//return<sp/>main_tables[0]-&gt;getSliceForColumn(column);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="class_store_1a5851ddb6f0c531ea59a93c4afff87bd1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_store_1a5851ddb6f0c531ea59a93c4afff87bd1" kindref="member">Store::getOffsetInSlice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//return<sp/>main_tables[0]-&gt;getOffsetInSlice(column);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="class_store_1a03268df852e96dd93ef68f5da9395ab2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_store_1a03268df852e96dd93ef68f5da9395ab2" kindref="member">Store::print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>limit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>=<sp/>0;<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>&lt;<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.size();<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==<sp/>Main<sp/>-<sp/>Pos:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>Gen:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;generation()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>-&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>]-&gt;print(limit);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;==<sp/>Delta:&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;print(limit);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="class_store_1a4c8c3037af8f66889a648a4d502bef3b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_store_1a4c8c3037af8f66889a648a4d502bef3b" kindref="member">Store::setMerger</ref>(<ref refid="class_table_merger" kindref="compound">TableMerger</ref><sp/>*_merger)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="class_store_1a64e75844b85ac164809b2df60d826f06" kindref="member">merger</ref><sp/>=<sp/>_merger;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="class_store_1aafca3d94b33ecd4c642995a6603a860e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_store_1aafca3d94b33ecd4c642995a6603a860e" kindref="member">Store::setDelta</ref>(<ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>_delta)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref><sp/>=<sp/>_delta;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="class_store_1a85c3ab730b3d083f79eeacc5110ddf49" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_store_1a85c3ab730b3d083f79eeacc5110ddf49" kindref="member">Store::copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;Store&gt;<sp/>new_store<sp/>=<sp/>std::make_shared&lt;Store&gt;();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>new_store-&gt;main_tables.push_back(<ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>[i]-&gt;<ref refid="class_store_1a85c3ab730b3d083f79eeacc5110ddf49" kindref="member">copy</ref>());</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>new_store-&gt;delta<sp/>=<sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;copy();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_store_1a64e75844b85ac164809b2df60d826f06" kindref="member">merger</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>new_store-&gt;merger<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>new_store-&gt;merger<sp/>=<sp/><ref refid="class_store_1a64e75844b85ac164809b2df60d826f06" kindref="member">merger</ref>-&gt;<ref refid="class_table_merger_1acb1eadc74fc4941685ca982bd0001f0a" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_store;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="class_store_1a35355e41ebb792f40f9f4cfd02100922" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_abstract_table_8h_1ae3a004c859daed205eb7639b1e993ce4" kindref="member">attr_vectors_t</ref><sp/><ref refid="class_store_1a35355e41ebb792f40f9f4cfd02100922" kindref="member" tooltip="get underlying attribute vectors for column">Store::getAttributeVectors</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><ref refid="_abstract_table_8h_1ae3a004c859daed205eb7639b1e993ce4" kindref="member">attr_vectors_t</ref><sp/>tables;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>:<sp/><ref refid="class_store_1a5055f718396ec445bfb582323e49d55f" kindref="member">main_tables</ref>)<sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>subtables<sp/>=<sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>-&gt;getAttributeVectors(column);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>tables.insert(tables.end(),<sp/>subtables.begin(),<sp/>subtables.end());</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>subtables<sp/>=<sp/><ref refid="class_store_1a60cfc2584c21833970feb18e4465c219" kindref="member">delta</ref>-&gt;getAttributeVectors(column);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>tables.insert(tables.end(),<sp/>subtables.begin(),<sp/>subtables.end());</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tables;</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/storage/Store.cpp"/>
  </compounddef>
</doxygen>
