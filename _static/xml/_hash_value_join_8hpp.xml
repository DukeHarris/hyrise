<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_hash_value_join_8hpp" kind="file">
    <compoundname>HashValueJoin.hpp</compoundname>
    <includes local="no">unordered_map</includes>
    <includes local="no">memory</includes>
    <includes refid="types_8h" local="no">helper/types.h</includes>
    <includes refid="_abstract_table_8h" local="no">storage/AbstractTable.h</includes>
    <includes refid="_plan_operation_8h" local="no">access/PlanOperation.h</includes>
    <includes refid="_pointer_calculator_factory_8h" local="no">storage/PointerCalculatorFactory.h</includes>
    <includedby refid="access_8h" local="no">src/lib/access.h</includedby>
    <incdepgraph>
      <node id="4449">
        <label>list</label>
      </node>
      <node id="4437">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="4489">
        <label>queue</label>
      </node>
      <node id="4429">
        <label>limits</label>
      </node>
      <node id="4468">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="4443">
        <label>assert.h</label>
      </node>
      <node id="4439">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="4459">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="4427">
        <label>cstdint</label>
      </node>
      <node id="4456">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4445" relation="include">
        </childnode>
        <childnode refid="4457" relation="include">
        </childnode>
      </node>
      <node id="4435">
        <label>stdint.h</label>
      </node>
      <node id="4455">
        <label>stdlib.h</label>
      </node>
      <node id="4453">
        <label>errno.h</label>
      </node>
      <node id="4475">
        <label>helper/epoch.h</label>
        <link refid="epoch_8h"/>
        <childnode refid="4435" relation="include">
        </childnode>
      </node>
      <node id="4432">
        <label>stdexcept</label>
      </node>
      <node id="4486">
        <label>helper/HwlocHelper.h</label>
        <link refid="_hwloc_helper_8h"/>
        <childnode refid="4487" relation="include">
        </childnode>
      </node>
      <node id="4428">
        <label>string</label>
      </node>
      <node id="4481">
        <label>taskscheduler.h</label>
        <link refid="taskscheduler_8h"/>
        <childnode refid="4482" relation="include">
        </childnode>
        <childnode refid="4488" relation="include">
        </childnode>
        <childnode refid="4491" relation="include">
        </childnode>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4490" relation="include">
        </childnode>
        <childnode refid="4483" relation="include">
        </childnode>
        <childnode refid="4492" relation="include">
        </childnode>
        <childnode refid="4493" relation="include">
        </childnode>
      </node>
      <node id="4488">
        <label>taskscheduler/SimpleTaskScheduler.h</label>
        <link refid="_simple_task_scheduler_8h"/>
        <childnode refid="4482" relation="include">
        </childnode>
        <childnode refid="4485" relation="include">
        </childnode>
        <childnode refid="4430" relation="include">
        </childnode>
        <childnode refid="4489" relation="include">
        </childnode>
        <childnode refid="4477" relation="include">
        </childnode>
        <childnode refid="4471" relation="include">
        </childnode>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4490" relation="include">
        </childnode>
        <childnode refid="4486" relation="include">
        </childnode>
      </node>
      <node id="4465">
        <label>map</label>
      </node>
      <node id="4476">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="4430" relation="include">
        </childnode>
        <childnode refid="4477" relation="include">
        </childnode>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4478" relation="include">
        </childnode>
        <childnode refid="4428" relation="include">
        </childnode>
      </node>
      <node id="4485">
        <label>unordered_set</label>
      </node>
      <node id="4441">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="4442" relation="include">
        </childnode>
        <childnode refid="4461" relation="include">
        </childnode>
      </node>
      <node id="4452">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="4453" relation="include">
        </childnode>
        <childnode refid="4454" relation="include">
        </childnode>
        <childnode refid="4455" relation="include">
        </childnode>
      </node>
      <node id="4496">
        <label>storage/PointerCalculatorFactory.h</label>
        <link refid="_pointer_calculator_factory_8h"/>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4426" relation="include">
        </childnode>
        <childnode refid="4434" relation="include">
        </childnode>
      </node>
      <node id="4487">
        <label>hwloc.h</label>
      </node>
      <node id="4464">
        <label>exception</label>
      </node>
      <node id="4470">
        <label>access/OutputTask.h</label>
        <link refid="_output_task_8h"/>
        <childnode refid="4471" relation="include">
        </childnode>
        <childnode refid="4435" relation="include">
        </childnode>
        <childnode refid="4472" relation="include">
        </childnode>
        <childnode refid="4430" relation="include">
        </childnode>
        <childnode refid="4465" relation="include">
        </childnode>
        <childnode refid="4473" relation="include">
        </childnode>
        <childnode refid="4474" relation="include">
        </childnode>
        <childnode refid="4475" relation="include">
        </childnode>
        <childnode refid="4476" relation="include">
        </childnode>
      </node>
      <node id="4447">
        <label>stddef.h</label>
      </node>
      <node id="4490">
        <label>taskscheduler/CoreBoundTaskQueue.h</label>
        <link refid="_core_bound_task_queue_8h"/>
        <childnode refid="4484" relation="include">
        </childnode>
        <childnode refid="4489" relation="include">
        </childnode>
        <childnode refid="4483" relation="include">
        </childnode>
      </node>
      <node id="4461">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4445" relation="include">
        </childnode>
        <childnode refid="4456" relation="include">
        </childnode>
        <childnode refid="4457" relation="include">
        </childnode>
        <childnode refid="4462" relation="include">
        </childnode>
        <childnode refid="4460" relation="include">
        </childnode>
        <childnode refid="4464" relation="include">
        </childnode>
        <childnode refid="4430" relation="include">
        </childnode>
        <childnode refid="4465" relation="include">
        </childnode>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4466" relation="include">
        </childnode>
        <childnode refid="4467" relation="include">
        </childnode>
        <childnode refid="4468" relation="include">
        </childnode>
      </node>
      <node id="4436">
        <label>ostream</label>
      </node>
      <node id="4474">
        <label>json.h</label>
      </node>
      <node id="4466">
        <label>limits.h</label>
      </node>
      <node id="4457">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="4458" relation="include">
        </childnode>
        <childnode refid="4459" relation="include">
        </childnode>
      </node>
      <node id="4445">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="4430" relation="include">
        </childnode>
        <childnode refid="4428" relation="include">
        </childnode>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4446" relation="include">
        </childnode>
        <childnode refid="4450" relation="include">
        </childnode>
        <childnode refid="4452" relation="include">
        </childnode>
        <childnode refid="4434" relation="include">
        </childnode>
      </node>
      <node id="4478">
        <label>condition_variable</label>
      </node>
      <node id="4463">
        <label>string.h</label>
      </node>
      <node id="4495">
        <label>access/BasicParser.h</label>
        <link refid="_basic_parser_8h"/>
        <childnode refid="4432" relation="include">
        </childnode>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4474" relation="include">
        </childnode>
      </node>
      <node id="4431">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="4429" relation="include">
        </childnode>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4432" relation="include">
        </childnode>
        <childnode refid="4430" relation="include">
        </childnode>
        <childnode refid="4428" relation="include">
        </childnode>
        <childnode refid="4426" relation="include">
        </childnode>
        <childnode refid="4433" relation="include">
        </childnode>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4440" relation="include">
        </childnode>
        <childnode refid="4441" relation="include">
        </childnode>
      </node>
      <node id="4492">
        <label>taskscheduler/WSCoreBoundTaskQueue.h</label>
        <link refid="_w_s_core_bound_task_queue_8h"/>
        <childnode refid="4483" relation="include">
        </childnode>
        <childnode refid="4493" relation="include">
        </childnode>
      </node>
      <node id="4433">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="4467">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="4430">
        <label>vector</label>
      </node>
      <node id="4491">
        <label>taskscheduler/SharedScheduler.h</label>
        <link refid="_shared_scheduler_8h"/>
        <childnode refid="4482" relation="include">
        </childnode>
        <childnode refid="4488" relation="include">
        </childnode>
        <childnode refid="4490" relation="include">
        </childnode>
        <childnode refid="4432" relation="include">
        </childnode>
      </node>
      <node id="4473">
        <label>utility</label>
      </node>
      <node id="4426">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4427" relation="include">
        </childnode>
        <childnode refid="4428" relation="include">
        </childnode>
        <childnode refid="4429" relation="include">
        </childnode>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4430" relation="include">
        </childnode>
      </node>
      <node id="4483">
        <label>taskscheduler/AbstractTaskQueue.h</label>
        <link refid="_abstract_task_queue_8h"/>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4477" relation="include">
        </childnode>
        <childnode refid="4484" relation="include">
        </childnode>
        <childnode refid="4478" relation="include">
        </childnode>
        <childnode refid="4471" relation="include">
        </childnode>
        <childnode refid="4476" relation="include">
        </childnode>
      </node>
      <node id="4458">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="4423">
        <label>src/lib/access/HashValueJoin.hpp</label>
        <link refid="HashValueJoin.hpp"/>
        <childnode refid="4424" relation="include">
        </childnode>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4426" relation="include">
        </childnode>
        <childnode refid="4431" relation="include">
        </childnode>
        <childnode refid="4469" relation="include">
        </childnode>
        <childnode refid="4496" relation="include">
        </childnode>
      </node>
      <node id="4446">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="4447" relation="include">
        </childnode>
        <childnode refid="4448" relation="include">
        </childnode>
        <childnode refid="4449" relation="include">
        </childnode>
        <childnode refid="4432" relation="include">
        </childnode>
      </node>
      <node id="4480">
        <label>access/QueryParser.h</label>
        <link refid="_query_parser_8h"/>
        <childnode refid="4465" relation="include">
        </childnode>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4430" relation="include">
        </childnode>
        <childnode refid="4428" relation="include">
        </childnode>
        <childnode refid="4432" relation="include">
        </childnode>
        <childnode refid="4474" relation="include">
        </childnode>
        <childnode refid="4481" relation="include">
        </childnode>
        <childnode refid="4495" relation="include">
        </childnode>
      </node>
      <node id="4479">
        <label>access/OperationData.h</label>
        <link refid="_operation_data_8h"/>
        <childnode refid="4430" relation="include">
        </childnode>
        <childnode refid="4426" relation="include">
        </childnode>
        <childnode refid="4434" relation="include">
        </childnode>
      </node>
      <node id="4472">
        <label>time.h</label>
      </node>
      <node id="4444">
        <label>iostream</label>
      </node>
      <node id="4440">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4428" relation="include">
        </childnode>
        <childnode refid="4432" relation="include">
        </childnode>
      </node>
      <node id="4482">
        <label>taskscheduler/AbstractTaskScheduler.h</label>
        <link refid="_abstract_task_scheduler_8h"/>
        <childnode refid="4476" relation="include">
        </childnode>
        <childnode refid="4483" relation="include">
        </childnode>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4485" relation="include">
        </childnode>
        <childnode refid="4444" relation="include">
        </childnode>
        <childnode refid="4471" relation="include">
        </childnode>
        <childnode refid="4486" relation="include">
        </childnode>
      </node>
      <node id="4494">
        <label>deque</label>
      </node>
      <node id="4424">
        <label>unordered_map</label>
      </node>
      <node id="4438">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="4493">
        <label>taskscheduler/WSSimpleTaskScheduler.h</label>
        <link refid="_w_s_simple_task_scheduler_8h"/>
        <childnode refid="4482" relation="include">
        </childnode>
        <childnode refid="4492" relation="include">
        </childnode>
        <childnode refid="4494" relation="include">
        </childnode>
        <childnode refid="4444" relation="include">
        </childnode>
        <childnode refid="4486" relation="include">
        </childnode>
      </node>
      <node id="4477">
        <label>mutex</label>
      </node>
      <node id="4460">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="4484">
        <label>thread</label>
      </node>
      <node id="4450">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="4444" relation="include">
        </childnode>
        <childnode refid="4427" relation="include">
        </childnode>
        <childnode refid="4451" relation="include">
        </childnode>
      </node>
      <node id="4442">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="4443" relation="include">
        </childnode>
        <childnode refid="4444" relation="include">
        </childnode>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4445" relation="include">
        </childnode>
        <childnode refid="4456" relation="include">
        </childnode>
        <childnode refid="4457" relation="include">
        </childnode>
        <childnode refid="4460" relation="include">
        </childnode>
        <childnode refid="4458" relation="include">
        </childnode>
      </node>
      <node id="4469">
        <label>access/PlanOperation.h</label>
        <link refid="_plan_operation_8h"/>
        <childnode refid="4470" relation="include">
        </childnode>
        <childnode refid="4479" relation="include">
        </childnode>
        <childnode refid="4480" relation="include">
        </childnode>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4426" relation="include">
        </childnode>
        <childnode refid="4431" relation="include">
        </childnode>
        <childnode refid="4474" relation="include">
        </childnode>
      </node>
      <node id="4448">
        <label>algorithm</label>
      </node>
      <node id="4471">
        <label>log4cxx/logger.h</label>
      </node>
      <node id="4454">
        <label>stdio.h</label>
      </node>
      <node id="4451">
        <label>cstring</label>
      </node>
      <node id="4462">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="4430" relation="include">
        </childnode>
        <childnode refid="4444" relation="include">
        </childnode>
        <childnode refid="4449" relation="include">
        </childnode>
        <childnode refid="4425" relation="include">
        </childnode>
        <childnode refid="4463" relation="include">
        </childnode>
        <childnode refid="4443" relation="include">
        </childnode>
        <childnode refid="4459" relation="include">
        </childnode>
      </node>
      <node id="4425">
        <label>memory</label>
      </node>
      <node id="4434">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="4430" relation="include">
        </childnode>
        <childnode refid="4428" relation="include">
        </childnode>
        <childnode refid="4432" relation="include">
        </childnode>
        <childnode refid="4435" relation="include">
        </childnode>
        <childnode refid="4436" relation="include">
        </childnode>
        <childnode refid="4437" relation="include">
        </childnode>
        <childnode refid="4438" relation="include">
        </childnode>
        <childnode refid="4439" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4506">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="4502">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="4505">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="4499">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="4503">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="4500">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="4497">
        <label>src/lib/access/HashValueJoin.hpp</label>
        <link refid="HashValueJoin.hpp"/>
        <childnode refid="4498" relation="include">
        </childnode>
      </node>
      <node id="4501">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="4498">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="4499" relation="include">
        </childnode>
        <childnode refid="4500" relation="include">
        </childnode>
        <childnode refid="4501" relation="include">
        </childnode>
        <childnode refid="4502" relation="include">
        </childnode>
        <childnode refid="4503" relation="include">
        </childnode>
        <childnode refid="4504" relation="include">
        </childnode>
        <childnode refid="4505" relation="include">
        </childnode>
        <childnode refid="4506" relation="include">
        </childnode>
      </node>
      <node id="4504">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_hash_value_join" prot="public">HashValueJoin</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_ACCESS_HASHVALUEJOIN_HPP_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_ACCESS_HASHVALUEJOIN_HPP_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="types_8h" kindref="compound">helper/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_abstract_table_8h" kindref="compound">storage/AbstractTable.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_plan_operation_8h" kindref="compound">access/PlanOperation.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_pointer_calculator_factory_8h" kindref="compound">storage/PointerCalculatorFactory.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="15" refid="class_hash_value_join" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_hash_value_join" kindref="compound">HashValueJoin</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class___plan_operation" kindref="compound">_PlanOperation</ref><sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="class_hash_value_join_1ab2c291a512d7b6430e4d3501818a418b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::unordered_multimap&lt;T,<sp/>pos_t&gt;<sp/><ref refid="class_hash_value_join_1ab2c291a512d7b6430e4d3501818a418b" kindref="member">map_type</ref>;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_hash_value_join_1a4dfa289955b4b65a694fcfcd7f079fa1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_hash_value_join_1a4dfa289955b4b65a694fcfcd7f079fa1" kindref="member">HashValueJoin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_hash_value_join_1ad040afe564973b86ac7837cbd001cd6c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_hash_value_join_1ad040afe564973b86ac7837cbd001cd6c" kindref="member">~HashValueJoin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Expects<sp/>two<sp/>inputs</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@return<sp/>in<sp/>the<sp/>return<sp/>value,<sp/>returns<sp/>the<sp/>second<sp/>input<sp/>and<sp/>the<sp/>resulting<sp/>positions</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_hash_value_join_1acda5441cde585f4482f5edc439bf1056" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_hash_value_join_1acda5441cde585f4482f5edc439bf1056" kindref="member">executePlanOperation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class___plan_operation_1a77bc4ab6926bfefd6b4550239ea0ed33" kindref="member">producesPositions</ref>)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;HashValueJoin<sp/>execute()<sp/>not<sp/>supported<sp/>with<sp/>generatesPositions<sp/>==<sp/>false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_hash_value_join_1ab2c291a512d7b6430e4d3501818a418b" kindref="member">map_type</ref><sp/><ref refid="namespacehyrise_1_1access_1a186e18305f1cfc707e738f2aa04556fa" kindref="member">hash</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;pos_t&gt;<sp/>*build_pos<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;pos_t&gt;();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;pos_t&gt;<sp/>*probe_pos<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;pos_t&gt;();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>value;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>use<sp/>the<sp/>smaller<sp/>table<sp/>as<sp/>the<sp/>&apos;build&apos;<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref><sp/>build_table;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref><sp/>probe_table;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>build_field,<sp/>probe_field;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class___plan_operation_1a12e425b31715103245faeb2bb7b8b8b8" kindref="member">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(0)-&gt;size()<sp/>&lt;=<sp/><ref refid="class___plan_operation_1a12e425b31715103245faeb2bb7b8b8b8" kindref="member">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(1)-&gt;size())<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>build_table<sp/>=<sp/><ref refid="class___plan_operation_1a12e425b31715103245faeb2bb7b8b8b8" kindref="member">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(0);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probe_table<sp/>=<sp/><ref refid="class___plan_operation_1a12e425b31715103245faeb2bb7b8b8b8" kindref="member">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(1);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>build_field<sp/>=<sp/><ref refid="class___plan_operation_1aecccffa96d058ec8bead4d2c2a39e0e0" kindref="member">_field_definition</ref>[0];</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probe_field<sp/>=<sp/><ref refid="class___plan_operation_1aecccffa96d058ec8bead4d2c2a39e0e0" kindref="member">_field_definition</ref>[1];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>build_table<sp/>=<sp/><ref refid="class___plan_operation_1a12e425b31715103245faeb2bb7b8b8b8" kindref="member">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(1);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probe_table<sp/>=<sp/><ref refid="class___plan_operation_1a12e425b31715103245faeb2bb7b8b8b8" kindref="member">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(0);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>build_field<sp/>=<sp/><ref refid="class___plan_operation_1aecccffa96d058ec8bead4d2c2a39e0e0" kindref="member">_field_definition</ref>[1];</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>probe_field<sp/>=<sp/><ref refid="class___plan_operation_1aecccffa96d058ec8bead4d2c2a39e0e0" kindref="member">_field_definition</ref>[0];</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>hash<sp/>using<sp/>the<sp/>smaller<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>input_size<sp/>=<sp/>build_table-&gt;size();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="storage__types_8h_1a866dd5ae291f599db49986f6aa5ba77a" kindref="member">pos_t</ref><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>input_size;<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>build_table-&gt;getValue&lt;T&gt;(build_field,<sp/>row);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hash.insert(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>map_type::value_type(value,<sp/>row));</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>probe<sp/>the<sp/>hash<sp/>for<sp/>each<sp/>row<sp/>in<sp/>the<sp/>bigger<sp/>table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>input_size<sp/>=<sp/>probe_table-&gt;size();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>input_size;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>probe_table-&gt;getValue&lt;T&gt;(probe_field,<sp/>row);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;typename<sp/>map_type::iterator,<sp/>typename<sp/>map_type::iterator&gt;<sp/>pair1<sp/>=<sp/>hash.equal_range(value);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>pair1.first<sp/>!=<sp/>pair1.second;<sp/>++pair1.first)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>build_pos-&gt;push_back(pair1.first-&gt;second);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probe_pos-&gt;push_back(row);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>input.getTable(0)<sp/>will<sp/>always<sp/>be<sp/>the<sp/>left<sp/>part<sp/>of<sp/>our<sp/>output,<sp/>no<sp/>matter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>it&apos;s<sp/>the<sp/>build<sp/>table<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;hyrise::storage::atable_ptr_t<sp/>&gt;<sp/>parts;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>Worst<sp/>stuff<sp/>ever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>build_pc<sp/>=<sp/>std::const_pointer_cast&lt;<ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>&gt;(std::dynamic_pointer_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>&gt;(<ref refid="class_pointer_calculator_factory_1a128c89177e81eddae87a16909c801230" kindref="member">PointerCalculatorFactory::createPointerCalculatorNonRef</ref>(build_table,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>build_pos)));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>probe_pc<sp/>=<sp/>std::const_pointer_cast&lt;AbstractTable&gt;(std::dynamic_pointer_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>AbstractTable&gt;(<ref refid="class_pointer_calculator_factory_1a128c89177e81eddae87a16909c801230" kindref="member">PointerCalculatorFactory::createPointerCalculatorNonRef</ref>(probe_table,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>probe_pos)));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(build_table<sp/>==<sp/><ref refid="class___plan_operation_1a12e425b31715103245faeb2bb7b8b8b8" kindref="member">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(0))<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parts.push_back(build_pc);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parts.push_back(probe_pc);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parts.push_back(probe_pc);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parts.push_back(build_pc);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TOOD<sp/>add<sp/>TableView</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class___plan_operation_1aa6fad4a2bf49850d1947ab2d8c2f9931" kindref="member">addResult</ref>(std::make_shared&lt;const<sp/>MutableVerticalTable&gt;(parts));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_hash_value_join_1a067fe740e129dc679e628766542de417" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_hash_value_join_1a067fe740e129dc679e628766542de417" kindref="member">vname</ref>()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;HashValueJoin&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">};</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_ACCESS_HASHVALUEJOIN_HPP_</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/access/HashValueJoin.hpp"/>
  </compounddef>
</doxygen>
