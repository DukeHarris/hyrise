<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="pred___predicate_builder_8cpp" kind="file">
    <compoundname>pred_PredicateBuilder.cpp</compoundname>
    <includes refid="pred___predicate_builder_8h" local="yes">pred_PredicateBuilder.h</includes>
    <incdepgraph>
      <node id="9366">
        <label>list</label>
      </node>
      <node id="9352">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="9347">
        <label>limits</label>
      </node>
      <node id="9384">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="9360">
        <label>assert.h</label>
      </node>
      <node id="9354">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="9375">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="9345">
        <label>cstdint</label>
      </node>
      <node id="9385">
        <label>expression_types.h</label>
        <link refid="expression__types_8h"/>
        <childnode refid="9381" relation="include">
        </childnode>
        <childnode refid="9346" relation="include">
        </childnode>
        <childnode refid="9386" relation="include">
        </childnode>
      </node>
      <node id="9391">
        <label>pred_CompoundExpression.h</label>
        <link refid="pred___compound_expression_8h"/>
        <childnode refid="9340" relation="include">
        </childnode>
      </node>
      <node id="9372">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="9349" relation="include">
        </childnode>
        <childnode refid="9362" relation="include">
        </childnode>
        <childnode refid="9373" relation="include">
        </childnode>
      </node>
      <node id="9350">
        <label>stdint.h</label>
      </node>
      <node id="9371">
        <label>stdlib.h</label>
      </node>
      <node id="9370">
        <label>errno.h</label>
      </node>
      <node id="9342">
        <label>stdexcept</label>
      </node>
      <node id="9346">
        <label>string</label>
      </node>
      <node id="9340">
        <label>pred_common.h</label>
        <link refid="pred__common_8h"/>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9342" relation="include">
        </childnode>
        <childnode refid="9343" relation="include">
        </childnode>
        <childnode refid="9344" relation="include">
        </childnode>
        <childnode refid="9349" relation="include">
        </childnode>
        <childnode refid="9355" relation="include">
        </childnode>
        <childnode refid="9358" relation="include">
        </childnode>
        <childnode refid="9385" relation="include">
        </childnode>
        <childnode refid="9387" relation="include">
        </childnode>
        <childnode refid="9388" relation="include">
        </childnode>
        <childnode refid="9390" relation="include">
        </childnode>
      </node>
      <node id="9381">
        <label>map</label>
      </node>
      <node id="9358">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="9359" relation="include">
        </childnode>
        <childnode refid="9377" relation="include">
        </childnode>
      </node>
      <node id="9369">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="9370" relation="include">
        </childnode>
        <childnode refid="9343" relation="include">
        </childnode>
        <childnode refid="9371" relation="include">
        </childnode>
      </node>
      <node id="9380">
        <label>exception</label>
      </node>
      <node id="9364">
        <label>stddef.h</label>
      </node>
      <node id="9377">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="9349" relation="include">
        </childnode>
        <childnode refid="9362" relation="include">
        </childnode>
        <childnode refid="9372" relation="include">
        </childnode>
        <childnode refid="9373" relation="include">
        </childnode>
        <childnode refid="9378" relation="include">
        </childnode>
        <childnode refid="9376" relation="include">
        </childnode>
        <childnode refid="9380" relation="include">
        </childnode>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9381" relation="include">
        </childnode>
        <childnode refid="9348" relation="include">
        </childnode>
        <childnode refid="9382" relation="include">
        </childnode>
        <childnode refid="9383" relation="include">
        </childnode>
        <childnode refid="9384" relation="include">
        </childnode>
      </node>
      <node id="9351">
        <label>ostream</label>
      </node>
      <node id="9386">
        <label>json.h</label>
      </node>
      <node id="9382">
        <label>limits.h</label>
      </node>
      <node id="9373">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="9374" relation="include">
        </childnode>
        <childnode refid="9375" relation="include">
        </childnode>
      </node>
      <node id="9362">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9346" relation="include">
        </childnode>
        <childnode refid="9348" relation="include">
        </childnode>
        <childnode refid="9363" relation="include">
        </childnode>
        <childnode refid="9367" relation="include">
        </childnode>
        <childnode refid="9369" relation="include">
        </childnode>
        <childnode refid="9349" relation="include">
        </childnode>
      </node>
      <node id="9389">
        <label>access/AbstractExpression.h</label>
        <link refid="_abstract_expression_8h"/>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9344" relation="include">
        </childnode>
      </node>
      <node id="9379">
        <label>string.h</label>
      </node>
      <node id="9337">
        <label>src/lib/access/pred_PredicateBuilder.cpp</label>
        <link refid="pred_PredicateBuilder.cpp"/>
        <childnode refid="9338" relation="include">
        </childnode>
      </node>
      <node id="9355">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="9347" relation="include">
        </childnode>
        <childnode refid="9348" relation="include">
        </childnode>
        <childnode refid="9342" relation="include">
        </childnode>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9346" relation="include">
        </childnode>
        <childnode refid="9344" relation="include">
        </childnode>
        <childnode refid="9356" relation="include">
        </childnode>
        <childnode refid="9349" relation="include">
        </childnode>
        <childnode refid="9357" relation="include">
        </childnode>
        <childnode refid="9358" relation="include">
        </childnode>
      </node>
      <node id="9356">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="9383">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="9341">
        <label>vector</label>
      </node>
      <node id="9339">
        <label>stack</label>
      </node>
      <node id="9387">
        <label>join_predicates.h</label>
        <link refid="join__predicates_8h"/>
        <childnode refid="9344" relation="include">
        </childnode>
        <childnode refid="9385" relation="include">
        </childnode>
      </node>
      <node id="9344">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9346" relation="include">
        </childnode>
        <childnode refid="9347" relation="include">
        </childnode>
        <childnode refid="9348" relation="include">
        </childnode>
        <childnode refid="9341" relation="include">
        </childnode>
      </node>
      <node id="9388">
        <label>pred_SimpleExpression.h</label>
        <link refid="pred___simple_expression_8h"/>
        <childnode refid="9349" relation="include">
        </childnode>
        <childnode refid="9344" relation="include">
        </childnode>
        <childnode refid="9389" relation="include">
        </childnode>
      </node>
      <node id="9374">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="9363">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="9364" relation="include">
        </childnode>
        <childnode refid="9365" relation="include">
        </childnode>
        <childnode refid="9366" relation="include">
        </childnode>
        <childnode refid="9342" relation="include">
        </childnode>
      </node>
      <node id="9361">
        <label>iostream</label>
      </node>
      <node id="9357">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="9349" relation="include">
        </childnode>
        <childnode refid="9346" relation="include">
        </childnode>
        <childnode refid="9342" relation="include">
        </childnode>
      </node>
      <node id="9353">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="9376">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="9367">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="9361" relation="include">
        </childnode>
        <childnode refid="9345" relation="include">
        </childnode>
        <childnode refid="9368" relation="include">
        </childnode>
      </node>
      <node id="9390">
        <label>pred_SimpleFieldExpression.h</label>
        <link refid="pred___simple_field_expression_8h"/>
        <childnode refid="9344" relation="include">
        </childnode>
        <childnode refid="9340" relation="include">
        </childnode>
      </node>
      <node id="9359">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="9360" relation="include">
        </childnode>
        <childnode refid="9361" relation="include">
        </childnode>
        <childnode refid="9348" relation="include">
        </childnode>
        <childnode refid="9349" relation="include">
        </childnode>
        <childnode refid="9362" relation="include">
        </childnode>
        <childnode refid="9372" relation="include">
        </childnode>
        <childnode refid="9373" relation="include">
        </childnode>
        <childnode refid="9376" relation="include">
        </childnode>
        <childnode refid="9374" relation="include">
        </childnode>
      </node>
      <node id="9365">
        <label>algorithm</label>
      </node>
      <node id="9343">
        <label>stdio.h</label>
      </node>
      <node id="9368">
        <label>cstring</label>
      </node>
      <node id="9378">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9361" relation="include">
        </childnode>
        <childnode refid="9366" relation="include">
        </childnode>
        <childnode refid="9348" relation="include">
        </childnode>
        <childnode refid="9379" relation="include">
        </childnode>
        <childnode refid="9360" relation="include">
        </childnode>
        <childnode refid="9375" relation="include">
        </childnode>
      </node>
      <node id="9338">
        <label>pred_PredicateBuilder.h</label>
        <link refid="pred___predicate_builder_8h"/>
        <childnode refid="9339" relation="include">
        </childnode>
        <childnode refid="9340" relation="include">
        </childnode>
        <childnode refid="9391" relation="include">
        </childnode>
      </node>
      <node id="9348">
        <label>memory</label>
      </node>
      <node id="9349">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="9341" relation="include">
        </childnode>
        <childnode refid="9346" relation="include">
        </childnode>
        <childnode refid="9342" relation="include">
        </childnode>
        <childnode refid="9350" relation="include">
        </childnode>
        <childnode refid="9351" relation="include">
        </childnode>
        <childnode refid="9352" relation="include">
        </childnode>
        <childnode refid="9353" relation="include">
        </childnode>
        <childnode refid="9354" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pred___predicate_builder_8h" kindref="compound">pred_PredicateBuilder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_predicate_builder_1ab28f367d90f0edb3e624d3f980061112" refkind="member"><highlight class="normal"><ref refid="class_predicate_builder_1ab28f367d90f0edb3e624d3f980061112" kindref="member">PredicateBuilder::PredicateBuilder</ref>():<sp/><ref refid="namespaceut_1aa1bc633f5abd3833ba737260860f0594" kindref="member">root</ref>(<ref refid="csb__tree_8cpp_1ab979d9d4b4923f7c54d6caa6e1a61936" kindref="member">nullptr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="class_predicate_builder_1a8642e80d6945743fb76b635ee7742caf" refkind="member"><highlight class="normal"><ref refid="class_predicate_builder_1a8642e80d6945743fb76b635ee7742caf" kindref="member">PredicateBuilder::~PredicateBuilder</ref>()<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="class_predicate_builder_1aa31b28dc516d1022a6043f71d384655b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_predicate_builder_1aa31b28dc516d1022a6043f71d384655b" kindref="member">PredicateBuilder::add</ref>(<ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_predicate_builder_1ae8ddaace1008e2996815ef73e7f3e0f1" kindref="member">root</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_predicate_builder_1ae8ddaace1008e2996815ef73e7f3e0f1" kindref="member">root</ref><sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_predicate_builder_1a115ed5db1167ec899219d3f683f42712" kindref="member">previous</ref>.top()-&gt;add(e);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_predicate_builder_1a115ed5db1167ec899219d3f683f42712" kindref="member">previous</ref>.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/><ref refid="class_predicate_builder_1a115ed5db1167ec899219d3f683f42712" kindref="member">previous</ref>.top()-&gt;isSetup())<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_predicate_builder_1a115ed5db1167ec899219d3f683f42712" kindref="member">previous</ref>.pop();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_predicate_builder_1a90372f7acd76bef19b5a9ae6c7d38c0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_predicate_builder_1aa31b28dc516d1022a6043f71d384655b" kindref="member">PredicateBuilder::add</ref>(<ref refid="class_compound_expression" kindref="compound">CompoundExpression</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_predicate_builder_1ae8ddaace1008e2996815ef73e7f3e0f1" kindref="member">root</ref><sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_predicate_builder_1ae8ddaace1008e2996815ef73e7f3e0f1" kindref="member">root</ref><sp/>=<sp/>e;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_predicate_builder_1a115ed5db1167ec899219d3f683f42712" kindref="member">previous</ref>.top()-&gt;add(e);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="class_predicate_builder_1a115ed5db1167ec899219d3f683f42712" kindref="member">previous</ref>.push(e);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="class_predicate_builder_1a79a44caefa8c4c6abaa717dfe29126dc" refkind="member"><highlight class="normal"><ref refid="class_simple_expression" kindref="compound">SimpleExpression</ref><sp/>*<ref refid="class_predicate_builder_1a79a44caefa8c4c6abaa717dfe29126dc" kindref="member">PredicateBuilder::build</ref>()<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_predicate_builder_1ae8ddaace1008e2996815ef73e7f3e0f1" kindref="member">root</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/access/pred_PredicateBuilder.cpp"/>
  </compounddef>
</doxygen>
