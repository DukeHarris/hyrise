<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="insertonly__merger_8cpp" kind="file">
    <compoundname>insertonly_merger.cpp</compoundname>
    <includes refid="insertonly__merger_8h" local="yes">access/insertonly_merger.h</includes>
    <includes local="no">set</includes>
    <includes refid="_raw_table_8h" local="yes">storage/RawTable.h</includes>
    <includes refid="_simple_store_8h" local="yes">storage/SimpleStore.h</includes>
    <includes refid="meta__storage_8h" local="yes">storage/meta_storage.h</includes>
    <includes refid="insertonly__valid_8h" local="yes">access/insertonly_valid.h</includes>
    <incdepgraph>
      <node id="4997">
        <label>list</label>
      </node>
      <node id="5023">
        <label>boost/mpl/size.hpp</label>
      </node>
      <node id="5038">
        <label>atomic</label>
      </node>
      <node id="5041">
        <label>storage/BaseAllocatedAttributeVector.h</label>
        <link refid="_base_allocated_attribute_vector_8h"/>
        <childnode refid="5034" relation="include">
        </childnode>
        <childnode refid="5002" relation="include">
        </childnode>
      </node>
      <node id="4985">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="4975">
        <label>limits</label>
      </node>
      <node id="5016">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="5024">
        <label>storage/AbstractAllocatedTable.h</label>
        <link refid="_abstract_allocated_table_8h"/>
        <childnode refid="4994" relation="include">
        </childnode>
        <childnode refid="4998" relation="include">
        </childnode>
        <childnode refid="5000" relation="include">
        </childnode>
      </node>
      <node id="4970">
        <label>access/insertonly_merger.h</label>
        <link refid="insertonly__merger_8h"/>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4972" relation="include">
        </childnode>
        <childnode refid="4977" relation="include">
        </childnode>
        <childnode refid="5017" relation="include">
        </childnode>
      </node>
      <node id="4991">
        <label>assert.h</label>
      </node>
      <node id="4987">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="5007">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="4973">
        <label>cstdint</label>
      </node>
      <node id="5032">
        <label>storage/MutableVerticalTable.h</label>
        <link refid="_mutable_vertical_table_8h"/>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="4972" relation="include">
        </childnode>
        <childnode refid="5033" relation="include">
        </childnode>
        <childnode refid="5045" relation="include">
        </childnode>
        <childnode refid="4988" relation="include">
        </childnode>
        <childnode refid="4979" relation="include">
        </childnode>
      </node>
      <node id="5037">
        <label>storage/FixedLengthVector.h</label>
        <link refid="_fixed_length_vector_8h"/>
        <childnode refid="5038" relation="include">
        </childnode>
        <childnode refid="5001" relation="include">
        </childnode>
        <childnode refid="5039" relation="include">
        </childnode>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="5040" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="4980" relation="include">
        </childnode>
        <childnode refid="5031" relation="include">
        </childnode>
        <childnode refid="5007" relation="include">
        </childnode>
        <childnode refid="5035" relation="include">
        </childnode>
        <childnode refid="5034" relation="include">
        </childnode>
        <childnode refid="5041" relation="include">
        </childnode>
        <childnode refid="4994" relation="include">
        </childnode>
        <childnode refid="4998" relation="include">
        </childnode>
      </node>
      <node id="5004">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="4982" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
      </node>
      <node id="5036">
        <label>storage/AttributeVectorFactory.h</label>
        <link refid="_attribute_vector_factory_8h"/>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="5034" relation="include">
        </childnode>
        <childnode refid="5037" relation="include">
        </childnode>
        <childnode refid="5042" relation="include">
        </childnode>
      </node>
      <node id="4983">
        <label>stdint.h</label>
      </node>
      <node id="5003">
        <label>stdlib.h</label>
      </node>
      <node id="5044">
        <label>cmath</label>
      </node>
      <node id="5001">
        <label>errno.h</label>
      </node>
      <node id="4980">
        <label>stdexcept</label>
      </node>
      <node id="4974">
        <label>string</label>
      </node>
      <node id="5021">
        <label>boost/mpl/at.hpp</label>
      </node>
      <node id="5013">
        <label>map</label>
      </node>
      <node id="4989">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="4990" relation="include">
        </childnode>
        <childnode refid="5009" relation="include">
        </childnode>
      </node>
      <node id="5019">
        <label>storage/RawTable.h</label>
        <link refid="_raw_table_8h"/>
        <childnode refid="4980" relation="include">
        </childnode>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4983" relation="include">
        </childnode>
        <childnode refid="4982" relation="include">
        </childnode>
        <childnode refid="5020" relation="include">
        </childnode>
        <childnode refid="4979" relation="include">
        </childnode>
        <childnode refid="5024" relation="include">
        </childnode>
        <childnode refid="4988" relation="include">
        </childnode>
      </node>
      <node id="5000">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="5001" relation="include">
        </childnode>
        <childnode refid="5002" relation="include">
        </childnode>
        <childnode refid="5003" relation="include">
        </childnode>
      </node>
      <node id="5029">
        <label>storage/PointerCalculatorFactory.h</label>
        <link refid="_pointer_calculator_factory_8h"/>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="4972" relation="include">
        </childnode>
        <childnode refid="4982" relation="include">
        </childnode>
      </node>
      <node id="5012">
        <label>exception</label>
      </node>
      <node id="4995">
        <label>stddef.h</label>
      </node>
      <node id="5009">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="4982" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
        <childnode refid="5004" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5010" relation="include">
        </childnode>
        <childnode refid="5008" relation="include">
        </childnode>
        <childnode refid="5012" relation="include">
        </childnode>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="5013" relation="include">
        </childnode>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="5014" relation="include">
        </childnode>
        <childnode refid="5015" relation="include">
        </childnode>
        <childnode refid="5016" relation="include">
        </childnode>
      </node>
      <node id="4984">
        <label>ostream</label>
      </node>
      <node id="4969">
        <label>src/lib/access/insertonly_merger.cpp</label>
        <link refid="insertonly_merger.cpp"/>
        <childnode refid="4970" relation="include">
        </childnode>
        <childnode refid="5018" relation="include">
        </childnode>
        <childnode refid="5019" relation="include">
        </childnode>
        <childnode refid="5025" relation="include">
        </childnode>
        <childnode refid="5020" relation="include">
        </childnode>
        <childnode refid="5028" relation="include">
        </childnode>
      </node>
      <node id="5027">
        <label>storage/AbstractMergeStrategy.h</label>
        <link refid="_abstract_merge_strategy_8h"/>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4979" relation="include">
        </childnode>
      </node>
      <node id="5014">
        <label>limits.h</label>
      </node>
      <node id="5005">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="5006" relation="include">
        </childnode>
        <childnode refid="5007" relation="include">
        </childnode>
      </node>
      <node id="4993">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="4994" relation="include">
        </childnode>
        <childnode refid="4998" relation="include">
        </childnode>
        <childnode refid="5000" relation="include">
        </childnode>
        <childnode refid="4982" relation="include">
        </childnode>
      </node>
      <node id="5028">
        <label>access/insertonly_valid.h</label>
        <link refid="insertonly__valid_8h"/>
        <childnode refid="4972" relation="include">
        </childnode>
        <childnode refid="5029" relation="include">
        </childnode>
        <childnode refid="5030" relation="include">
        </childnode>
      </node>
      <node id="5033">
        <label>storage/Table.h</label>
        <link refid="_table_8h"/>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="4972" relation="include">
        </childnode>
        <childnode refid="4988" relation="include">
        </childnode>
        <childnode refid="4979" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
        <childnode refid="5024" relation="include">
        </childnode>
        <childnode refid="5034" relation="include">
        </childnode>
        <childnode refid="5036" relation="include">
        </childnode>
        <childnode refid="5043" relation="include">
        </childnode>
      </node>
      <node id="5011">
        <label>string.h</label>
      </node>
      <node id="4979">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="4975" relation="include">
        </childnode>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="4980" relation="include">
        </childnode>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="4972" relation="include">
        </childnode>
        <childnode refid="4981" relation="include">
        </childnode>
        <childnode refid="4982" relation="include">
        </childnode>
        <childnode refid="4988" relation="include">
        </childnode>
        <childnode refid="4989" relation="include">
        </childnode>
      </node>
      <node id="4981">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="5045">
        <label>storage/TableFactory.h</label>
        <link refid="_table_factory_8h"/>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="4972" relation="include">
        </childnode>
        <childnode refid="4979" relation="include">
        </childnode>
        <childnode refid="5033" relation="include">
        </childnode>
      </node>
      <node id="4977">
        <label>storage/AbstractMerger.h</label>
        <link refid="_abstract_merger_8h"/>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4978" relation="include">
        </childnode>
        <childnode refid="4972" relation="include">
        </childnode>
        <childnode refid="4979" relation="include">
        </childnode>
        <childnode refid="5017" relation="include">
        </childnode>
      </node>
      <node id="5015">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="4971">
        <label>vector</label>
      </node>
      <node id="5022">
        <label>boost/mpl/int.hpp</label>
      </node>
      <node id="5025">
        <label>storage/SimpleStore.h</label>
        <link refid="_simple_store_8h"/>
        <childnode refid="4972" relation="include">
        </childnode>
        <childnode refid="4979" relation="include">
        </childnode>
        <childnode refid="5019" relation="include">
        </childnode>
        <childnode refid="4982" relation="include">
        </childnode>
        <childnode refid="5026" relation="include">
        </childnode>
      </node>
      <node id="4972">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4973" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="4975" relation="include">
        </childnode>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="4971" relation="include">
        </childnode>
      </node>
      <node id="5031">
        <label>sstream</label>
      </node>
      <node id="5020">
        <label>storage/meta_storage.h</label>
        <link refid="meta__storage_8h"/>
        <childnode refid="4980" relation="include">
        </childnode>
        <childnode refid="5021" relation="include">
        </childnode>
        <childnode refid="5022" relation="include">
        </childnode>
        <childnode refid="5023" relation="include">
        </childnode>
        <childnode refid="4982" relation="include">
        </childnode>
      </node>
      <node id="5030">
        <label>storage/PointerCalculator.h</label>
        <link refid="_pointer_calculator_8h"/>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="5031" relation="include">
        </childnode>
        <childnode refid="4996" relation="include">
        </childnode>
        <childnode refid="4972" relation="include">
        </childnode>
        <childnode refid="4979" relation="include">
        </childnode>
        <childnode refid="5032" relation="include">
        </childnode>
      </node>
      <node id="5006">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="4994">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="4995" relation="include">
        </childnode>
        <childnode refid="4996" relation="include">
        </childnode>
        <childnode refid="4997" relation="include">
        </childnode>
        <childnode refid="4980" relation="include">
        </childnode>
      </node>
      <node id="5039">
        <label>math.h</label>
      </node>
      <node id="4992">
        <label>iostream</label>
      </node>
      <node id="5026">
        <label>storage/TableMerger.h</label>
        <link refid="_table_merger_8h"/>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4972" relation="include">
        </childnode>
        <childnode refid="4979" relation="include">
        </childnode>
        <childnode refid="5027" relation="include">
        </childnode>
        <childnode refid="4977" relation="include">
        </childnode>
      </node>
      <node id="4988">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="4982" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="4980" relation="include">
        </childnode>
      </node>
      <node id="5035">
        <label>storage/AbstractAttributeVector.h</label>
        <link refid="_abstract_attribute_vector_8h"/>
      </node>
      <node id="4978">
        <label>unordered_map</label>
      </node>
      <node id="4986">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="5040">
        <label>mutex</label>
      </node>
      <node id="5017">
        <label>storage/TableUtils.h</label>
        <link refid="_table_utils_8h"/>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="4978" relation="include">
        </childnode>
      </node>
      <node id="5008">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="5043">
        <label>Table-impl.h</label>
        <link refid="_table-impl_8h"/>
        <childnode refid="5044" relation="include">
        </childnode>
        <childnode refid="5036" relation="include">
        </childnode>
      </node>
      <node id="5042">
        <label>storage/BitCompressedVector.h</label>
        <link refid="_bit_compressed_vector_8h"/>
        <childnode refid="5039" relation="include">
        </childnode>
        <childnode refid="4983" relation="include">
        </childnode>
        <childnode refid="4999" relation="include">
        </childnode>
        <childnode refid="5040" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="4980" relation="include">
        </childnode>
        <childnode refid="5035" relation="include">
        </childnode>
        <childnode refid="5034" relation="include">
        </childnode>
      </node>
      <node id="5034">
        <label>storage/BaseAttributeVector.h</label>
        <link refid="_base_attribute_vector_8h"/>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="4980" relation="include">
        </childnode>
        <childnode refid="5035" relation="include">
        </childnode>
      </node>
      <node id="4998">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="4992" relation="include">
        </childnode>
        <childnode refid="4973" relation="include">
        </childnode>
        <childnode refid="4999" relation="include">
        </childnode>
      </node>
      <node id="5018">
        <label>set</label>
      </node>
      <node id="4990">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="4991" relation="include">
        </childnode>
        <childnode refid="4992" relation="include">
        </childnode>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="4982" relation="include">
        </childnode>
        <childnode refid="4993" relation="include">
        </childnode>
        <childnode refid="5004" relation="include">
        </childnode>
        <childnode refid="5005" relation="include">
        </childnode>
        <childnode refid="5008" relation="include">
        </childnode>
        <childnode refid="5006" relation="include">
        </childnode>
      </node>
      <node id="4996">
        <label>algorithm</label>
      </node>
      <node id="5002">
        <label>stdio.h</label>
      </node>
      <node id="4999">
        <label>cstring</label>
      </node>
      <node id="5010">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4992" relation="include">
        </childnode>
        <childnode refid="4997" relation="include">
        </childnode>
        <childnode refid="4976" relation="include">
        </childnode>
        <childnode refid="5011" relation="include">
        </childnode>
        <childnode refid="4991" relation="include">
        </childnode>
        <childnode refid="5007" relation="include">
        </childnode>
      </node>
      <node id="4976">
        <label>memory</label>
      </node>
      <node id="4982">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="4971" relation="include">
        </childnode>
        <childnode refid="4974" relation="include">
        </childnode>
        <childnode refid="4980" relation="include">
        </childnode>
        <childnode refid="4983" relation="include">
        </childnode>
        <childnode refid="4984" relation="include">
        </childnode>
        <childnode refid="4985" relation="include">
        </childnode>
        <childnode refid="4986" relation="include">
        </childnode>
        <childnode refid="4987" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structhyrise_1_1insertonly_1_1_merge_dict_functor" prot="public">hyrise::insertonly::MergeDictFunctor</innerclass>
    <innerclass refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1_1result" prot="public">hyrise::insertonly::MergeDictFunctor::result</innerclass>
    <innerclass refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id" prot="public">hyrise::insertonly::MapValueForValueId</innerclass>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1insertonly">hyrise::insertonly</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="insertonly__merger_8h" kindref="compound">access/insertonly_merger.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_raw_table_8h" kindref="compound">storage/RawTable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_simple_store_8h" kindref="compound">storage/SimpleStore.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="meta__storage_8h" kindref="compound">storage/meta_storage.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="insertonly__valid_8h" kindref="compound">access/insertonly_valid.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">insertonly<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structhyrise_1_1insertonly_1_1_merge_dict_functor" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor" kindref="compound">MergeDictFunctor</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1_1result" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1_1result" kindref="compound">result</ref><sp/>{</highlight></codeline>
<codeline lineno="27" refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1_1result_1a60b1fb9edf5a4d7a05baad27fdac3bff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;value_id_t&gt;<sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1_1result_1a60b1fb9edf5a4d7a05baad27fdac3bff" kindref="member">mapping</ref>;</highlight></codeline>
<codeline lineno="28" refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1_1result_1ac09a337002f6fdd4d8bca8d7d8071bb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;AbstractDictionary&gt;<sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1_1result_1ac09a337002f6fdd4d8bca8d7d8071bb8" kindref="member">dict</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Result<sp/>type<sp/>value<sp/>definition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a2585dffb445e6994c078f7cfcf616417" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1_1result" kindref="compound">result</ref><sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a2585dffb445e6994c078f7cfcf616417" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a359933c0103df02b09b4bd3bbe22a225" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref><sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a359933c0103df02b09b4bd3bbe22a225" kindref="member">_main</ref>;</highlight></codeline>
<codeline lineno="35" refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a91375c6a7ca286e4006e85c24ee165d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>storage::SimpleStore::delta_table_t&gt;<sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a91375c6a7ca286e4006e85c24ee165d3" kindref="member">_delta</ref>;</highlight></codeline>
<codeline lineno="36" refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1aa2650435792db271f44beb3a3caeda45" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">storage::pos_list_t</ref>&amp;<sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1aa2650435792db271f44beb3a3caeda45" kindref="member">_main_valid</ref>;</highlight></codeline>
<codeline lineno="37" refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a1ece7920397ac3ebb60db155fd97ae76" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">storage::pos_list_t</ref>&amp;<sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a1ece7920397ac3ebb60db155fd97ae76" kindref="member">_delta_valid</ref>;</highlight></codeline>
<codeline lineno="38" refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a20d382e891c2251ff53b3406d6092c36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref>&amp;<sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a20d382e891c2251ff53b3406d6092c36" kindref="member">_column</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a091cbb41b7e714fe87797f6e7ec97b7e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a091cbb41b7e714fe87797f6e7ec97b7e" kindref="member">MergeDictFunctor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref>&amp;<sp/>m,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>storage::SimpleStore::delta_table_t&gt;&amp;<sp/>d,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">storage::pos_list_t</ref>&amp;<sp/>mv,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">storage::pos_list_t</ref>&amp;<sp/>dv,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref>&amp;<sp/>c)<sp/>:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a359933c0103df02b09b4bd3bbe22a225" kindref="member">_main</ref><sp/>(m),<sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a91375c6a7ca286e4006e85c24ee165d3" kindref="member">_delta</ref><sp/>(d),<sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1aa2650435792db271f44beb3a3caeda45" kindref="member">_main_valid</ref>(mv),<sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a1ece7920397ac3ebb60db155fd97ae76" kindref="member">_delta_valid</ref>(dv),<sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a20d382e891c2251ff53b3406d6092c36" kindref="member">_column</ref>(c)<sp/>{}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="49" refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a1066d917375831bec08157d73f72a080" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1_1result" kindref="compound">result</ref><sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a1066d917375831bec08157d73f72a080" kindref="member">operator()</ref>()<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dict<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_order_preserving_dictionary" kindref="compound">OrderPreservingDictionary&lt;R&gt;</ref>&gt;(<ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a359933c0103df02b09b4bd3bbe22a225" kindref="member">_main</ref>-&gt;dictionaryAt(<ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a20d382e891c2251ff53b3406d6092c36" kindref="member">_column</ref>));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(dict<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Dict<sp/>shouldn&apos;t<sp/>be<sp/>NULL,<sp/>cast<sp/>failed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;R&gt;<sp/>values;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>unified<sp/>dictionary<sp/>from<sp/>valid<sp/>delta<sp/>positons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>position:<sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a1ece7920397ac3ebb60db155fd97ae76" kindref="member">_delta_valid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values.insert(<ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a91375c6a7ca286e4006e85c24ee165d3" kindref="member">_delta</ref>-&gt;getValue&lt;R&gt;(<ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a20d382e891c2251ff53b3406d6092c36" kindref="member">_column</ref>,<sp/>position));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>position:<sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1aa2650435792db271f44beb3a3caeda45" kindref="member">_main_valid</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>values.insert(<ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a359933c0103df02b09b4bd3bbe22a225" kindref="member">_main</ref>-&gt;getValue&lt;R&gt;(<ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor_1a20d382e891c2251ff53b3406d6092c36" kindref="member">_column</ref>,<sp/>position));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>mapping<sp/>table<sp/>for<sp/>old<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>values.cbegin();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end<sp/>=<sp/>values.cend();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;value_id_t&gt;<sp/>mapping;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>dict-&gt;size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>dict-&gt;getValueForValueId(i);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>std::find(start,<sp/>end,<sp/>val);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapping.push_back(std::distance(values.cbegin(),<sp/>it));</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>++it;<sp/></highlight><highlight class="comment">//Move<sp/>start<sp/>one<sp/>beyond<sp/>where<sp/>we<sp/>found<sp/>this<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapping.push_back(0);<sp/></highlight><highlight class="comment">//<sp/>NO<sp/>MAPPING,<sp/>should<sp/>not<sp/>be<sp/>mapped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>resultDict<sp/>=<sp/>std::make_shared&lt;OrderPreservingDictionary&lt;R&gt;&gt;(values.size());</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>:<sp/>values)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resultDict-&gt;addValue(e);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{mapping,<sp/>resultDict};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id" kindref="compound">MapValueForValueId</ref><sp/>{</highlight></codeline>
<codeline lineno="93" refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a2c9e5f84a79cbb7a90e86ca7990c11bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a2c9e5f84a79cbb7a90e86ca7990c11bd" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1af4f3fa4bb958a8e9795349a681b7e056" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref>&amp;<sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1af4f3fa4bb958a8e9795349a681b7e056" kindref="member">_main</ref>;</highlight></codeline>
<codeline lineno="96" refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1aec7566a699a70440af16403a2d77a959" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1aec7566a699a70440af16403a2d77a959" kindref="member">_srcCol</ref>;</highlight></codeline>
<codeline lineno="97" refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a418041af1ea8c80726a11b5d79893613" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a418041af1ea8c80726a11b5d79893613" kindref="member">_dstCol</ref>;</highlight></codeline>
<codeline lineno="98" refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a6d982388b7e62cef2ae6f58e9c277198" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>storage::SimpleStore::delta_table_t&gt;&amp;<sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a6d982388b7e62cef2ae6f58e9c277198" kindref="member">_delta</ref>;</highlight></codeline>
<codeline lineno="99" refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a74488c9f2b223384e34e3c85b3c396d8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">storage::pos_list_t</ref>&amp;<sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a74488c9f2b223384e34e3c85b3c396d8" kindref="member">_delta_valid</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a59569e30cfac34c4964847a692360b09" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a59569e30cfac34c4964847a692360b09" kindref="member">MapValueForValueId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref>&amp;<sp/>m,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>dst,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>col,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;const<sp/>storage::SimpleStore::delta_table_t&gt;&amp;<sp/>de,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a82124b84ebfac47beba542ec17d56471" kindref="member">storage::pos_list_t</ref>&amp;<sp/>dv)<sp/>:<sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1af4f3fa4bb958a8e9795349a681b7e056" kindref="member">_main</ref>(m),<sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1aec7566a699a70440af16403a2d77a959" kindref="member">_srcCol</ref>(col),<sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a418041af1ea8c80726a11b5d79893613" kindref="member">_dstCol</ref>(dst),<sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a6d982388b7e62cef2ae6f58e9c277198" kindref="member">_delta</ref>(de),<sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a74488c9f2b223384e34e3c85b3c396d8" kindref="member">_delta_valid</ref>(dv)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="109" refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1aab114437fa6bcc859c143ea9a1f57f37" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a2c9e5f84a79cbb7a90e86ca7990c11bd" kindref="member">value_type</ref><sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1aab114437fa6bcc859c143ea9a1f57f37" kindref="member">operator() </ref>()<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_dict<sp/>=<sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1af4f3fa4bb958a8e9795349a681b7e056" kindref="member">_main</ref>-&gt;dictionaryAt(<ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a418041af1ea8c80726a11b5d79893613" kindref="member">_dstCol</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>d<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_order_preserving_dictionary" kindref="compound">OrderPreservingDictionary&lt;R&gt;</ref>&gt;(_dict);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start<sp/>=<sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1af4f3fa4bb958a8e9795349a681b7e056" kindref="member">_main</ref>-&gt;size()<sp/>-<sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a74488c9f2b223384e34e3c85b3c396d8" kindref="member">_delta_valid</ref>.size();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>position=0,<sp/>end=<ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a74488c9f2b223384e34e3c85b3c396d8" kindref="member">_delta_valid</ref>.size();<sp/>position<sp/>&lt;<sp/>end;<sp/>++position)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>srcRow<sp/>=<sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a74488c9f2b223384e34e3c85b3c396d8" kindref="member">_delta_valid</ref>[position];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dstRow<sp/>=<sp/>start<sp/>+<sp/>position;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1af4f3fa4bb958a8e9795349a681b7e056" kindref="member">_main</ref>-&gt;setValueId(<ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a418041af1ea8c80726a11b5d79893613" kindref="member">_dstCol</ref>,<sp/>dstRow,<sp/><ref refid="class_value_id" kindref="compound">ValueId</ref>{d-&gt;getValueIdForValue(<ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1a6d982388b7e62cef2ae6f58e9c277198" kindref="member">_delta</ref>-&gt;getValue&lt;R&gt;(<ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id_1aec7566a699a70440af16403a2d77a959" kindref="member">_srcCol</ref>,<sp/>srcRow)),<sp/>0});</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classhyrise_1_1insertonly_1_1_discarding_merger_1a8958e61f1bc1ec0898c2470312fdb152" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1insertonly_1_1_discarding_merger_1a8958e61f1bc1ec0898c2470312fdb152" kindref="member">DiscardingMerger::mergeValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;input_tables,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>merged_table,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a8addaea8b5301cc30c8f8f634b531127" kindref="member">storage::column_mapping_t</ref><sp/>&amp;column_mapping,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>newSize)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input_tables.size()<sp/>!=<sp/>2)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;SimpleStoreMerger<sp/>does<sp/>not<sp/>support<sp/>more<sp/>than<sp/>two<sp/>tables&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>=<sp/>input_tables[0];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>std::dynamic_pointer_cast&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>RawTable&lt;&gt;&gt;(input_tables[1]);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>assert(<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref><sp/>&amp;&amp;<sp/>delta<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;main<sp/>delta<sp/>need<sp/>to<sp/>be<sp/>valid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Prepare<sp/>type<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>delta_valid<sp/>=<sp/><ref refid="namespacehyrise_1_1insertonly_1a0b5bb10399c25fd4476602dfa47ee44d" kindref="member">validPositions</ref>(delta,<sp/><ref refid="classhyrise_1_1insertonly_1_1_discarding_merger_1afb107ca6a928aecaaf1a4991c79c20ca" kindref="member">_tx</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>main_valid<sp/>=<sp/><ref refid="namespacehyrise_1_1insertonly_1a0b5bb10399c25fd4476602dfa47ee44d" kindref="member">validPositions</ref>(<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>,<sp/><ref refid="classhyrise_1_1insertonly_1_1_discarding_merger_1afb107ca6a928aecaaf1a4991c79c20ca" kindref="member">_tx</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="structhyrise_1_1storage_1_1type__switch" kindref="compound">storage::type_switch&lt;hyrise_basic_types&gt;</ref><sp/>ts;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>std::vector&lt;MergeDictFunctor::result&gt;<sp/>mergedDictionaries;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>unique<sp/>values<sp/>for<sp/>delta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>column_mapping)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>kv.first;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_merge_dict_functor" kindref="compound">MergeDictFunctor</ref><sp/>fun(<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>,<sp/>delta,<sp/>main_valid,<sp/>delta_valid,<sp/>col);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>ts(<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>-&gt;typeOfColumn(col),<sp/>fun);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>merged_table-&gt;setDictionaryAt(result.dict,<sp/>col);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>mergedDictionaries.push_back(result);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>values<sp/>of<sp/>the<sp/>new<sp/>Table</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>merged_table-&gt;resize(main_valid.size()<sp/>+<sp/>delta_valid.size());</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>position=0,<sp/>end<sp/>=<sp/>main_valid.size();<sp/>position<sp/>&lt;<sp/>end;<sp/>++position)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>main_valid[position];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>column_mapping)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>kv.first;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dst<sp/>=<sp/>kv.second;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>merged_table-&gt;setValueId(dst,<sp/>position,<sp/><ref refid="class_value_id" kindref="compound">ValueId</ref>{mergedDictionaries[col].mapping[<ref refid="bin_2dummy_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>-&gt;getValueId(col,<sp/>row).valueId],<sp/>0});</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Map<sp/>the<sp/>values<sp/>for<sp/>the<sp/>values<sp/>in<sp/>the<sp/>uncompressed<sp/>delta</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>kv<sp/>:<sp/>column_mapping)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>kv.first;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dst<sp/>=<sp/>kv.second;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhyrise_1_1insertonly_1_1_map_value_for_value_id" kindref="compound">MapValueForValueId</ref><sp/>map(merged_table,<sp/>dst,<sp/>col,<sp/>delta,<sp/>delta_valid);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>ts(merged_table-&gt;typeOfColumn(col),<sp/>map);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal">}}</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/access/insertonly_merger.cpp"/>
  </compounddef>
</doxygen>
