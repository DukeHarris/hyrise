<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_materializing_scan_8cpp" kind="file">
    <compoundname>MaterializingScan.cpp</compoundname>
    <includes refid="_materializing_scan_8h" local="yes">access/MaterializingScan.h</includes>
    <includes local="no">random</includes>
    <includes local="no">set</includes>
    <includes refid="_basic_parser_8h" local="yes">access/BasicParser.h</includes>
    <includes refid="_query_parser_8h" local="yes">access/QueryParser.h</includes>
    <includes refid="_table_8h" local="yes">storage/Table.h</includes>
    <incdepgraph>
      <node id="6601">
        <label>list</label>
      </node>
      <node id="6628">
        <label>atomic</label>
      </node>
      <node id="6631">
        <label>storage/BaseAllocatedAttributeVector.h</label>
        <link refid="_base_allocated_attribute_vector_8h"/>
        <childnode refid="6624" relation="include">
        </childnode>
        <childnode refid="6606" relation="include">
        </childnode>
      </node>
      <node id="6571">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="6584">
        <label>queue</label>
      </node>
      <node id="6567">
        <label>limits</label>
      </node>
      <node id="6619">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="6623">
        <label>storage/AbstractAllocatedTable.h</label>
        <link refid="_abstract_allocated_table_8h"/>
        <childnode refid="6598" relation="include">
        </childnode>
        <childnode refid="6602" relation="include">
        </childnode>
        <childnode refid="6604" relation="include">
        </childnode>
      </node>
      <node id="6596">
        <label>assert.h</label>
      </node>
      <node id="6573">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="6611">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="6566">
        <label>cstdint</label>
      </node>
      <node id="6627">
        <label>storage/FixedLengthVector.h</label>
        <link refid="_fixed_length_vector_8h"/>
        <childnode refid="6628" relation="include">
        </childnode>
        <childnode refid="6605" relation="include">
        </childnode>
        <childnode refid="6629" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6560" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
        <childnode refid="6630" relation="include">
        </childnode>
        <childnode refid="6611" relation="include">
        </childnode>
        <childnode refid="6625" relation="include">
        </childnode>
        <childnode refid="6624" relation="include">
        </childnode>
        <childnode refid="6631" relation="include">
        </childnode>
        <childnode refid="6598" relation="include">
        </childnode>
        <childnode refid="6602" relation="include">
        </childnode>
      </node>
      <node id="6608">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="6568" relation="include">
        </childnode>
        <childnode refid="6597" relation="include">
        </childnode>
        <childnode refid="6609" relation="include">
        </childnode>
      </node>
      <node id="6626">
        <label>storage/AttributeVectorFactory.h</label>
        <link refid="_attribute_vector_factory_8h"/>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6624" relation="include">
        </childnode>
        <childnode refid="6627" relation="include">
        </childnode>
        <childnode refid="6632" relation="include">
        </childnode>
      </node>
      <node id="6552">
        <label>stdint.h</label>
      </node>
      <node id="6607">
        <label>stdlib.h</label>
      </node>
      <node id="6634">
        <label>cmath</label>
      </node>
      <node id="6605">
        <label>errno.h</label>
      </node>
      <node id="6558">
        <label>helper/epoch.h</label>
        <link refid="epoch_8h"/>
        <childnode refid="6552" relation="include">
        </childnode>
      </node>
      <node id="6569">
        <label>stdexcept</label>
      </node>
      <node id="6581">
        <label>helper/HwlocHelper.h</label>
        <link refid="_hwloc_helper_8h"/>
        <childnode refid="6582" relation="include">
        </childnode>
      </node>
      <node id="6563">
        <label>string</label>
      </node>
      <node id="6575">
        <label>taskscheduler.h</label>
        <link refid="taskscheduler_8h"/>
        <childnode refid="6576" relation="include">
        </childnode>
        <childnode refid="6583" relation="include">
        </childnode>
        <childnode refid="6586" relation="include">
        </childnode>
        <childnode refid="6559" relation="include">
        </childnode>
        <childnode refid="6585" relation="include">
        </childnode>
        <childnode refid="6577" relation="include">
        </childnode>
        <childnode refid="6587" relation="include">
        </childnode>
        <childnode refid="6588" relation="include">
        </childnode>
      </node>
      <node id="6583">
        <label>taskscheduler/SimpleTaskScheduler.h</label>
        <link refid="_simple_task_scheduler_8h"/>
        <childnode refid="6576" relation="include">
        </childnode>
        <childnode refid="6579" relation="include">
        </childnode>
        <childnode refid="6554" relation="include">
        </childnode>
        <childnode refid="6584" relation="include">
        </childnode>
        <childnode refid="6560" relation="include">
        </childnode>
        <childnode refid="6551" relation="include">
        </childnode>
        <childnode refid="6559" relation="include">
        </childnode>
        <childnode refid="6585" relation="include">
        </childnode>
        <childnode refid="6581" relation="include">
        </childnode>
      </node>
      <node id="6555">
        <label>map</label>
      </node>
      <node id="6559">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="6554" relation="include">
        </childnode>
        <childnode refid="6560" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6562" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
      </node>
      <node id="6579">
        <label>unordered_set</label>
      </node>
      <node id="6594">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="6595" relation="include">
        </childnode>
        <childnode refid="6613" relation="include">
        </childnode>
      </node>
      <node id="6548">
        <label>access/MaterializingScan.h</label>
        <link refid="_materializing_scan_8h"/>
        <childnode refid="6549" relation="include">
        </childnode>
      </node>
      <node id="6604">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="6605" relation="include">
        </childnode>
        <childnode refid="6606" relation="include">
        </childnode>
        <childnode refid="6607" relation="include">
        </childnode>
      </node>
      <node id="6582">
        <label>hwloc.h</label>
      </node>
      <node id="6616">
        <label>exception</label>
      </node>
      <node id="6550">
        <label>access/OutputTask.h</label>
        <link refid="_output_task_8h"/>
        <childnode refid="6551" relation="include">
        </childnode>
        <childnode refid="6552" relation="include">
        </childnode>
        <childnode refid="6553" relation="include">
        </childnode>
        <childnode refid="6554" relation="include">
        </childnode>
        <childnode refid="6555" relation="include">
        </childnode>
        <childnode refid="6556" relation="include">
        </childnode>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6558" relation="include">
        </childnode>
        <childnode refid="6559" relation="include">
        </childnode>
      </node>
      <node id="6599">
        <label>stddef.h</label>
      </node>
      <node id="6585">
        <label>taskscheduler/CoreBoundTaskQueue.h</label>
        <link refid="_core_bound_task_queue_8h"/>
        <childnode refid="6578" relation="include">
        </childnode>
        <childnode refid="6584" relation="include">
        </childnode>
        <childnode refid="6577" relation="include">
        </childnode>
      </node>
      <node id="6613">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="6568" relation="include">
        </childnode>
        <childnode refid="6597" relation="include">
        </childnode>
        <childnode refid="6608" relation="include">
        </childnode>
        <childnode refid="6609" relation="include">
        </childnode>
        <childnode refid="6614" relation="include">
        </childnode>
        <childnode refid="6612" relation="include">
        </childnode>
        <childnode refid="6616" relation="include">
        </childnode>
        <childnode refid="6554" relation="include">
        </childnode>
        <childnode refid="6555" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6617" relation="include">
        </childnode>
        <childnode refid="6618" relation="include">
        </childnode>
        <childnode refid="6619" relation="include">
        </childnode>
      </node>
      <node id="6570">
        <label>ostream</label>
      </node>
      <node id="6557">
        <label>json.h</label>
      </node>
      <node id="6617">
        <label>limits.h</label>
      </node>
      <node id="6609">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="6610" relation="include">
        </childnode>
        <childnode refid="6611" relation="include">
        </childnode>
      </node>
      <node id="6597">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="6554" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6598" relation="include">
        </childnode>
        <childnode refid="6602" relation="include">
        </childnode>
        <childnode refid="6604" relation="include">
        </childnode>
        <childnode refid="6568" relation="include">
        </childnode>
      </node>
      <node id="6622">
        <label>storage/Table.h</label>
        <link refid="_table_8h"/>
        <childnode refid="6563" relation="include">
        </childnode>
        <childnode refid="6554" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6565" relation="include">
        </childnode>
        <childnode refid="6593" relation="include">
        </childnode>
        <childnode refid="6591" relation="include">
        </childnode>
        <childnode refid="6597" relation="include">
        </childnode>
        <childnode refid="6623" relation="include">
        </childnode>
        <childnode refid="6624" relation="include">
        </childnode>
        <childnode refid="6626" relation="include">
        </childnode>
        <childnode refid="6633" relation="include">
        </childnode>
      </node>
      <node id="6620">
        <label>random</label>
      </node>
      <node id="6562">
        <label>condition_variable</label>
      </node>
      <node id="6615">
        <label>string.h</label>
      </node>
      <node id="6590">
        <label>access/BasicParser.h</label>
        <link refid="_basic_parser_8h"/>
        <childnode refid="6569" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6557" relation="include">
        </childnode>
      </node>
      <node id="6591">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="6567" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
        <childnode refid="6554" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
        <childnode refid="6565" relation="include">
        </childnode>
        <childnode refid="6592" relation="include">
        </childnode>
        <childnode refid="6568" relation="include">
        </childnode>
        <childnode refid="6593" relation="include">
        </childnode>
        <childnode refid="6594" relation="include">
        </childnode>
      </node>
      <node id="6587">
        <label>taskscheduler/WSCoreBoundTaskQueue.h</label>
        <link refid="_w_s_core_bound_task_queue_8h"/>
        <childnode refid="6577" relation="include">
        </childnode>
        <childnode refid="6588" relation="include">
        </childnode>
      </node>
      <node id="6592">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="6618">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="6554">
        <label>vector</label>
      </node>
      <node id="6586">
        <label>taskscheduler/SharedScheduler.h</label>
        <link refid="_shared_scheduler_8h"/>
        <childnode refid="6576" relation="include">
        </childnode>
        <childnode refid="6583" relation="include">
        </childnode>
        <childnode refid="6585" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
      </node>
      <node id="6556">
        <label>utility</label>
      </node>
      <node id="6565">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="6566" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
        <childnode refid="6567" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6554" relation="include">
        </childnode>
      </node>
      <node id="6577">
        <label>taskscheduler/AbstractTaskQueue.h</label>
        <link refid="_abstract_task_queue_8h"/>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6560" relation="include">
        </childnode>
        <childnode refid="6578" relation="include">
        </childnode>
        <childnode refid="6562" relation="include">
        </childnode>
        <childnode refid="6551" relation="include">
        </childnode>
        <childnode refid="6559" relation="include">
        </childnode>
      </node>
      <node id="6630">
        <label>sstream</label>
      </node>
      <node id="6610">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="6598">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="6599" relation="include">
        </childnode>
        <childnode refid="6600" relation="include">
        </childnode>
        <childnode refid="6601" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
      </node>
      <node id="6574">
        <label>access/QueryParser.h</label>
        <link refid="_query_parser_8h"/>
        <childnode refid="6555" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6554" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
        <childnode refid="6557" relation="include">
        </childnode>
        <childnode refid="6575" relation="include">
        </childnode>
        <childnode refid="6590" relation="include">
        </childnode>
      </node>
      <node id="6564">
        <label>access/OperationData.h</label>
        <link refid="_operation_data_8h"/>
        <childnode refid="6554" relation="include">
        </childnode>
        <childnode refid="6565" relation="include">
        </childnode>
        <childnode refid="6568" relation="include">
        </childnode>
      </node>
      <node id="6553">
        <label>time.h</label>
      </node>
      <node id="6629">
        <label>math.h</label>
      </node>
      <node id="6580">
        <label>iostream</label>
      </node>
      <node id="6593">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="6568" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
      </node>
      <node id="6576">
        <label>taskscheduler/AbstractTaskScheduler.h</label>
        <link refid="_abstract_task_scheduler_8h"/>
        <childnode refid="6559" relation="include">
        </childnode>
        <childnode refid="6577" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6579" relation="include">
        </childnode>
        <childnode refid="6580" relation="include">
        </childnode>
        <childnode refid="6551" relation="include">
        </childnode>
        <childnode refid="6581" relation="include">
        </childnode>
      </node>
      <node id="6625">
        <label>storage/AbstractAttributeVector.h</label>
        <link refid="_abstract_attribute_vector_8h"/>
      </node>
      <node id="6589">
        <label>deque</label>
      </node>
      <node id="6572">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="6588">
        <label>taskscheduler/WSSimpleTaskScheduler.h</label>
        <link refid="_w_s_simple_task_scheduler_8h"/>
        <childnode refid="6576" relation="include">
        </childnode>
        <childnode refid="6587" relation="include">
        </childnode>
        <childnode refid="6589" relation="include">
        </childnode>
        <childnode refid="6580" relation="include">
        </childnode>
        <childnode refid="6581" relation="include">
        </childnode>
      </node>
      <node id="6560">
        <label>mutex</label>
      </node>
      <node id="6612">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="6578">
        <label>thread</label>
      </node>
      <node id="6633">
        <label>Table-impl.h</label>
        <link refid="_table-impl_8h"/>
        <childnode refid="6634" relation="include">
        </childnode>
        <childnode refid="6626" relation="include">
        </childnode>
      </node>
      <node id="6632">
        <label>storage/BitCompressedVector.h</label>
        <link refid="_bit_compressed_vector_8h"/>
        <childnode refid="6629" relation="include">
        </childnode>
        <childnode refid="6552" relation="include">
        </childnode>
        <childnode refid="6603" relation="include">
        </childnode>
        <childnode refid="6560" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
        <childnode refid="6625" relation="include">
        </childnode>
        <childnode refid="6624" relation="include">
        </childnode>
      </node>
      <node id="6624">
        <label>storage/BaseAttributeVector.h</label>
        <link refid="_base_attribute_vector_8h"/>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
        <childnode refid="6625" relation="include">
        </childnode>
      </node>
      <node id="6602">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="6580" relation="include">
        </childnode>
        <childnode refid="6566" relation="include">
        </childnode>
        <childnode refid="6603" relation="include">
        </childnode>
      </node>
      <node id="6621">
        <label>set</label>
      </node>
      <node id="6595">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="6596" relation="include">
        </childnode>
        <childnode refid="6580" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6568" relation="include">
        </childnode>
        <childnode refid="6597" relation="include">
        </childnode>
        <childnode refid="6608" relation="include">
        </childnode>
        <childnode refid="6609" relation="include">
        </childnode>
        <childnode refid="6612" relation="include">
        </childnode>
        <childnode refid="6610" relation="include">
        </childnode>
      </node>
      <node id="6547">
        <label>src/lib/access/MaterializingScan.cpp</label>
        <link refid="MaterializingScan.cpp"/>
        <childnode refid="6548" relation="include">
        </childnode>
        <childnode refid="6620" relation="include">
        </childnode>
        <childnode refid="6621" relation="include">
        </childnode>
        <childnode refid="6590" relation="include">
        </childnode>
        <childnode refid="6574" relation="include">
        </childnode>
        <childnode refid="6622" relation="include">
        </childnode>
      </node>
      <node id="6549">
        <label>access/PlanOperation.h</label>
        <link refid="_plan_operation_8h"/>
        <childnode refid="6550" relation="include">
        </childnode>
        <childnode refid="6564" relation="include">
        </childnode>
        <childnode refid="6574" relation="include">
        </childnode>
        <childnode refid="6568" relation="include">
        </childnode>
        <childnode refid="6565" relation="include">
        </childnode>
        <childnode refid="6591" relation="include">
        </childnode>
        <childnode refid="6557" relation="include">
        </childnode>
      </node>
      <node id="6600">
        <label>algorithm</label>
      </node>
      <node id="6551">
        <label>log4cxx/logger.h</label>
      </node>
      <node id="6606">
        <label>stdio.h</label>
      </node>
      <node id="6603">
        <label>cstring</label>
      </node>
      <node id="6614">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="6554" relation="include">
        </childnode>
        <childnode refid="6580" relation="include">
        </childnode>
        <childnode refid="6601" relation="include">
        </childnode>
        <childnode refid="6561" relation="include">
        </childnode>
        <childnode refid="6615" relation="include">
        </childnode>
        <childnode refid="6596" relation="include">
        </childnode>
        <childnode refid="6611" relation="include">
        </childnode>
      </node>
      <node id="6561">
        <label>memory</label>
      </node>
      <node id="6568">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="6554" relation="include">
        </childnode>
        <childnode refid="6563" relation="include">
        </childnode>
        <childnode refid="6569" relation="include">
        </childnode>
        <childnode refid="6552" relation="include">
        </childnode>
        <childnode refid="6570" relation="include">
        </childnode>
        <childnode refid="6571" relation="include">
        </childnode>
        <childnode refid="6572" relation="include">
        </childnode>
        <childnode refid="6573" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1access">hyrise::access</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_materializing_scan_8h" kindref="compound">access/MaterializingScan.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;random&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_basic_parser_8h" kindref="compound">access/BasicParser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_query_parser_8h" kindref="compound">access/QueryParser.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_table_8h" kindref="compound">storage/Table.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">access<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_<sp/>=<sp/>QueryParser::registerPlanOperation&lt;MaterializingScan&gt;(</highlight><highlight class="stringliteral">&quot;MaterializingScan&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classhyrise_1_1access_1_1_materializing_scan_1afe30ab54f764b96804593489f3640778" refkind="member"><highlight class="normal"><ref refid="classhyrise_1_1access_1_1_materializing_scan_1afe30ab54f764b96804593489f3640778" kindref="member">MaterializingScan::MaterializingScan</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_memcpy)<sp/>:</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_use_memcpy(use_memcpy),</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_copy_values(false),</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_num_samples(0)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classhyrise_1_1access_1_1_materializing_scan_1a8266eeeb721240a5e2c85fc1b3be9299" refkind="member"><highlight class="normal"><ref refid="classhyrise_1_1access_1_1_materializing_scan_1a8266eeeb721240a5e2c85fc1b3be9299" kindref="member">MaterializingScan::~MaterializingScan</ref>()<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="classhyrise_1_1access_1_1_materializing_scan_1aff0033e4cd850c2a413555e210725a7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1aff0033e4cd850c2a413555e210725a7e" kindref="member">MaterializingScan::setupPlanOperation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>super<sp/>impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1aff0033e4cd850c2a413555e210725a7e" kindref="member">_PlanOperation::setupPlanOperation</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhyrise_1_1access_1_1_materializing_scan_1aa1a8ebef16e91133e054279cd454271d" kindref="member">_num_samples</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mt19937<sp/>gen;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>gen.seed(static_cast&lt;unsigned<sp/>int&gt;(std::time(0)));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uniform_int_distribution&lt;unsigned&gt;<sp/>dist(0,<sp/><ref refid="class___plan_operation_1a12e425b31715103245faeb2bb7b8b8b8" kindref="member">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(0)-&gt;size()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;unsigned&gt;<sp/>base;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(base.size()<sp/>&lt;<sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1aa1a8ebef16e91133e054279cd454271d" kindref="member">_num_samples</ref>)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>dist(gen);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;std::set&lt;unsigned&gt;::iterator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/>tmp<sp/>=<sp/>base.insert(val);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp.second)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1ae97ea60e5ad8474405115c2ff9a17953" kindref="member">_samples</ref>.push_back(val);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classhyrise_1_1access_1_1_materializing_scan_1a29bfbcd80a3c65b0ecbe8c28782d3d55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1a29bfbcd80a3c65b0ecbe8c28782d3d55" kindref="member">MaterializingScan::executePlanOperation</ref>()<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>in<sp/>=<sp/><ref refid="class___plan_operation_1a12e425b31715103245faeb2bb7b8b8b8" kindref="member">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(0);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>std::dynamic_pointer_cast&lt;Table&lt;&gt;&gt;(in-&gt;copy_structure(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>in-&gt;size(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classhyrise_1_1access_1_1_materializing_scan_1aa1a8ebef16e91133e054279cd454271d" kindref="member">_num_samples</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;resize(in-&gt;size());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>in-&gt;size();<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;copyRowFrom(in,<sp/>row,<sp/>row,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*_use_memcpy*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;resize(<ref refid="classhyrise_1_1access_1_1_materializing_scan_1aa1a8ebef16e91133e054279cd454271d" kindref="member">_num_samples</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1ae97ea60e5ad8474405115c2ff9a17953" kindref="member">_samples</ref>.size();<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;copyRowFrom(<ref refid="class___plan_operation_1a12e425b31715103245faeb2bb7b8b8b8" kindref="member">input</ref>.<ref refid="group__deprecated_access_1ga69968d5ab56729a2e8ec54208a275b45" kindref="member">getTable</ref>(0),<sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1ae97ea60e5ad8474405115c2ff9a17953" kindref="member">_samples</ref>[row],<sp/>row,<sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1a02c0b40d0e449c151f1a779fa10bf35d" kindref="member">_copy_values</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*_use_memcpy*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="class___plan_operation_1aa6fad4a2bf49850d1947ab2d8c2f9931" kindref="member">addResult</ref>(result);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="classhyrise_1_1access_1_1_materializing_scan_1a84a63ad2ca3979d6f2f845e2074e54c1" refkind="member"><highlight class="normal">std::shared_ptr&lt;_PlanOperation&gt;<sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1a84a63ad2ca3979d6f2f845e2074e54c1" kindref="member">MaterializingScan::parse</ref>(Json::Value<sp/>&amp;v)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;MaterializingScan&gt;<sp/>pop<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="classhyrise_1_1access_1_1_materializing_scan" kindref="compound">MaterializingScan</ref>&gt;(<ref refid="classhyrise_1_1access_1_1_materializing_scan_1a84a63ad2ca3979d6f2f845e2074e54c1" kindref="member">BasicParser&lt;MaterializingScan&gt;::parse</ref>(v));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.isMember(</highlight><highlight class="stringliteral">&quot;samples&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>pop-&gt;<ref refid="classhyrise_1_1access_1_1_materializing_scan_1a27b73a70d0e0b9a9c266c25f78291e15" kindref="member">setSamples</ref>(v[</highlight><highlight class="stringliteral">&quot;samples&quot;</highlight><highlight class="normal">].asUInt());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.isMember(</highlight><highlight class="stringliteral">&quot;memcpy&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>pop-&gt;_use_memcpy<sp/>=<sp/>v[</highlight><highlight class="stringliteral">&quot;memcpy&quot;</highlight><highlight class="normal">].asBool();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>pop-&gt;_use_memcpy<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v.isMember(</highlight><highlight class="stringliteral">&quot;copyValues&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>pop-&gt;setCopyValues(v[</highlight><highlight class="stringliteral">&quot;copyValues&quot;</highlight><highlight class="normal">].asBool());</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pop;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classhyrise_1_1access_1_1_materializing_scan_1a5fc661aa0ade646cb773ae586ff437d0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1a5fc661aa0ade646cb773ae586ff437d0" kindref="member">MaterializingScan::vname</ref>()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;MaterializingScan&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classhyrise_1_1access_1_1_materializing_scan_1a27b73a70d0e0b9a9c266c25f78291e15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1a27b73a70d0e0b9a9c266c25f78291e15" kindref="member">MaterializingScan::setSamples</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1aa1a8ebef16e91133e054279cd454271d" kindref="member">_num_samples</ref><sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classhyrise_1_1access_1_1_materializing_scan_1adc2d655412490b3dcb2adc089ef4048e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1adc2d655412490b3dcb2adc089ef4048e" kindref="member">MaterializingScan::setCopyValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>v)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_materializing_scan_1a02c0b40d0e449c151f1a779fa10bf35d" kindref="member">_copy_values</ref><sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/access/MaterializingScan.cpp"/>
  </compounddef>
</doxygen>
