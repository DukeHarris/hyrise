<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_strategized_allocator_8h" kind="file">
    <compoundname>StrategizedAllocator.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">list</includes>
    <includes local="no">stdexcept</includes>
    <includedby refid="memory_8h" local="yes">src/lib/memory.h</includedby>
    <includedby refid="_abstract_allocated_table_8h" local="no">src/lib/storage/AbstractAllocatedTable.h</includedby>
    <includedby refid="_abstract_dictionary_8h" local="no">src/lib/storage/AbstractDictionary.h</includedby>
    <includedby refid="_fixed_length_vector_8h" local="no">src/lib/storage/FixedLengthVector.h</includedby>
    <incdepgraph>
      <node id="16462">
        <label>list</label>
      </node>
      <node id="16463">
        <label>stdexcept</label>
      </node>
      <node id="16460">
        <label>stddef.h</label>
      </node>
      <node id="16459">
        <label>src/lib/memory/StrategizedAllocator.h</label>
        <link refid="StrategizedAllocator.h"/>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16461" relation="include">
        </childnode>
        <childnode refid="16462" relation="include">
        </childnode>
        <childnode refid="16463" relation="include">
        </childnode>
      </node>
      <node id="16461">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="16586">
        <label>src/lib/access/Distinct.h</label>
        <link refid="_distinct_8h"/>
        <childnode refid="16529" relation="include">
        </childnode>
      </node>
      <node id="16497">
        <label>src/lib/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="16475" relation="include">
        </childnode>
        <childnode refid="16476" relation="include">
        </childnode>
        <childnode refid="16477" relation="include">
        </childnode>
        <childnode refid="16478" relation="include">
        </childnode>
        <childnode refid="16479" relation="include">
        </childnode>
        <childnode refid="16480" relation="include">
        </childnode>
        <childnode refid="16481" relation="include">
        </childnode>
        <childnode refid="16482" relation="include">
        </childnode>
      </node>
      <node id="16629">
        <label>src/lib/access/SmallestTableScan.cpp</label>
        <link refid="_smallest_table_scan_8cpp"/>
      </node>
      <node id="16504">
        <label>src/lib/io/shortcuts.cpp</label>
        <link refid="shortcuts_8cpp"/>
      </node>
      <node id="16638">
        <label>src/lib/access/ThreadpoolAdjustment.h</label>
        <link refid="_threadpool_adjustment_8h"/>
        <childnode refid="16639" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16673">
        <label>src/lib/storage/TableRangeViewFactory.h</label>
        <link refid="_table_range_view_factory_8h"/>
        <childnode refid="16613" relation="include">
        </childnode>
        <childnode refid="16674" relation="include">
        </childnode>
      </node>
      <node id="16499">
        <label>src/lib/access/InsertScan.cpp</label>
        <link refid="_insert_scan_8cpp"/>
      </node>
      <node id="16511">
        <label>src/lib/access/Layouter.cpp</label>
        <link refid="_layouter_8cpp"/>
      </node>
      <node id="16508">
        <label>src/lib/storage/Store.cpp</label>
        <link refid="_store_8cpp"/>
      </node>
      <node id="16495">
        <label>src/lib/storage/SimpleStore.cpp</label>
        <link refid="_simple_store_8cpp"/>
      </node>
      <node id="16487">
        <label>src/lib/io/RawTableLoader.cpp</label>
        <link refid="_raw_table_loader_8cpp"/>
      </node>
      <node id="16647">
        <label>src/lib/access/OperationData.cpp</label>
        <link refid="_operation_data_8cpp"/>
      </node>
      <node id="16617">
        <label>src/lib/access/RadixJoin.h</label>
        <link refid="_radix_join_8h"/>
        <childnode refid="16618" relation="include">
        </childnode>
        <childnode refid="16582" relation="include">
        </childnode>
      </node>
      <node id="16658">
        <label>src/lib/storage/SequentialHeapMergerRow.cpp</label>
        <link refid="_sequential_heap_merger_row_8cpp"/>
      </node>
      <node id="16507">
        <label>src/lib/storage/PointerCalculator.cpp</label>
        <link refid="_pointer_calculator_8cpp"/>
      </node>
      <node id="16466">
        <label>src/lib/storage/AbstractAllocatedTable.h</label>
        <link refid="_abstract_allocated_table_8h"/>
        <childnode refid="16467" relation="include">
        </childnode>
        <childnode refid="16498" relation="include">
        </childnode>
        <childnode refid="16509" relation="include">
        </childnode>
      </node>
      <node id="16640">
        <label>src/lib/access/UnionAll.h</label>
        <link refid="_union_all_8h"/>
        <childnode refid="16482" relation="include">
        </childnode>
        <childnode refid="16517" relation="include">
        </childnode>
      </node>
      <node id="16546">
        <label>src/lib/storage/Table.cpp</label>
        <link refid="_table_8cpp"/>
      </node>
      <node id="16654">
        <label>src/lib/access/insertonly_merger.h</label>
        <link refid="insertonly__merger_8h"/>
        <childnode refid="16491" relation="include">
        </childnode>
        <childnode refid="16468" relation="include">
        </childnode>
      </node>
      <node id="16548">
        <label>src/lib/storage/TableFactory.cpp</label>
        <link refid="_table_factory_8cpp"/>
      </node>
      <node id="16649">
        <label>src/lib/io/CSVLoader.cpp</label>
        <link refid="_c_s_v_loader_8cpp"/>
      </node>
      <node id="16670">
        <label>src/lib/storage/TableDiff.cpp</label>
        <link refid="_table_diff_8cpp"/>
      </node>
      <node id="16619">
        <label>src/lib/access/ReplaceTable.h</label>
        <link refid="_replace_table_8h"/>
        <childnode refid="16620" relation="include">
        </childnode>
      </node>
      <node id="16601">
        <label>src/lib/access/LayoutTableLoad.cpp</label>
        <link refid="_layout_table_load_8cpp"/>
      </node>
      <node id="16514">
        <label>src/lib/access/SortScan.cpp</label>
        <link refid="lib_2access_2_sort_scan_8cpp"/>
      </node>
      <node id="16550">
        <label>src/lib/storage/TableGenerator.h</label>
        <link refid="_table_generator_8h"/>
        <childnode refid="16494" relation="include">
        </childnode>
        <childnode refid="16551" relation="include">
        </childnode>
        <childnode refid="16545" relation="include">
        </childnode>
        <childnode refid="16552" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16531">
        <label>src/lib/access/HashJoinProbe.cpp</label>
        <link refid="_hash_join_probe_8cpp"/>
      </node>
      <node id="16513">
        <label>src/lib/access/PrefixSum.cpp</label>
        <link refid="_prefix_sum_8cpp"/>
      </node>
      <node id="16502">
        <label>src/lib/access/UpdateScan.cpp</label>
        <link refid="_update_scan_8cpp"/>
      </node>
      <node id="16520">
        <label>src/lib/storage/MutableVerticalTable.h</label>
        <link refid="_mutable_vertical_table_8h"/>
        <childnode refid="16510" relation="include">
        </childnode>
        <childnode refid="16483" relation="include">
        </childnode>
        <childnode refid="16521" relation="include">
        </childnode>
        <childnode refid="16523" relation="include">
        </childnode>
        <childnode refid="16524" relation="include">
        </childnode>
        <childnode refid="16525" relation="include">
        </childnode>
        <childnode refid="16486" relation="include">
        </childnode>
        <childnode refid="16494" relation="include">
        </childnode>
        <childnode refid="16506" relation="include">
        </childnode>
        <childnode refid="16526" relation="include">
        </childnode>
        <childnode refid="16527" relation="include">
        </childnode>
        <childnode refid="16541" relation="include">
        </childnode>
        <childnode refid="16498" relation="include">
        </childnode>
        <childnode refid="16544" relation="include">
        </childnode>
        <childnode refid="16545" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16666">
        <label>src/lib/storage/hash_functor.h</label>
        <link refid="hash__functor_8h"/>
        <childnode refid="16515" relation="include">
        </childnode>
        <childnode refid="16667" relation="include">
        </childnode>
      </node>
      <node id="16595">
        <label>src/lib/access/InsertOnlyOperators.h</label>
        <link refid="_insert_only_operators_8h"/>
        <childnode refid="16492" relation="include">
        </childnode>
      </node>
      <node id="16591">
        <label>src/lib/access/HashBuild.cpp</label>
        <link refid="_hash_build_8cpp"/>
      </node>
      <node id="16540">
        <label>src/lib/access/TableScan.cpp</label>
        <link refid="_table_scan_8cpp"/>
      </node>
      <node id="16526">
        <label>src/lib/storage/MutableVerticalTable.cpp</label>
        <link refid="_mutable_vertical_table_8cpp"/>
      </node>
      <node id="16521">
        <label>src/lib/access/MultiplyRefField.h</label>
        <link refid="_multiply_ref_field_8h"/>
        <childnode refid="16522" relation="include">
        </childnode>
      </node>
      <node id="16561">
        <label>src/lib/access/pred_CompoundExpression.h</label>
        <link refid="pred___compound_expression_8h"/>
        <childnode refid="16471" relation="include">
        </childnode>
        <childnode refid="16562" relation="include">
        </childnode>
      </node>
      <node id="16614">
        <label>src/lib/access/PrefixSum.h</label>
        <link refid="_prefix_sum_8h"/>
        <childnode refid="16513" relation="include">
        </childnode>
      </node>
      <node id="16679">
        <label>src/lib/storage/FixedLengthVector.h</label>
        <link refid="_fixed_length_vector_8h"/>
        <childnode refid="16678" relation="include">
        </childnode>
        <childnode refid="16532" relation="include">
        </childnode>
        <childnode refid="16614" relation="include">
        </childnode>
        <childnode refid="16525" relation="include">
        </childnode>
        <childnode refid="16680" relation="include">
        </childnode>
      </node>
      <node id="16665">
        <label>src/lib/storage/cast_functor.h</label>
        <link refid="cast__functor_8h"/>
        <childnode refid="16542" relation="include">
        </childnode>
      </node>
      <node id="16641">
        <label>src/lib/access/UnionScan.h</label>
        <link refid="_union_scan_8h"/>
        <childnode refid="16518" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16554">
        <label>src/lib/storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="16555" relation="include">
        </childnode>
        <childnode refid="16677" relation="include">
        </childnode>
      </node>
      <node id="16519">
        <label>src/lib/storage/HorizontalTable.cpp</label>
        <link refid="_horizontal_table_8cpp"/>
      </node>
      <node id="16574">
        <label>src/lib/access/GroupByScan.h</label>
        <link refid="_group_by_scan_8h"/>
        <childnode refid="16530" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16680">
        <label>src/lib/storage/AttributeVectorFactory.h</label>
        <link refid="_attribute_vector_factory_8h"/>
        <childnode refid="16681" relation="include">
        </childnode>
        <childnode refid="16509" relation="include">
        </childnode>
      </node>
      <node id="16622">
        <label>src/lib/access/SetTable.h</label>
        <link refid="_set_table_8h"/>
        <childnode refid="16623" relation="include">
        </childnode>
      </node>
      <node id="16482">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="16620">
        <label>src/lib/access/ReplaceTable.cpp</label>
        <link refid="_replace_table_8cpp"/>
      </node>
      <node id="16589">
        <label>src/lib/access/GetTable.cpp</label>
        <link refid="_get_table_8cpp"/>
      </node>
      <node id="16676">
        <label>src/lib/testing/TableEqualityTest.cpp</label>
        <link refid="_table_equality_test_8cpp"/>
      </node>
      <node id="16631">
        <label>src/lib/access/TableLoad.h</label>
        <link refid="_table_load_8h"/>
        <childnode refid="16632" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16608">
        <label>src/lib/access/MySQLTableLoad.h</label>
        <link refid="_my_s_q_l_table_load_8h"/>
        <childnode refid="16609" relation="include">
        </childnode>
      </node>
      <node id="16483">
        <label>src/lib/access/MergeJoin.hpp</label>
        <link refid="_merge_join_8hpp"/>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16636">
        <label>src/lib/access/TaskSchedulerAdjustment.h</label>
        <link refid="_task_scheduler_adjustment_8h"/>
        <childnode refid="16637" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16667">
        <label>src/lib/storage/HashTable.h</label>
        <link refid="_hash_table_8h"/>
        <childnode refid="16572" relation="include">
        </childnode>
        <childnode refid="16530" relation="include">
        </childnode>
        <childnode refid="16591" relation="include">
        </childnode>
        <childnode refid="16531" relation="include">
        </childnode>
        <childnode refid="16606" relation="include">
        </childnode>
        <childnode refid="16647" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16533">
        <label>src/lib/access/Histogram.cpp</label>
        <link refid="_histogram_8cpp"/>
      </node>
      <node id="16613">
        <label>src/lib/access/PlanOperation.cpp</label>
        <link refid="_plan_operation_8cpp"/>
      </node>
      <node id="16534">
        <label>src/lib/access/RadixCluster.h</label>
        <link refid="_radix_cluster_8h"/>
        <childnode refid="16524" relation="include">
        </childnode>
      </node>
      <node id="16607">
        <label>src/lib/access/MergeTable.h</label>
        <link refid="_merge_table_8h"/>
        <childnode refid="16501" relation="include">
        </childnode>
      </node>
      <node id="16580">
        <label>src/lib/access/RadixJoinTransformation.cpp</label>
        <link refid="_radix_join_transformation_8cpp"/>
      </node>
      <node id="16524">
        <label>src/lib/access/RadixCluster.cpp</label>
        <link refid="_radix_cluster_8cpp"/>
      </node>
      <node id="16505">
        <label>src/lib/io/TableDump.cpp</label>
        <link refid="_table_dump_8cpp"/>
      </node>
      <node id="16493">
        <label>src/lib/access/ResponseTask.cpp</label>
        <link refid="_response_task_8cpp"/>
      </node>
      <node id="16525">
        <label>src/lib/access/ScriptOperation.cpp</label>
        <link refid="_script_operation_8cpp"/>
      </node>
      <node id="16484">
        <label>src/lib/access/pred_buildExpression.cpp</label>
        <link refid="pred__build_expression_8cpp"/>
      </node>
      <node id="16560">
        <label>src/lib/access/pred_buildExpression.h</label>
        <link refid="pred__build_expression_8h"/>
        <childnode refid="16484" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
        <childnode refid="16486" relation="include">
        </childnode>
        <childnode refid="16539" relation="include">
        </childnode>
      </node>
      <node id="16530">
        <label>src/lib/access/GroupByScan.cpp</label>
        <link refid="lib_2access_2_group_by_scan_8cpp"/>
      </node>
      <node id="16583">
        <label>src/lib/access/Barrier.h</label>
        <link refid="_barrier_8h"/>
        <childnode refid="16584" relation="include">
        </childnode>
      </node>
      <node id="16678">
        <label>src/lib/access/ExampleExpression.h</label>
        <link refid="_example_expression_8h"/>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16575" relation="include">
        </childnode>
        <childnode refid="16540" relation="include">
        </childnode>
      </node>
      <node id="16661">
        <label>src/lib/storage/SimpleStoreMerger.h</label>
        <link refid="_simple_store_merger_8h"/>
        <childnode refid="16495" relation="include">
        </childnode>
        <childnode refid="16496" relation="include">
        </childnode>
      </node>
      <node id="16522">
        <label>src/lib/access/MultiplyRefField.cpp</label>
        <link refid="_multiply_ref_field_8cpp"/>
      </node>
      <node id="16578">
        <label>src/lib/access/QueryTransformationEngine.h</label>
        <link refid="_query_transformation_engine_8h"/>
        <childnode refid="16579" relation="include">
        </childnode>
        <childnode refid="16580" relation="include">
        </childnode>
        <childnode refid="16581" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16557">
        <label>src/lib/access/pred_common.h</label>
        <link refid="pred__common_8h"/>
        <childnode refid="16558" relation="include">
        </childnode>
        <childnode refid="16559" relation="include">
        </childnode>
        <childnode refid="16560" relation="include">
        </childnode>
        <childnode refid="16561" relation="include">
        </childnode>
        <childnode refid="16469" relation="include">
        </childnode>
        <childnode refid="16564" relation="include">
        </childnode>
        <childnode refid="16565" relation="include">
        </childnode>
        <childnode refid="16566" relation="include">
        </childnode>
        <childnode refid="16567" relation="include">
        </childnode>
        <childnode refid="16568" relation="include">
        </childnode>
        <childnode refid="16562" relation="include">
        </childnode>
      </node>
      <node id="16558">
        <label>src/lib/access/pred_BetweenOperation.h</label>
        <link refid="pred___between_operation_8h"/>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
      <node id="16615">
        <label>src/lib/access/ProjectionScan.h</label>
        <link refid="_projection_scan_8h"/>
        <childnode refid="16538" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16611">
        <label>src/lib/access/NoOp.h</label>
        <link refid="_no_op_8h"/>
        <childnode refid="16612" relation="include">
        </childnode>
      </node>
      <node id="16478">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="16541">
        <label>src/lib/storage/PointerCalculatorFactory.cpp</label>
        <link refid="_pointer_calculator_factory_8cpp"/>
      </node>
      <node id="16646">
        <label>src/lib/testing/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="16582">
        <label>src/lib/access/RadixJoinTransformation.h</label>
        <link refid="_radix_join_transformation_8h"/>
        <childnode refid="16580" relation="include">
        </childnode>
      </node>
      <node id="16671">
        <label>src/lib/storage/TableRangeView.h</label>
        <link refid="_table_range_view_8h"/>
        <childnode refid="16591" relation="include">
        </childnode>
        <childnode refid="16613" relation="include">
        </childnode>
        <childnode refid="16507" relation="include">
        </childnode>
        <childnode refid="16672" relation="include">
        </childnode>
        <childnode refid="16673" relation="include">
        </childnode>
      </node>
      <node id="16556">
        <label>src/lib/storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="16557" relation="include">
        </childnode>
        <childnode refid="16569" relation="include">
        </childnode>
        <childnode refid="16655" relation="include">
        </childnode>
        <childnode refid="16657" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16577">
        <label>src/lib/access/AbstractPlanOpTransformation.h</label>
        <link refid="_abstract_plan_op_transformation_8h"/>
        <childnode refid="16578" relation="include">
        </childnode>
        <childnode refid="16582" relation="include">
        </childnode>
      </node>
      <node id="16571">
        <label>src/bin/test_relation_eq/main.cpp</label>
        <link refid="bin_2test__relation__eq_2main_8cpp"/>
      </node>
      <node id="16604">
        <label>src/lib/access/MaterializingScan.h</label>
        <link refid="_materializing_scan_8h"/>
        <childnode refid="16512" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16470">
        <label>src/bin/perf_regression/scan_performance.cpp</label>
        <link refid="scan__performance_8cpp"/>
      </node>
      <node id="16606">
        <label>src/lib/access/MergeHashTables.cpp</label>
        <link refid="_merge_hash_tables_8cpp"/>
      </node>
      <node id="16467">
        <label>src/lib/storage/RawTable.h</label>
        <link refid="_raw_table_8h"/>
        <childnode refid="16468" relation="include">
        </childnode>
        <childnode refid="16469" relation="include">
        </childnode>
        <childnode refid="16486" relation="include">
        </childnode>
        <childnode refid="16487" relation="include">
        </childnode>
        <childnode refid="16488" relation="include">
        </childnode>
        <childnode refid="16489" relation="include">
        </childnode>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16496" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16639">
        <label>src/lib/access/ThreadpoolAdjustment.cpp</label>
        <link refid="_threadpool_adjustment_8cpp"/>
      </node>
      <node id="16669">
        <label>src/lib/storage/TableBuilder.h</label>
        <link refid="_table_builder_8h"/>
        <childnode refid="16525" relation="include">
        </childnode>
        <childnode refid="16651" relation="include">
        </childnode>
        <childnode refid="16544" relation="include">
        </childnode>
      </node>
      <node id="16573">
        <label>src/lib/access/AggregateFunctions.cpp</label>
        <link refid="_aggregate_functions_8cpp"/>
      </node>
      <node id="16564">
        <label>src/lib/access/pred_GreaterThanExpression.h</label>
        <link refid="pred___greater_than_expression_8h"/>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
      <node id="16538">
        <label>src/lib/access/ProjectionScan.cpp</label>
        <link refid="lib_2access_2_projection_scan_8cpp"/>
      </node>
      <node id="16652">
        <label>src/lib/io/VectorLoader.cpp</label>
        <link refid="_vector_loader_8cpp"/>
      </node>
      <node id="16555">
        <label>src/lib/storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="16511" relation="include">
        </childnode>
        <childnode refid="16549" relation="include">
        </childnode>
        <childnode refid="16556" relation="include">
        </childnode>
      </node>
      <node id="16468">
        <label>src/lib/access/insertonly_merger.cpp</label>
        <link refid="insertonly__merger_8cpp"/>
      </node>
      <node id="16503">
        <label>src/lib/io/MPassCSVLoader.cpp</label>
        <link refid="_m_pass_c_s_v_loader_8cpp"/>
      </node>
      <node id="16662">
        <label>src/lib/storage/AbstractMergeStrategy.h</label>
        <link refid="_abstract_merge_strategy_8h"/>
        <childnode refid="16663" relation="include">
        </childnode>
        <childnode refid="16659" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16637">
        <label>src/lib/access/TaskSchedulerAdjustment.cpp</label>
        <link refid="_task_scheduler_adjustment_8cpp"/>
      </node>
      <node id="16523">
        <label>src/lib/access/NestedLoopEquiJoin.cpp</label>
        <link refid="_nested_loop_equi_join_8cpp"/>
      </node>
      <node id="16664">
        <label>src/lib/storage/LogarithmicMergeStrategy.cpp</label>
        <link refid="_logarithmic_merge_strategy_8cpp"/>
      </node>
      <node id="16515">
        <label>src/lib/storage/GroupValue.cpp</label>
        <link refid="_group_value_8cpp"/>
      </node>
      <node id="16481">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="16494">
        <label>src/lib/io/Loader.cpp</label>
        <link refid="_loader_8cpp"/>
      </node>
      <node id="16553">
        <label>src/lib/storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="16554" relation="include">
        </childnode>
        <childnode refid="16555" relation="include">
        </childnode>
        <childnode refid="16677" relation="include">
        </childnode>
        <childnode refid="16509" relation="include">
        </childnode>
        <childnode refid="16549" relation="include">
        </childnode>
      </node>
      <node id="16498">
        <label>src/lib/storage/Store.h</label>
        <link refid="_store_8h"/>
        <childnode refid="16499" relation="include">
        </childnode>
        <childnode refid="16500" relation="include">
        </childnode>
        <childnode refid="16501" relation="include">
        </childnode>
        <childnode refid="16502" relation="include">
        </childnode>
        <childnode refid="16494" relation="include">
        </childnode>
        <childnode refid="16503" relation="include">
        </childnode>
        <childnode refid="16504" relation="include">
        </childnode>
        <childnode refid="16505" relation="include">
        </childnode>
        <childnode refid="16506" relation="include">
        </childnode>
        <childnode refid="16507" relation="include">
        </childnode>
        <childnode refid="16508" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16536">
        <label>src/lib/access/insertonly_valid.h</label>
        <link refid="insertonly__valid_8h"/>
        <childnode refid="16491" relation="include">
        </childnode>
        <childnode refid="16468" relation="include">
        </childnode>
      </node>
      <node id="16509">
        <label>src/lib/storage/Table.h</label>
        <link refid="_table_8h"/>
        <childnode refid="16510" relation="include">
        </childnode>
        <childnode refid="16511" relation="include">
        </childnode>
        <childnode refid="16512" relation="include">
        </childnode>
        <childnode refid="16513" relation="include">
        </childnode>
        <childnode refid="16514" relation="include">
        </childnode>
        <childnode refid="16506" relation="include">
        </childnode>
        <childnode refid="16515" relation="include">
        </childnode>
        <childnode refid="16516" relation="include">
        </childnode>
        <childnode refid="16520" relation="include">
        </childnode>
        <childnode refid="16546" relation="include">
        </childnode>
        <childnode refid="16544" relation="include">
        </childnode>
        <childnode refid="16547" relation="include">
        </childnode>
        <childnode refid="16549" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16596">
        <label>src/lib/access/InsertScan.h</label>
        <link refid="_insert_scan_8h"/>
        <childnode refid="16499" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16633">
        <label>src/lib/access/TableScan.h</label>
        <link refid="_table_scan_8h"/>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16540" relation="include">
        </childnode>
      </node>
      <node id="16656">
        <label>src/lib/storage/SequentialHeapMerger.cpp</label>
        <link refid="_sequential_heap_merger_8cpp"/>
      </node>
      <node id="16532">
        <label>src/lib/access/Histogram.h</label>
        <link refid="_histogram_8h"/>
        <childnode refid="16533" relation="include">
        </childnode>
        <childnode refid="16513" relation="include">
        </childnode>
        <childnode refid="16534" relation="include">
        </childnode>
      </node>
      <node id="16475">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="16479">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="16496">
        <label>src/lib/storage/SimpleStoreMerger.cpp</label>
        <link refid="_simple_store_merger_8cpp"/>
      </node>
      <node id="16563">
        <label>src/lib/access/pred_PredicateBuilder.cpp</label>
        <link refid="pred___predicate_builder_8cpp"/>
      </node>
      <node id="16675">
        <label>src/lib/storage/TableUtils.cpp</label>
        <link refid="_table_utils_8cpp"/>
      </node>
      <node id="16599">
        <label>src/lib/access/LayoutTable.h</label>
        <link refid="_layout_table_8h"/>
        <childnode refid="16500" relation="include">
        </childnode>
      </node>
      <node id="16569">
        <label>src/lib/storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="16570" relation="include">
        </childnode>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16571" relation="include">
        </childnode>
        <childnode refid="16572" relation="include">
        </childnode>
        <childnode refid="16528" relation="include">
        </childnode>
        <childnode refid="16575" relation="include">
        </childnode>
        <childnode refid="16576" relation="include">
        </childnode>
        <childnode refid="16593" relation="include">
        </childnode>
        <childnode refid="16491" relation="include">
        </childnode>
        <childnode refid="16483" relation="include">
        </childnode>
        <childnode refid="16647" relation="include">
        </childnode>
        <childnode refid="16613" relation="include">
        </childnode>
        <childnode refid="16557" relation="include">
        </childnode>
        <childnode refid="16493" relation="include">
        </childnode>
        <childnode refid="16514" relation="include">
        </childnode>
        <childnode refid="16540" relation="include">
        </childnode>
        <childnode refid="16648" relation="include">
        </childnode>
        <childnode refid="16649" relation="include">
        </childnode>
        <childnode refid="16494" relation="include">
        </childnode>
        <childnode refid="16650" relation="include">
        </childnode>
        <childnode refid="16503" relation="include">
        </childnode>
        <childnode refid="16504" relation="include">
        </childnode>
        <childnode refid="16651" relation="include">
        </childnode>
        <childnode refid="16505" relation="include">
        </childnode>
        <childnode refid="16551" relation="include">
        </childnode>
        <childnode refid="16652" relation="include">
        </childnode>
        <childnode refid="16653" relation="include">
        </childnode>
        <childnode refid="16662" relation="include">
        </childnode>
        <childnode refid="16506" relation="include">
        </childnode>
        <childnode refid="16665" relation="include">
        </childnode>
        <childnode refid="16666" relation="include">
        </childnode>
        <childnode refid="16667" relation="include">
        </childnode>
        <childnode refid="16516" relation="include">
        </childnode>
        <childnode refid="16668" relation="include">
        </childnode>
        <childnode refid="16663" relation="include">
        </childnode>
        <childnode refid="16520" relation="include">
        </childnode>
        <childnode refid="16527" relation="include">
        </childnode>
        <childnode refid="16488" relation="include">
        </childnode>
        <childnode refid="16467" relation="include">
        </childnode>
        <childnode refid="16655" relation="include">
        </childnode>
        <childnode refid="16657" relation="include">
        </childnode>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16659" relation="include">
        </childnode>
        <childnode refid="16498" relation="include">
        </childnode>
        <childnode refid="16509" relation="include">
        </childnode>
        <childnode refid="16544" relation="include">
        </childnode>
        <childnode refid="16669" relation="include">
        </childnode>
        <childnode refid="16670" relation="include">
        </childnode>
        <childnode refid="16547" relation="include">
        </childnode>
        <childnode refid="16545" relation="include">
        </childnode>
        <childnode refid="16550" relation="include">
        </childnode>
        <childnode refid="16671" relation="include">
        </childnode>
        <childnode refid="16673" relation="include">
        </childnode>
        <childnode refid="16675" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
        <childnode refid="16676" relation="include">
        </childnode>
      </node>
      <node id="16516">
        <label>src/lib/storage/HorizontalTable.h</label>
        <link refid="_horizontal_table_8h"/>
        <childnode refid="16517" relation="include">
        </childnode>
        <childnode refid="16518" relation="include">
        </childnode>
        <childnode refid="16519" relation="include">
        </childnode>
      </node>
      <node id="16552">
        <label>src/lib/storage/TestDataGenerator.cpp</label>
        <link refid="_test_data_generator_8cpp"/>
      </node>
      <node id="16547">
        <label>src/lib/storage/TableFactory.h</label>
        <link refid="_table_factory_8h"/>
        <childnode refid="16494" relation="include">
        </childnode>
        <childnode refid="16520" relation="include">
        </childnode>
        <childnode refid="16548" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16587">
        <label>src/lib/access/ExpressionScan.h</label>
        <link refid="_expression_scan_8h"/>
        <childnode refid="16510" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16491">
        <label>src/lib/access/insertonly.cpp</label>
        <link refid="insertonly_8cpp"/>
      </node>
      <node id="16543">
        <label>src/lib/storage/storage_types_helper.cpp</label>
        <link refid="storage__types__helper_8cpp"/>
      </node>
      <node id="16653">
        <label>src/lib/storage/AbstractMerger.h</label>
        <link refid="_abstract_merger_8h"/>
        <childnode refid="16654" relation="include">
        </childnode>
        <childnode refid="16655" relation="include">
        </childnode>
        <childnode refid="16657" relation="include">
        </childnode>
        <childnode refid="16659" relation="include">
        </childnode>
        <childnode refid="16661" relation="include">
        </childnode>
        <childnode refid="16660" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16476">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="16626">
        <label>src/lib/access/SimpleRawTableScan.h</label>
        <link refid="_simple_raw_table_scan_8h"/>
        <childnode refid="16486" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16674">
        <label>src/lib/storage/TableRangeViewFactory.cpp</label>
        <link refid="_table_range_view_factory_8cpp"/>
      </node>
      <node id="16588">
        <label>src/lib/access/GetTable.h</label>
        <link refid="_get_table_8h"/>
        <childnode refid="16589" relation="include">
        </childnode>
      </node>
      <node id="16616">
        <label>src/lib/access/QueryParser.cpp</label>
        <link refid="_query_parser_8cpp"/>
      </node>
      <node id="16663">
        <label>src/lib/storage/LogarithmicMergeStrategy.h</label>
        <link refid="_logarithmic_merge_strategy_8h"/>
        <childnode refid="16491" relation="include">
        </childnode>
        <childnode refid="16494" relation="include">
        </childnode>
        <childnode refid="16664" relation="include">
        </childnode>
        <childnode refid="16495" relation="include">
        </childnode>
        <childnode refid="16498" relation="include">
        </childnode>
        <childnode refid="16545" relation="include">
        </childnode>
        <childnode refid="16552" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16609">
        <label>src/lib/access/MySQLTableLoad.cpp</label>
        <link refid="_my_s_q_l_table_load_8cpp"/>
      </node>
      <node id="16635">
        <label>src/lib/access/TableUnload.cpp</label>
        <link refid="_table_unload_8cpp"/>
      </node>
      <node id="16592">
        <label>src/lib/access/HashJoinProbe.h</label>
        <link refid="_hash_join_probe_8h"/>
        <childnode refid="16531" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16602">
        <label>src/lib/access/LoadFile.h</label>
        <link refid="_load_file_8h"/>
        <childnode refid="16603" relation="include">
        </childnode>
      </node>
      <node id="16630">
        <label>src/lib/access/SortScan.h</label>
        <link refid="_sort_scan_8h"/>
        <childnode refid="16514" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16621">
        <label>src/lib/access/ScriptOperation.h</label>
        <link refid="_script_operation_8h"/>
        <childnode refid="16525" relation="include">
        </childnode>
      </node>
      <node id="16490">
        <label>src/lib/storage/SimpleStore.h</label>
        <link refid="_simple_store_8h"/>
        <childnode refid="16491" relation="include">
        </childnode>
        <childnode refid="16468" relation="include">
        </childnode>
        <childnode refid="16492" relation="include">
        </childnode>
        <childnode refid="16493" relation="include">
        </childnode>
        <childnode refid="16494" relation="include">
        </childnode>
        <childnode refid="16495" relation="include">
        </childnode>
        <childnode refid="16496" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16625">
        <label>src/lib/access/SettingsOperation.cpp</label>
        <link refid="_settings_operation_8cpp"/>
      </node>
      <node id="16590">
        <label>src/lib/access/HashBuild.h</label>
        <link refid="_hash_build_8h"/>
        <childnode refid="16591" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16668">
        <label>src/lib/storage/InvertedIndex.h</label>
        <link refid="_inverted_index_8h"/>
        <childnode refid="16528" relation="include">
        </childnode>
        <childnode refid="16535" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16506">
        <label>src/lib/storage/AbstractTable.cpp</label>
        <link refid="_abstract_table_8cpp"/>
      </node>
      <node id="16632">
        <label>src/lib/access/TableLoad.cpp</label>
        <link refid="_table_load_8cpp"/>
      </node>
      <node id="16518">
        <label>src/lib/access/UnionScan.cpp</label>
        <link refid="lib_2access_2_union_scan_8cpp"/>
      </node>
      <node id="16603">
        <label>src/lib/access/LoadFile.cpp</label>
        <link refid="_load_file_8cpp"/>
      </node>
      <node id="16648">
        <label>src/lib/io/ColumnLoader.h</label>
        <link refid="_column_loader_8h"/>
        <childnode refid="16503" relation="include">
        </childnode>
      </node>
      <node id="16527">
        <label>src/lib/storage/PointerCalculator.h</label>
        <link refid="_pointer_calculator_8h"/>
        <childnode refid="16528" relation="include">
        </childnode>
        <childnode refid="16529" relation="include">
        </childnode>
        <childnode refid="16530" relation="include">
        </childnode>
        <childnode refid="16531" relation="include">
        </childnode>
        <childnode refid="16532" relation="include">
        </childnode>
        <childnode refid="16535" relation="include">
        </childnode>
        <childnode refid="16491" relation="include">
        </childnode>
        <childnode refid="16536" relation="include">
        </childnode>
        <childnode refid="16492" relation="include">
        </childnode>
        <childnode refid="16537" relation="include">
        </childnode>
        <childnode refid="16473" relation="include">
        </childnode>
        <childnode refid="16483" relation="include">
        </childnode>
        <childnode refid="16521" relation="include">
        </childnode>
        <childnode refid="16523" relation="include">
        </childnode>
        <childnode refid="16538" relation="include">
        </childnode>
        <childnode refid="16525" relation="include">
        </childnode>
        <childnode refid="16486" relation="include">
        </childnode>
        <childnode refid="16539" relation="include">
        </childnode>
        <childnode refid="16514" relation="include">
        </childnode>
        <childnode refid="16540" relation="include">
        </childnode>
        <childnode refid="16517" relation="include">
        </childnode>
        <childnode refid="16518" relation="include">
        </childnode>
        <childnode refid="16507" relation="include">
        </childnode>
        <childnode refid="16541" relation="include">
        </childnode>
        <childnode refid="16542" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16655">
        <label>src/lib/storage/SequentialHeapMerger.h</label>
        <link refid="_sequential_heap_merger_8h"/>
        <childnode refid="16500" relation="include">
        </childnode>
        <childnode refid="16494" relation="include">
        </childnode>
        <childnode refid="16656" relation="include">
        </childnode>
        <childnode refid="16498" relation="include">
        </childnode>
        <childnode refid="16545" relation="include">
        </childnode>
        <childnode refid="16552" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16627">
        <label>src/lib/access/SimpleTableScan.h</label>
        <link refid="_simple_table_scan_8h"/>
        <childnode refid="16539" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16542">
        <label>src/lib/storage/storage_types_helper.h</label>
        <link refid="storage__types__helper_8h"/>
        <childnode refid="16505" relation="include">
        </childnode>
        <childnode refid="16506" relation="include">
        </childnode>
        <childnode refid="16515" relation="include">
        </childnode>
        <childnode refid="16543" relation="include">
        </childnode>
      </node>
      <node id="16593">
        <label>src/lib/access/HashValueJoin.hpp</label>
        <link refid="_hash_value_join_8hpp"/>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16486">
        <label>src/lib/access/SimpleRawTableScan.cpp</label>
        <link refid="_simple_raw_table_scan_8cpp"/>
      </node>
      <node id="16549">
        <label>src/lib/storage/TableGenerator-impl.h</label>
        <link refid="_table_generator-impl_8h"/>
        <childnode refid="16550" relation="include">
        </childnode>
      </node>
      <node id="16464">
        <label>src/lib/memory/StrategizedAllocator.h</label>
        <link refid="StrategizedAllocator.h"/>
        <childnode refid="16465" relation="include">
        </childnode>
        <childnode refid="16466" relation="include">
        </childnode>
        <childnode refid="16553" relation="include">
        </childnode>
        <childnode refid="16679" relation="include">
        </childnode>
      </node>
      <node id="16610">
        <label>src/lib/access/NestedLoopEquiJoin.h</label>
        <link refid="_nested_loop_equi_join_8h"/>
        <childnode refid="16523" relation="include">
        </childnode>
      </node>
      <node id="16517">
        <label>src/lib/access/UnionAll.cpp</label>
        <link refid="_union_all_8cpp"/>
      </node>
      <node id="16643">
        <label>src/lib/access/UnloadAll.cpp</label>
        <link refid="_unload_all_8cpp"/>
      </node>
      <node id="16477">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="16500">
        <label>src/lib/access/LayoutTable.cpp</label>
        <link refid="_layout_table_8cpp"/>
      </node>
      <node id="16659">
        <label>src/lib/storage/TableMerger.h</label>
        <link refid="_table_merger_8h"/>
        <childnode refid="16490" relation="include">
        </childnode>
        <childnode refid="16495" relation="include">
        </childnode>
        <childnode refid="16498" relation="include">
        </childnode>
        <childnode refid="16545" relation="include">
        </childnode>
        <childnode refid="16660" relation="include">
        </childnode>
        <childnode refid="16552" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16544">
        <label>src/lib/storage/TableBuilder.cpp</label>
        <link refid="_table_builder_8cpp"/>
      </node>
      <node id="16474">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="16475" relation="include">
        </childnode>
        <childnode refid="16476" relation="include">
        </childnode>
        <childnode refid="16477" relation="include">
        </childnode>
        <childnode refid="16478" relation="include">
        </childnode>
        <childnode refid="16479" relation="include">
        </childnode>
        <childnode refid="16480" relation="include">
        </childnode>
        <childnode refid="16481" relation="include">
        </childnode>
        <childnode refid="16482" relation="include">
        </childnode>
      </node>
      <node id="16489">
        <label>src/lib/storage/RawTable.cpp</label>
        <link refid="_raw_table_8cpp"/>
      </node>
      <node id="16579">
        <label>src/lib/access/QueryTransformationEngine.cpp</label>
        <link refid="_query_transformation_engine_8cpp"/>
      </node>
      <node id="16471">
        <label>src/lib/access/predicates.h</label>
        <link refid="predicates_8h"/>
        <childnode refid="16472" relation="include">
        </childnode>
        <childnode refid="16483" relation="include">
        </childnode>
        <childnode refid="16484" relation="include">
        </childnode>
        <childnode refid="16485" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16650">
        <label>src/lib/io/MetadataCreation.cpp</label>
        <link refid="_metadata_creation_8cpp"/>
      </node>
      <node id="16567">
        <label>src/lib/access/pred_MultiTableEqualsExpression.h</label>
        <link refid="pred___multi_table_equals_expression_8h"/>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
      <node id="16644">
        <label>src/lib/access/UpdateScan.h</label>
        <link refid="_update_scan_8h"/>
        <childnode refid="16502" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16551">
        <label>src/lib/io/ValidityTableGeneration.cpp</label>
        <link refid="_validity_table_generation_8cpp"/>
      </node>
      <node id="16510">
        <label>src/lib/access/ExpressionScan.cpp</label>
        <link refid="_expression_scan_8cpp"/>
      </node>
      <node id="16566">
        <label>src/lib/access/pred_MultiTableBetweenExpression.h</label>
        <link refid="pred___multi_table_between_expression_8h"/>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
      <node id="16545">
        <label>src/lib/storage/TableGenerator.cpp</label>
        <link refid="_table_generator_8cpp"/>
      </node>
      <node id="16480">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="16469">
        <label>src/lib/access/pred_EqualsExpression.h</label>
        <link refid="pred___equals_expression_8h"/>
        <childnode refid="16470" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
      <node id="16570">
        <label>src/bin/perf_regression/Loading.cpp</label>
        <link refid="_loading_8cpp"/>
      </node>
      <node id="16492">
        <label>src/lib/access/InsertOnlyOperators.cpp</label>
        <link refid="_insert_only_operators_8cpp"/>
      </node>
      <node id="16539">
        <label>src/lib/access/SimpleTableScan.cpp</label>
        <link refid="lib_2access_2_simple_table_scan_8cpp"/>
      </node>
      <node id="16501">
        <label>src/lib/access/MergeTable.cpp</label>
        <link refid="_merge_table_8cpp"/>
      </node>
      <node id="16575">
        <label>src/lib/access/ExampleExpression.cpp</label>
        <link refid="_example_expression_8cpp"/>
      </node>
      <node id="16594">
        <label>src/lib/access/IndexScan.h</label>
        <link refid="_index_scan_8h"/>
        <childnode refid="16535" relation="include">
        </childnode>
      </node>
      <node id="16600">
        <label>src/lib/access/LayoutTableLoad.h</label>
        <link refid="_layout_table_load_8h"/>
        <childnode refid="16601" relation="include">
        </childnode>
      </node>
      <node id="16568">
        <label>src/lib/access/pred_MultiTableLessThanExpression.h</label>
        <link refid="pred___multi_table_less_than_expression_8h"/>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
      <node id="16618">
        <label>src/lib/access/RadixJoin.cpp</label>
        <link refid="_radix_join_8cpp"/>
      </node>
      <node id="16581">
        <label>src/lib/access/RequestParseTask.cpp</label>
        <link refid="_request_parse_task_8cpp"/>
      </node>
      <node id="16634">
        <label>src/lib/access/TableUnload.h</label>
        <link refid="_table_unload_8h"/>
        <childnode refid="16635" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16624">
        <label>src/lib/access/SettingsOperation.h</label>
        <link refid="_settings_operation_8h"/>
        <childnode refid="16625" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16681">
        <label>src/lib/storage/Table-impl.h</label>
        <link refid="_table-impl_8h"/>
        <childnode refid="16509" relation="include">
        </childnode>
      </node>
      <node id="16657">
        <label>src/lib/storage/SequentialHeapMergerRow.h</label>
        <link refid="_sequential_heap_merger_row_8h"/>
        <childnode refid="16658" relation="include">
        </childnode>
        <childnode refid="16497" relation="include">
        </childnode>
      </node>
      <node id="16642">
        <label>src/lib/access/UnloadAll.h</label>
        <link refid="_unload_all_8h"/>
        <childnode refid="16643" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16672">
        <label>src/lib/storage/TableRangeView.cpp</label>
        <link refid="_table_range_view_8cpp"/>
      </node>
      <node id="16488">
        <label>src/lib/storage/PrettyPrinter.cpp</label>
        <link refid="_pretty_printer_8cpp"/>
      </node>
      <node id="16605">
        <label>src/lib/access/MergeHashTables.h</label>
        <link refid="_merge_hash_tables_8h"/>
        <childnode refid="16606" relation="include">
        </childnode>
      </node>
      <node id="16628">
        <label>src/lib/access/SmallestTableScan.h</label>
        <link refid="_smallest_table_scan_8h"/>
        <childnode refid="16629" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16559">
        <label>src/lib/access/pred_SimpleFieldExpression.h</label>
        <link refid="pred___simple_field_expression_8h"/>
        <childnode refid="16557" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
      <node id="16677">
        <label>src/lib/storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="16678" relation="include">
        </childnode>
        <childnode refid="16532" relation="include">
        </childnode>
        <childnode refid="16503" relation="include">
        </childnode>
        <childnode refid="16496" relation="include">
        </childnode>
        <childnode refid="16556" relation="include">
        </childnode>
      </node>
      <node id="16472">
        <label>src/lib/access/JoinScan.h</label>
        <link refid="_join_scan_8h"/>
        <childnode refid="16473" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16535">
        <label>src/lib/access/IndexScan.cpp</label>
        <link refid="_index_scan_8cpp"/>
      </node>
      <node id="16651">
        <label>src/lib/io/StorageManager.cpp</label>
        <link refid="_storage_manager_8cpp"/>
      </node>
      <node id="16612">
        <label>src/lib/access/NoOp.cpp</label>
        <link refid="_no_op_8cpp"/>
      </node>
      <node id="16512">
        <label>src/lib/access/MaterializingScan.cpp</label>
        <link refid="_materializing_scan_8cpp"/>
      </node>
      <node id="16576">
        <label>src/lib/access/PlanOperation.h</label>
        <link refid="_plan_operation_8h"/>
        <childnode refid="16577" relation="include">
        </childnode>
        <childnode refid="16583" relation="include">
        </childnode>
        <childnode refid="16585" relation="include">
        </childnode>
        <childnode refid="16586" relation="include">
        </childnode>
        <childnode refid="16587" relation="include">
        </childnode>
        <childnode refid="16588" relation="include">
        </childnode>
        <childnode refid="16574" relation="include">
        </childnode>
        <childnode refid="16590" relation="include">
        </childnode>
        <childnode refid="16592" relation="include">
        </childnode>
        <childnode refid="16593" relation="include">
        </childnode>
        <childnode refid="16532" relation="include">
        </childnode>
        <childnode refid="16594" relation="include">
        </childnode>
        <childnode refid="16595" relation="include">
        </childnode>
        <childnode refid="16596" relation="include">
        </childnode>
        <childnode refid="16597" relation="include">
        </childnode>
        <childnode refid="16472" relation="include">
        </childnode>
        <childnode refid="16598" relation="include">
        </childnode>
        <childnode refid="16599" relation="include">
        </childnode>
        <childnode refid="16600" relation="include">
        </childnode>
        <childnode refid="16602" relation="include">
        </childnode>
        <childnode refid="16604" relation="include">
        </childnode>
        <childnode refid="16605" relation="include">
        </childnode>
        <childnode refid="16483" relation="include">
        </childnode>
        <childnode refid="16607" relation="include">
        </childnode>
        <childnode refid="16521" relation="include">
        </childnode>
        <childnode refid="16608" relation="include">
        </childnode>
        <childnode refid="16610" relation="include">
        </childnode>
        <childnode refid="16611" relation="include">
        </childnode>
        <childnode refid="16613" relation="include">
        </childnode>
        <childnode refid="16614" relation="include">
        </childnode>
        <childnode refid="16615" relation="include">
        </childnode>
        <childnode refid="16616" relation="include">
        </childnode>
        <childnode refid="16534" relation="include">
        </childnode>
        <childnode refid="16617" relation="include">
        </childnode>
        <childnode refid="16619" relation="include">
        </childnode>
        <childnode refid="16581" relation="include">
        </childnode>
        <childnode refid="16493" relation="include">
        </childnode>
        <childnode refid="16621" relation="include">
        </childnode>
        <childnode refid="16622" relation="include">
        </childnode>
        <childnode refid="16624" relation="include">
        </childnode>
        <childnode refid="16626" relation="include">
        </childnode>
        <childnode refid="16627" relation="include">
        </childnode>
        <childnode refid="16628" relation="include">
        </childnode>
        <childnode refid="16630" relation="include">
        </childnode>
        <childnode refid="16631" relation="include">
        </childnode>
        <childnode refid="16633" relation="include">
        </childnode>
        <childnode refid="16634" relation="include">
        </childnode>
        <childnode refid="16636" relation="include">
        </childnode>
        <childnode refid="16638" relation="include">
        </childnode>
        <childnode refid="16640" relation="include">
        </childnode>
        <childnode refid="16641" relation="include">
        </childnode>
        <childnode refid="16642" relation="include">
        </childnode>
        <childnode refid="16644" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
        <childnode refid="16645" relation="include">
        </childnode>
      </node>
      <node id="16660">
        <label>src/lib/storage/TableMerger.cpp</label>
        <link refid="_table_merger_8cpp"/>
      </node>
      <node id="16537">
        <label>src/lib/access/IntersectPositions.cpp</label>
        <link refid="_intersect_positions_8cpp"/>
      </node>
      <node id="16529">
        <label>src/lib/access/Distinct.cpp</label>
        <link refid="_distinct_8cpp"/>
      </node>
      <node id="16473">
        <label>src/lib/access/JoinScan.cpp</label>
        <link refid="lib_2access_2_join_scan_8cpp"/>
      </node>
      <node id="16585">
        <label>src/lib/access/CreateIndex.h</label>
        <link refid="_create_index_8h"/>
        <childnode refid="16528" relation="include">
        </childnode>
      </node>
      <node id="16584">
        <label>src/lib/access/Barrier.cpp</label>
        <link refid="_barrier_8cpp"/>
      </node>
      <node id="16645">
        <label>src/lib/testing/test.h</label>
        <link refid="test_8h"/>
        <childnode refid="16646" relation="include">
        </childnode>
      </node>
      <node id="16623">
        <label>src/lib/access/SetTable.cpp</label>
        <link refid="_set_table_8cpp"/>
      </node>
      <node id="16572">
        <label>src/lib/access/AggregateFunctions.h</label>
        <link refid="_aggregate_functions_8h"/>
        <childnode refid="16573" relation="include">
        </childnode>
        <childnode refid="16574" relation="include">
        </childnode>
      </node>
      <node id="16565">
        <label>src/lib/access/pred_LessThanExpression.h</label>
        <link refid="pred___less_than_expression_8h"/>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
      <node id="16528">
        <label>src/lib/access/CreateIndex.cpp</label>
        <link refid="_create_index_8cpp"/>
      </node>
      <node id="16562">
        <label>src/lib/access/pred_PredicateBuilder.h</label>
        <link refid="pred___predicate_builder_8h"/>
        <childnode refid="16471" relation="include">
        </childnode>
        <childnode refid="16563" relation="include">
        </childnode>
      </node>
      <node id="16597">
        <label>src/lib/access/IntersectPositions.h</label>
        <link refid="_intersect_positions_8h"/>
        <childnode refid="16537" relation="include">
        </childnode>
      </node>
      <node id="16465">
        <label>src/lib/memory.h</label>
        <link refid="memory_8h"/>
      </node>
      <node id="16598">
        <label>src/lib/access/Layouter.h</label>
        <link refid="_layouter_8h"/>
        <childnode refid="16511" relation="include">
        </childnode>
        <childnode refid="16474" relation="include">
        </childnode>
      </node>
      <node id="16485">
        <label>src/lib/access/pred_expression_factory.h</label>
        <link refid="pred__expression__factory_8h"/>
        <childnode refid="16484" relation="include">
        </childnode>
        <childnode refid="16471" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_strategized_allocator" prot="public">StrategizedAllocator</innerclass>
    <innerclass refid="struct_strategized_allocator_1_1rebind" prot="public">StrategizedAllocator::rebind</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_strategized_allocator_8h_1a0a91a387ec91571f97c04fd98b23af1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void assign</definition>
        <argsstring>(T1 &amp;t1, T2 &amp;t2)</argsstring>
        <name>assign</name>
        <param>
          <type>T1 &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T2 &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/memory/StrategizedAllocator.h" line="113" bodyfile="/home/grund/hyrise/src/lib/memory/StrategizedAllocator.h" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="_strategized_allocator_8h_1ad4f1ccefde8e590e5491021eec182e5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void assign</definition>
        <argsstring>(T &amp;t1, T &amp;t2)</argsstring>
        <name>assign</name>
        <param>
          <type>T &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>T &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/memory/StrategizedAllocator.h" line="118" bodyfile="/home/grund/hyrise/src/lib/memory/StrategizedAllocator.h" bodystart="118" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_MEMORY_STRATEGIZEDALLOCATOR_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_MEMORY_STRATEGIZEDALLOCATOR_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="12" refid="class_strategized_allocator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_strategized_allocator" kindref="compound">StrategizedAllocator</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>will<sp/>be<sp/>the<sp/>same<sp/>for<sp/>virtually<sp/>all<sp/>allocators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="class_strategized_allocator_1a874e5b39b73e071595e4db8481761613" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>*<ref refid="class_strategized_allocator_1a874e5b39b73e071595e4db8481761613" kindref="member">pointer</ref>;</highlight></codeline>
<codeline lineno="17" refid="class_strategized_allocator_1a8ad27145f9f8a06fd0a80eb7675f24b8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*<ref refid="class_strategized_allocator_1a8ad27145f9f8a06fd0a80eb7675f24b8" kindref="member">const_pointer</ref>;</highlight></codeline>
<codeline lineno="18" refid="class_strategized_allocator_1a1533c1563209a47047a5ddbf56bc2054" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="class_strategized_allocator_1a1533c1563209a47047a5ddbf56bc2054" kindref="member">reference</ref>;</highlight></codeline>
<codeline lineno="19" refid="class_strategized_allocator_1a6a00ec3856b37f75819ad2a941a96162" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;<ref refid="class_strategized_allocator_1a6a00ec3856b37f75819ad2a941a96162" kindref="member">const_reference</ref>;</highlight></codeline>
<codeline lineno="20" refid="class_strategized_allocator_1a0bd19e3a0d395c77439ea4020e1ef94b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_strategized_allocator_1a0bd19e3a0d395c77439ea4020e1ef94b" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="21" refid="class_strategized_allocator_1a2618c6ec6bb90275a7a24f7984a84952" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator_1a2618c6ec6bb90275a7a24f7984a84952" kindref="member">size_type</ref>;</highlight></codeline>
<codeline lineno="22" refid="class_strategized_allocator_1a49dc52dd652525b17618f34085241e13" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ptrdiff_t<sp/><ref refid="class_strategized_allocator_1a49dc52dd652525b17618f34085241e13" kindref="member">difference_type</ref>;</highlight></codeline>
<codeline lineno="23" refid="class_strategized_allocator_1a522b6284435ae171e4db78425f791bee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>S<sp/><ref refid="class_strategized_allocator_1a522b6284435ae171e4db78425f791bee" kindref="member">strategy</ref>;</highlight></codeline>
<codeline lineno="24" refid="class_strategized_allocator_1a5b37cf7490122777b1331c53280ba8b2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>S<sp/><ref refid="class_strategized_allocator_1a5b37cf7490122777b1331c53280ba8b2" kindref="member">Strategy</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_strategized_allocator_1acb0f2568e08c9a71d5caed7309b928a0" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/>*<ref refid="class_strategized_allocator_1acb0f2568e08c9a71d5caed7309b928a0" kindref="member">address</ref>(T<sp/>&amp;r)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;r;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_strategized_allocator_1ab2e1ae7c4ec808b24d74a70404238eb5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*<ref refid="class_strategized_allocator_1ab2e1ae7c4ec808b24d74a70404238eb5" kindref="member">address</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;s)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;s;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_strategized_allocator_1acb6302c9cf75d843379719fbe004491d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator_1acb6302c9cf75d843379719fbe004491d" kindref="member">max_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(static_cast&lt;size_t&gt;(0)<sp/>-<sp/>static_cast&lt;size_t&gt;(1))<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="struct_strategized_allocator_1_1rebind" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_strategized_allocator_1_1rebind" kindref="compound">rebind</ref><sp/>{</highlight></codeline>
<codeline lineno="39" refid="struct_strategized_allocator_1_1rebind_1ad712807bacc71ab5b1ca23d1cae0156a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator" kindref="compound">StrategizedAllocator&lt;U, S&gt;</ref><sp/><ref refid="struct_strategized_allocator_1_1rebind_1ad712807bacc71ab5b1ca23d1cae0156a" kindref="member">other</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_strategized_allocator_1a13f49b5d1a55527c25d5e26b93663e0c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator_1a13f49b5d1a55527c25d5e26b93663e0c" kindref="member">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator" kindref="compound">StrategizedAllocator</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>other);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_strategized_allocator_1a9bdadfece7914adc86f09fa0653e7551" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator_1a9bdadfece7914adc86f09fa0653e7551" kindref="member">construct</ref>(T<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pv<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(pv)<sp/>T(t);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_strategized_allocator_1ab1a4cc961a0168625cb831f3f4c2d7fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator_1ab1a4cc961a0168625cb831f3f4c2d7fa" kindref="member">construct</ref>(T<sp/>*p)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>p)<sp/>T;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator_1a2840ed2a1e16c71f665cd7c191dbdb58" kindref="member">destroy</ref>(T<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>true<sp/>iff<sp/>storage<sp/>allocated<sp/>from<sp/>*this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>be<sp/>deallocated<sp/>from<sp/>other,<sp/>and<sp/>vice<sp/>versa.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Always<sp/>returns<sp/>true<sp/>for<sp/>stateless<sp/>allocators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_strategized_allocator_1a5d062b92f592a61c6d940fe3317c9a2e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator_1a5d062b92f592a61c6d940fe3317c9a2e" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator" kindref="compound">StrategizedAllocator</ref><sp/>&amp;other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>constructor,<sp/>copy<sp/>constructor,<sp/>rebinding<sp/>constructor,<sp/>and<sp/>destructor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>for<sp/>stateless<sp/>allocators.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_strategized_allocator_1a61059730f6ffba63b54e8b37c016e8ed" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_strategized_allocator_1a61059730f6ffba63b54e8b37c016e8ed" kindref="member">StrategizedAllocator</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_strategized_allocator_1ab2451ea5a83cdf2887ce6fb65ddc0e84" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_strategized_allocator_1ab2451ea5a83cdf2887ce6fb65ddc0e84" kindref="member">StrategizedAllocator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator" kindref="compound">StrategizedAllocator</ref><sp/>&amp;)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_strategized_allocator_1acc8a7f480cf0e1ea71976216f1e1339f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/><ref refid="class_strategized_allocator_1acc8a7f480cf0e1ea71976216f1e1339f" kindref="member">StrategizedAllocator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator" kindref="compound">StrategizedAllocator&lt;U, S&gt;</ref><sp/>&amp;)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_strategized_allocator_1a0b7394993b9c9e42d623c2302a99f95b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_strategized_allocator_1a0b7394993b9c9e42d623c2302a99f95b" kindref="member">~StrategizedAllocator</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_strategized_allocator_1ae106fdd8ae94da38d60a627ff5fe9874" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/>*<ref refid="class_strategized_allocator_1ae106fdd8ae94da38d60a627ff5fe9874" kindref="member">allocate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/><ref refid="class_strategized_allocator_1acb6302c9cf75d843379719fbe004491d" kindref="member">max_size</ref>())<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::length_error(</highlight><highlight class="stringliteral">&quot;StrategizedAllocator&lt;T&gt;::allocate()<sp/>-<sp/>Integer<sp/>overflow.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pv<sp/>=<sp/><ref refid="class_strategized_allocator_1ae106fdd8ae94da38d60a627ff5fe9874" kindref="member">strategy::allocate</ref>(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pv<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::bad_alloc();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(pv);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="class_strategized_allocator_1adfc2b37b201ced0eacb0bc694a548e94" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator_1adfc2b37b201ced0eacb0bc694a548e94" kindref="member">deallocate</ref>(T<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_strategized_allocator_1adfc2b37b201ced0eacb0bc694a548e94" kindref="member">strategy::deallocate</ref>(static_cast&lt;void<sp/>*&gt;(p),<sp/>n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>will<sp/>be<sp/>the<sp/>same<sp/>for<sp/>all<sp/>allocators<sp/>that<sp/>ignore<sp/>hints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="class_strategized_allocator_1ad98c9698ef1d0b8313385d9e7a73af09" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;<sp/>T<sp/>*<ref refid="class_strategized_allocator_1ad98c9698ef1d0b8313385d9e7a73af09" kindref="member">allocate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U<sp/>*<sp/></highlight><highlight class="comment">/*<sp/>const<sp/>hint<sp/>*/</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator_1ae106fdd8ae94da38d60a627ff5fe9874" kindref="member">allocate</ref>(n);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><ref refid="class_strategized_allocator" kindref="compound">StrategizedAllocator</ref><sp/>&amp;<ref refid="class_strategized_allocator_1a41112012bec8dacc4b2394e09931ced8" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator" kindref="compound">StrategizedAllocator</ref><sp/>&amp;);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;</highlight></codeline>
<codeline lineno="108" refid="class_strategized_allocator_1a2840ed2a1e16c71f665cd7c191dbdb58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_strategized_allocator" kindref="compound">StrategizedAllocator &lt; T, S &gt;::destroy</ref>(T<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>p)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>p-&gt;~T();</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="113" refid="_strategized_allocator_8h_1a0a91a387ec91571f97c04fd98b23af1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_strategized_allocator_8h_1a0a91a387ec91571f97c04fd98b23af1a" kindref="member">assign</ref>(T1<sp/>&amp;t1,<sp/>T2<sp/>&amp;t2)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>std::copy(t2.begin(),<sp/>t2.end(),<sp/>t1.begin());</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="118" refid="_strategized_allocator_8h_1ad4f1ccefde8e590e5491021eec182e5d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_strategized_allocator_8h_1a0a91a387ec91571f97c04fd98b23af1a" kindref="member">assign</ref>(T<sp/>&amp;t1,<sp/>T<sp/>&amp;t2)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>t1<sp/>=<sp/>t2;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_MEMORY_STRATEGIZEDALLOCATOR_H_</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/memory/StrategizedAllocator.h"/>
  </compounddef>
</doxygen>
