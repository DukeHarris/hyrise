<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_order_indifferent_dictionary_8h" kind="file">
    <compoundname>OrderIndifferentDictionary.h</compoundname>
    <includes refid="storage__types_8h" local="no">storage/storage_types.h</includes>
    <includes refid="_abstract_dictionary_8h" local="no">storage/AbstractDictionary.h</includes>
    <includes refid="_base_dictionary_8h" local="no">storage/BaseDictionary.h</includes>
    <includes refid="_dictionary_iterator_8h" local="no">storage/DictionaryIterator.h</includes>
    <includes refid="csb__tree_8h" local="no">storage/csb_tree.h</includes>
    <includes refid="_abstract_allocated_dictionary_8h" local="no">storage/AbstractAllocatedDictionary.h</includes>
    <includes local="no">exception</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includes local="no">memory</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">boost/unordered_map.hpp</includes>
    <includes local="no">boost/functional/hash.hpp</includes>
    <includedby refid="_layouter_8cpp" local="yes">src/lib/access/Layouter.cpp</includedby>
    <includedby refid="_table_generator-impl_8h" local="yes">src/lib/storage/TableGenerator-impl.h</includedby>
    <includedby refid="_value_id_map_8hpp" local="no">src/lib/storage/ValueIdMap.hpp</includedby>
    <incdepgraph>
      <node id="20814">
        <label>list</label>
      </node>
      <node id="20806">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="20835">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="20829">
        <label>assert.h</label>
      </node>
      <node id="20808">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="20826">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="20817">
        <label>cstdint</label>
      </node>
      <node id="20823">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="20800" relation="include">
        </childnode>
        <childnode refid="20809" relation="include">
        </childnode>
        <childnode refid="20824" relation="include">
        </childnode>
      </node>
      <node id="20804">
        <label>stdint.h</label>
      </node>
      <node id="20822">
        <label>stdlib.h</label>
      </node>
      <node id="20820">
        <label>errno.h</label>
      </node>
      <node id="20803">
        <label>stdexcept</label>
      </node>
      <node id="20802">
        <label>string</label>
      </node>
      <node id="20832">
        <label>map</label>
      </node>
      <node id="20819">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="20820" relation="include">
        </childnode>
        <childnode refid="20821" relation="include">
        </childnode>
        <childnode refid="20822" relation="include">
        </childnode>
      </node>
      <node id="20831">
        <label>exception</label>
      </node>
      <node id="20812">
        <label>stddef.h</label>
      </node>
      <node id="20799">
        <label>src/lib/storage/OrderIndifferentDictionary.h</label>
        <link refid="OrderIndifferentDictionary.h"/>
        <childnode refid="20800" relation="include">
        </childnode>
        <childnode refid="20809" relation="include">
        </childnode>
        <childnode refid="20823" relation="include">
        </childnode>
        <childnode refid="20824" relation="include">
        </childnode>
        <childnode refid="20827" relation="include">
        </childnode>
        <childnode refid="20830" relation="include">
        </childnode>
        <childnode refid="20831" relation="include">
        </childnode>
        <childnode refid="20801" relation="include">
        </childnode>
        <childnode refid="20832" relation="include">
        </childnode>
        <childnode refid="20810" relation="include">
        </childnode>
        <childnode refid="20833" relation="include">
        </childnode>
        <childnode refid="20834" relation="include">
        </childnode>
        <childnode refid="20835" relation="include">
        </childnode>
      </node>
      <node id="20805">
        <label>ostream</label>
      </node>
      <node id="20833">
        <label>limits.h</label>
      </node>
      <node id="20824">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="20825" relation="include">
        </childnode>
        <childnode refid="20826" relation="include">
        </childnode>
      </node>
      <node id="20809">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="20801" relation="include">
        </childnode>
        <childnode refid="20802" relation="include">
        </childnode>
        <childnode refid="20810" relation="include">
        </childnode>
        <childnode refid="20811" relation="include">
        </childnode>
        <childnode refid="20815" relation="include">
        </childnode>
        <childnode refid="20819" relation="include">
        </childnode>
        <childnode refid="20800" relation="include">
        </childnode>
      </node>
      <node id="20828">
        <label>string.h</label>
      </node>
      <node id="20834">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="20801">
        <label>vector</label>
      </node>
      <node id="20825">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="20811">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="20812" relation="include">
        </childnode>
        <childnode refid="20813" relation="include">
        </childnode>
        <childnode refid="20814" relation="include">
        </childnode>
        <childnode refid="20803" relation="include">
        </childnode>
      </node>
      <node id="20816">
        <label>iostream</label>
      </node>
      <node id="20807">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="20830">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="20815">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="20816" relation="include">
        </childnode>
        <childnode refid="20817" relation="include">
        </childnode>
        <childnode refid="20818" relation="include">
        </childnode>
      </node>
      <node id="20813">
        <label>algorithm</label>
      </node>
      <node id="20821">
        <label>stdio.h</label>
      </node>
      <node id="20818">
        <label>cstring</label>
      </node>
      <node id="20827">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="20801" relation="include">
        </childnode>
        <childnode refid="20816" relation="include">
        </childnode>
        <childnode refid="20814" relation="include">
        </childnode>
        <childnode refid="20810" relation="include">
        </childnode>
        <childnode refid="20828" relation="include">
        </childnode>
        <childnode refid="20829" relation="include">
        </childnode>
        <childnode refid="20826" relation="include">
        </childnode>
      </node>
      <node id="20810">
        <label>memory</label>
      </node>
      <node id="20800">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="20801" relation="include">
        </childnode>
        <childnode refid="20802" relation="include">
        </childnode>
        <childnode refid="20803" relation="include">
        </childnode>
        <childnode refid="20804" relation="include">
        </childnode>
        <childnode refid="20805" relation="include">
        </childnode>
        <childnode refid="20806" relation="include">
        </childnode>
        <childnode refid="20807" relation="include">
        </childnode>
        <childnode refid="20808" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="20896">
        <label>src/lib/access/Distinct.h</label>
        <link refid="_distinct_8h"/>
        <childnode refid="20897" relation="include">
        </childnode>
      </node>
      <node id="20844">
        <label>src/lib/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="20845" relation="include">
        </childnode>
        <childnode refid="20846" relation="include">
        </childnode>
        <childnode refid="20847" relation="include">
        </childnode>
        <childnode refid="20848" relation="include">
        </childnode>
        <childnode refid="20849" relation="include">
        </childnode>
        <childnode refid="20850" relation="include">
        </childnode>
        <childnode refid="20851" relation="include">
        </childnode>
        <childnode refid="20852" relation="include">
        </childnode>
      </node>
      <node id="20989">
        <label>src/lib/io/shortcuts.cpp</label>
        <link refid="shortcuts_8cpp"/>
      </node>
      <node id="20960">
        <label>src/lib/access/SmallestTableScan.cpp</label>
        <link refid="_smallest_table_scan_8cpp"/>
      </node>
      <node id="20971">
        <label>src/lib/access/ThreadpoolAdjustment.h</label>
        <link refid="_threadpool_adjustment_8h"/>
        <childnode refid="20972" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="21040">
        <label>src/lib/storage/TableRangeViewFactory.h</label>
        <link refid="_table_range_view_factory_8h"/>
        <childnode refid="20941" relation="include">
        </childnode>
        <childnode refid="21041" relation="include">
        </childnode>
      </node>
      <node id="20917">
        <label>src/lib/access/InsertScan.cpp</label>
        <link refid="_insert_scan_8cpp"/>
      </node>
      <node id="20837">
        <label>src/lib/access/Layouter.cpp</label>
        <link refid="_layouter_8cpp"/>
      </node>
      <node id="21001">
        <label>src/lib/storage/Store.cpp</label>
        <link refid="_store_8cpp"/>
      </node>
      <node id="21006">
        <label>src/lib/storage/SimpleStore.cpp</label>
        <link refid="_simple_store_8cpp"/>
      </node>
      <node id="21030">
        <label>src/lib/io/RawTableLoader.cpp</label>
        <link refid="_raw_table_loader_8cpp"/>
      </node>
      <node id="20984">
        <label>src/lib/access/OperationData.cpp</label>
        <link refid="_operation_data_8cpp"/>
      </node>
      <node id="20946">
        <label>src/lib/access/RadixJoin.h</label>
        <link refid="_radix_join_8h"/>
        <childnode refid="20947" relation="include">
        </childnode>
        <childnode refid="20892" relation="include">
        </childnode>
      </node>
      <node id="21003">
        <label>src/lib/storage/SequentialHeapMergerRow.cpp</label>
        <link refid="_sequential_heap_merger_row_8cpp"/>
      </node>
      <node id="21000">
        <label>src/lib/storage/PointerCalculator.cpp</label>
        <link refid="_pointer_calculator_8cpp"/>
      </node>
      <node id="20973">
        <label>src/lib/access/UnionAll.h</label>
        <link refid="_union_all_8h"/>
        <childnode refid="20852" relation="include">
        </childnode>
        <childnode refid="20974" relation="include">
        </childnode>
      </node>
      <node id="21033">
        <label>src/lib/storage/Table.cpp</label>
        <link refid="_table_8cpp"/>
      </node>
      <node id="20994">
        <label>src/lib/access/insertonly_merger.h</label>
        <link refid="insertonly__merger_8h"/>
        <childnode refid="20983" relation="include">
        </childnode>
        <childnode refid="20995" relation="include">
        </childnode>
      </node>
      <node id="21035">
        <label>src/lib/storage/TableFactory.cpp</label>
        <link refid="_table_factory_8cpp"/>
      </node>
      <node id="20987">
        <label>src/lib/io/CSVLoader.cpp</label>
        <link refid="_c_s_v_loader_8cpp"/>
      </node>
      <node id="21037">
        <label>src/lib/storage/TableDiff.cpp</label>
        <link refid="_table_diff_8cpp"/>
      </node>
      <node id="20948">
        <label>src/lib/access/ReplaceTable.h</label>
        <link refid="_replace_table_8h"/>
        <childnode refid="20949" relation="include">
        </childnode>
      </node>
      <node id="20962">
        <label>src/lib/access/SortScan.cpp</label>
        <link refid="lib_2access_2_sort_scan_8cpp"/>
      </node>
      <node id="20924">
        <label>src/lib/access/LayoutTableLoad.cpp</label>
        <link refid="_layout_table_load_8cpp"/>
      </node>
      <node id="20839">
        <label>src/lib/storage/TableGenerator.h</label>
        <link refid="_table_generator_8h"/>
        <childnode refid="20840" relation="include">
        </childnode>
        <childnode refid="20841" relation="include">
        </childnode>
        <childnode refid="20842" relation="include">
        </childnode>
        <childnode refid="20843" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20905">
        <label>src/lib/access/HashJoinProbe.cpp</label>
        <link refid="_hash_join_probe_8cpp"/>
      </node>
      <node id="20909">
        <label>src/lib/access/PrefixSum.cpp</label>
        <link refid="_prefix_sum_8cpp"/>
      </node>
      <node id="20980">
        <label>src/lib/access/UpdateScan.cpp</label>
        <link refid="_update_scan_8cpp"/>
      </node>
      <node id="21022">
        <label>src/lib/storage/MutableVerticalTable.h</label>
        <link refid="_mutable_vertical_table_8h"/>
        <childnode refid="20899" relation="include">
        </childnode>
        <childnode refid="20860" relation="include">
        </childnode>
        <childnode refid="20933" relation="include">
        </childnode>
        <childnode refid="20938" relation="include">
        </childnode>
        <childnode refid="20911" relation="include">
        </childnode>
        <childnode refid="20952" relation="include">
        </childnode>
        <childnode refid="20865" relation="include">
        </childnode>
        <childnode refid="20840" relation="include">
        </childnode>
        <childnode refid="20999" relation="include">
        </childnode>
        <childnode refid="21023" relation="include">
        </childnode>
        <childnode refid="21024" relation="include">
        </childnode>
        <childnode refid="21026" relation="include">
        </childnode>
        <childnode refid="20998" relation="include">
        </childnode>
        <childnode refid="21027" relation="include">
        </childnode>
        <childnode refid="20842" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="21017">
        <label>src/lib/storage/hash_functor.h</label>
        <link refid="hash__functor_8h"/>
        <childnode refid="21015" relation="include">
        </childnode>
        <childnode refid="21018" relation="include">
        </childnode>
      </node>
      <node id="20914">
        <label>src/lib/access/InsertOnlyOperators.h</label>
        <link refid="_insert_only_operators_8h"/>
        <childnode refid="20915" relation="include">
        </childnode>
      </node>
      <node id="20903">
        <label>src/lib/access/HashBuild.cpp</label>
        <link refid="_hash_build_8cpp"/>
      </node>
      <node id="21023">
        <label>src/lib/storage/MutableVerticalTable.cpp</label>
        <link refid="_mutable_vertical_table_8cpp"/>
      </node>
      <node id="20966">
        <label>src/lib/access/TableScan.cpp</label>
        <link refid="_table_scan_8cpp"/>
      </node>
      <node id="20933">
        <label>src/lib/access/MultiplyRefField.h</label>
        <link refid="_multiply_ref_field_8h"/>
        <childnode refid="20934" relation="include">
        </childnode>
      </node>
      <node id="20867">
        <label>src/lib/access/pred_CompoundExpression.h</label>
        <link refid="pred___compound_expression_8h"/>
        <childnode refid="20856" relation="include">
        </childnode>
        <childnode refid="20868" relation="include">
        </childnode>
      </node>
      <node id="20942">
        <label>src/lib/access/PrefixSum.h</label>
        <link refid="_prefix_sum_8h"/>
        <childnode refid="20909" relation="include">
        </childnode>
      </node>
      <node id="21013">
        <label>src/lib/storage/cast_functor.h</label>
        <link refid="cast__functor_8h"/>
        <childnode refid="21014" relation="include">
        </childnode>
      </node>
      <node id="20975">
        <label>src/lib/access/UnionScan.h</label>
        <link refid="_union_scan_8h"/>
        <childnode refid="20976" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="21020">
        <label>src/lib/storage/HorizontalTable.cpp</label>
        <link refid="_horizontal_table_8cpp"/>
      </node>
      <node id="20882">
        <label>src/lib/access/GroupByScan.h</label>
        <link refid="_group_by_scan_8h"/>
        <childnode refid="20883" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20953">
        <label>src/lib/access/SetTable.h</label>
        <link refid="_set_table_8h"/>
        <childnode refid="20954" relation="include">
        </childnode>
      </node>
      <node id="20852">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="20949">
        <label>src/lib/access/ReplaceTable.cpp</label>
        <link refid="_replace_table_8cpp"/>
      </node>
      <node id="20901">
        <label>src/lib/access/GetTable.cpp</label>
        <link refid="_get_table_8cpp"/>
      </node>
      <node id="21043">
        <label>src/lib/testing/TableEqualityTest.cpp</label>
        <link refid="_table_equality_test_8cpp"/>
      </node>
      <node id="20963">
        <label>src/lib/access/TableLoad.h</label>
        <link refid="_table_load_8h"/>
        <childnode refid="20964" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20935">
        <label>src/lib/access/MySQLTableLoad.h</label>
        <link refid="_my_s_q_l_table_load_8h"/>
        <childnode refid="20936" relation="include">
        </childnode>
      </node>
      <node id="20860">
        <label>src/lib/access/MergeJoin.hpp</label>
        <link refid="_merge_join_8hpp"/>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20969">
        <label>src/lib/access/TaskSchedulerAdjustment.h</label>
        <link refid="_task_scheduler_adjustment_8h"/>
        <childnode refid="20970" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="21018">
        <label>src/lib/storage/HashTable.h</label>
        <link refid="_hash_table_8h"/>
        <childnode refid="20880" relation="include">
        </childnode>
        <childnode refid="20883" relation="include">
        </childnode>
        <childnode refid="20903" relation="include">
        </childnode>
        <childnode refid="20905" relation="include">
        </childnode>
        <childnode refid="20930" relation="include">
        </childnode>
        <childnode refid="20984" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20908">
        <label>src/lib/access/Histogram.cpp</label>
        <link refid="_histogram_8cpp"/>
      </node>
      <node id="20941">
        <label>src/lib/access/PlanOperation.cpp</label>
        <link refid="_plan_operation_8cpp"/>
      </node>
      <node id="20910">
        <label>src/lib/access/RadixCluster.h</label>
        <link refid="_radix_cluster_8h"/>
        <childnode refid="20911" relation="include">
        </childnode>
      </node>
      <node id="20931">
        <label>src/lib/access/MergeTable.h</label>
        <link refid="_merge_table_8h"/>
        <childnode refid="20932" relation="include">
        </childnode>
      </node>
      <node id="20890">
        <label>src/lib/access/RadixJoinTransformation.cpp</label>
        <link refid="_radix_join_transformation_8cpp"/>
      </node>
      <node id="20911">
        <label>src/lib/access/RadixCluster.cpp</label>
        <link refid="_radix_cluster_8cpp"/>
      </node>
      <node id="20991">
        <label>src/lib/io/TableDump.cpp</label>
        <link refid="_table_dump_8cpp"/>
      </node>
      <node id="20950">
        <label>src/lib/access/ResponseTask.cpp</label>
        <link refid="_response_task_8cpp"/>
      </node>
      <node id="20952">
        <label>src/lib/access/ScriptOperation.cpp</label>
        <link refid="_script_operation_8cpp"/>
      </node>
      <node id="20861">
        <label>src/lib/access/pred_buildExpression.cpp</label>
        <link refid="pred__build_expression_8cpp"/>
      </node>
      <node id="20883">
        <label>src/lib/access/GroupByScan.cpp</label>
        <link refid="lib_2access_2_group_by_scan_8cpp"/>
      </node>
      <node id="20864">
        <label>src/lib/access/pred_buildExpression.h</label>
        <link refid="pred__build_expression_8h"/>
        <childnode refid="20861" relation="include">
        </childnode>
        <childnode refid="20856" relation="include">
        </childnode>
        <childnode refid="20865" relation="include">
        </childnode>
        <childnode refid="20866" relation="include">
        </childnode>
      </node>
      <node id="20893">
        <label>src/lib/access/Barrier.h</label>
        <link refid="_barrier_8h"/>
        <childnode refid="20894" relation="include">
        </childnode>
      </node>
      <node id="21009">
        <label>src/lib/storage/SimpleStoreMerger.h</label>
        <link refid="_simple_store_merger_8h"/>
        <childnode refid="21006" relation="include">
        </childnode>
        <childnode refid="21007" relation="include">
        </childnode>
      </node>
      <node id="20934">
        <label>src/lib/access/MultiplyRefField.cpp</label>
        <link refid="_multiply_ref_field_8cpp"/>
      </node>
      <node id="20888">
        <label>src/lib/access/QueryTransformationEngine.h</label>
        <link refid="_query_transformation_engine_8h"/>
        <childnode refid="20889" relation="include">
        </childnode>
        <childnode refid="20890" relation="include">
        </childnode>
        <childnode refid="20891" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20854">
        <label>src/lib/access/pred_common.h</label>
        <link refid="pred__common_8h"/>
        <childnode refid="20855" relation="include">
        </childnode>
        <childnode refid="20863" relation="include">
        </childnode>
        <childnode refid="20864" relation="include">
        </childnode>
        <childnode refid="20867" relation="include">
        </childnode>
        <childnode refid="20870" relation="include">
        </childnode>
        <childnode refid="20872" relation="include">
        </childnode>
        <childnode refid="20873" relation="include">
        </childnode>
        <childnode refid="20874" relation="include">
        </childnode>
        <childnode refid="20875" relation="include">
        </childnode>
        <childnode refid="20876" relation="include">
        </childnode>
        <childnode refid="20868" relation="include">
        </childnode>
      </node>
      <node id="20855">
        <label>src/lib/access/pred_BetweenOperation.h</label>
        <link refid="pred___between_operation_8h"/>
        <childnode refid="20856" relation="include">
        </childnode>
      </node>
      <node id="20943">
        <label>src/lib/access/ProjectionScan.h</label>
        <link refid="_projection_scan_8h"/>
        <childnode refid="20944" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20939">
        <label>src/lib/access/NoOp.h</label>
        <link refid="_no_op_8h"/>
        <childnode refid="20940" relation="include">
        </childnode>
      </node>
      <node id="20848">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="21026">
        <label>src/lib/storage/PointerCalculatorFactory.cpp</label>
        <link refid="_pointer_calculator_factory_8cpp"/>
      </node>
      <node id="20982">
        <label>src/lib/testing/test.cpp</label>
        <link refid="test_8cpp"/>
      </node>
      <node id="20892">
        <label>src/lib/access/RadixJoinTransformation.h</label>
        <link refid="_radix_join_transformation_8h"/>
        <childnode refid="20890" relation="include">
        </childnode>
      </node>
      <node id="21038">
        <label>src/lib/storage/TableRangeView.h</label>
        <link refid="_table_range_view_8h"/>
        <childnode refid="20903" relation="include">
        </childnode>
        <childnode refid="20941" relation="include">
        </childnode>
        <childnode refid="21000" relation="include">
        </childnode>
        <childnode refid="21039" relation="include">
        </childnode>
        <childnode refid="21040" relation="include">
        </childnode>
      </node>
      <node id="20853">
        <label>src/lib/storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="20854" relation="include">
        </childnode>
        <childnode refid="20877" relation="include">
        </childnode>
        <childnode refid="20996" relation="include">
        </childnode>
        <childnode refid="21002" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20887">
        <label>src/lib/access/AbstractPlanOpTransformation.h</label>
        <link refid="_abstract_plan_op_transformation_8h"/>
        <childnode refid="20888" relation="include">
        </childnode>
        <childnode refid="20892" relation="include">
        </childnode>
      </node>
      <node id="20879">
        <label>src/bin/test_relation_eq/main.cpp</label>
        <link refid="bin_2test__relation__eq_2main_8cpp"/>
      </node>
      <node id="20927">
        <label>src/lib/access/MaterializingScan.h</label>
        <link refid="_materializing_scan_8h"/>
        <childnode refid="20928" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20871">
        <label>src/bin/perf_regression/scan_performance.cpp</label>
        <link refid="scan__performance_8cpp"/>
      </node>
      <node id="21029">
        <label>src/lib/storage/RawTable.h</label>
        <link refid="_raw_table_8h"/>
        <childnode refid="20995" relation="include">
        </childnode>
        <childnode refid="20870" relation="include">
        </childnode>
        <childnode refid="20865" relation="include">
        </childnode>
        <childnode refid="21030" relation="include">
        </childnode>
        <childnode refid="21028" relation="include">
        </childnode>
        <childnode refid="21031" relation="include">
        </childnode>
        <childnode refid="21005" relation="include">
        </childnode>
        <childnode refid="21007" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20930">
        <label>src/lib/access/MergeHashTables.cpp</label>
        <link refid="_merge_hash_tables_8cpp"/>
      </node>
      <node id="20972">
        <label>src/lib/access/ThreadpoolAdjustment.cpp</label>
        <link refid="_threadpool_adjustment_8cpp"/>
      </node>
      <node id="21036">
        <label>src/lib/storage/TableBuilder.h</label>
        <link refid="_table_builder_8h"/>
        <childnode refid="20952" relation="include">
        </childnode>
        <childnode refid="20990" relation="include">
        </childnode>
        <childnode refid="21027" relation="include">
        </childnode>
      </node>
      <node id="20881">
        <label>src/lib/access/AggregateFunctions.cpp</label>
        <link refid="_aggregate_functions_8cpp"/>
      </node>
      <node id="20872">
        <label>src/lib/access/pred_GreaterThanExpression.h</label>
        <link refid="pred___greater_than_expression_8h"/>
        <childnode refid="20856" relation="include">
        </childnode>
      </node>
      <node id="20944">
        <label>src/lib/access/ProjectionScan.cpp</label>
        <link refid="lib_2access_2_projection_scan_8cpp"/>
      </node>
      <node id="20992">
        <label>src/lib/io/VectorLoader.cpp</label>
        <link refid="_vector_loader_8cpp"/>
      </node>
      <node id="20836">
        <label>src/lib/storage/OrderIndifferentDictionary.h</label>
        <link refid="OrderIndifferentDictionary.h"/>
        <childnode refid="20837" relation="include">
        </childnode>
        <childnode refid="20838" relation="include">
        </childnode>
        <childnode refid="20853" relation="include">
        </childnode>
      </node>
      <node id="20995">
        <label>src/lib/access/insertonly_merger.cpp</label>
        <link refid="insertonly__merger_8cpp"/>
      </node>
      <node id="20986">
        <label>src/lib/io/MPassCSVLoader.cpp</label>
        <link refid="_m_pass_c_s_v_loader_8cpp"/>
      </node>
      <node id="21010">
        <label>src/lib/storage/AbstractMergeStrategy.h</label>
        <link refid="_abstract_merge_strategy_8h"/>
        <childnode refid="21011" relation="include">
        </childnode>
        <childnode refid="21004" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20970">
        <label>src/lib/access/TaskSchedulerAdjustment.cpp</label>
        <link refid="_task_scheduler_adjustment_8cpp"/>
      </node>
      <node id="20938">
        <label>src/lib/access/NestedLoopEquiJoin.cpp</label>
        <link refid="_nested_loop_equi_join_8cpp"/>
      </node>
      <node id="21012">
        <label>src/lib/storage/LogarithmicMergeStrategy.cpp</label>
        <link refid="_logarithmic_merge_strategy_8cpp"/>
      </node>
      <node id="21015">
        <label>src/lib/storage/GroupValue.cpp</label>
        <link refid="_group_value_8cpp"/>
      </node>
      <node id="20851">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="20840">
        <label>src/lib/io/Loader.cpp</label>
        <link refid="_loader_8cpp"/>
      </node>
      <node id="20998">
        <label>src/lib/storage/Store.h</label>
        <link refid="_store_8h"/>
        <childnode refid="20917" relation="include">
        </childnode>
        <childnode refid="20922" relation="include">
        </childnode>
        <childnode refid="20932" relation="include">
        </childnode>
        <childnode refid="20980" relation="include">
        </childnode>
        <childnode refid="20840" relation="include">
        </childnode>
        <childnode refid="20986" relation="include">
        </childnode>
        <childnode refid="20989" relation="include">
        </childnode>
        <childnode refid="20991" relation="include">
        </childnode>
        <childnode refid="20999" relation="include">
        </childnode>
        <childnode refid="21000" relation="include">
        </childnode>
        <childnode refid="21001" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="21025">
        <label>src/lib/access/insertonly_valid.h</label>
        <link refid="insertonly__valid_8h"/>
        <childnode refid="20983" relation="include">
        </childnode>
        <childnode refid="20995" relation="include">
        </childnode>
      </node>
      <node id="21032">
        <label>src/lib/storage/Table.h</label>
        <link refid="_table_8h"/>
        <childnode refid="20899" relation="include">
        </childnode>
        <childnode refid="20837" relation="include">
        </childnode>
        <childnode refid="20928" relation="include">
        </childnode>
        <childnode refid="20909" relation="include">
        </childnode>
        <childnode refid="20962" relation="include">
        </childnode>
        <childnode refid="20999" relation="include">
        </childnode>
        <childnode refid="21015" relation="include">
        </childnode>
        <childnode refid="21019" relation="include">
        </childnode>
        <childnode refid="21022" relation="include">
        </childnode>
        <childnode refid="21033" relation="include">
        </childnode>
        <childnode refid="21027" relation="include">
        </childnode>
        <childnode refid="21034" relation="include">
        </childnode>
        <childnode refid="20838" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20916">
        <label>src/lib/access/InsertScan.h</label>
        <link refid="_insert_scan_8h"/>
        <childnode refid="20917" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20965">
        <label>src/lib/access/TableScan.h</label>
        <link refid="_table_scan_8h"/>
        <childnode refid="20871" relation="include">
        </childnode>
        <childnode refid="20966" relation="include">
        </childnode>
      </node>
      <node id="20997">
        <label>src/lib/storage/SequentialHeapMerger.cpp</label>
        <link refid="_sequential_heap_merger_8cpp"/>
      </node>
      <node id="20907">
        <label>src/lib/access/Histogram.h</label>
        <link refid="_histogram_8h"/>
        <childnode refid="20908" relation="include">
        </childnode>
        <childnode refid="20909" relation="include">
        </childnode>
        <childnode refid="20910" relation="include">
        </childnode>
      </node>
      <node id="20845">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="20849">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="21007">
        <label>src/lib/storage/SimpleStoreMerger.cpp</label>
        <link refid="_simple_store_merger_8cpp"/>
      </node>
      <node id="20869">
        <label>src/lib/access/pred_PredicateBuilder.cpp</label>
        <link refid="pred___predicate_builder_8cpp"/>
      </node>
      <node id="21042">
        <label>src/lib/storage/TableUtils.cpp</label>
        <link refid="_table_utils_8cpp"/>
      </node>
      <node id="20921">
        <label>src/lib/access/LayoutTable.h</label>
        <link refid="_layout_table_8h"/>
        <childnode refid="20922" relation="include">
        </childnode>
      </node>
      <node id="20877">
        <label>src/lib/storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="20878" relation="include">
        </childnode>
        <childnode refid="20871" relation="include">
        </childnode>
        <childnode refid="20879" relation="include">
        </childnode>
        <childnode refid="20880" relation="include">
        </childnode>
        <childnode refid="20884" relation="include">
        </childnode>
        <childnode refid="20885" relation="include">
        </childnode>
        <childnode refid="20886" relation="include">
        </childnode>
        <childnode refid="20906" relation="include">
        </childnode>
        <childnode refid="20983" relation="include">
        </childnode>
        <childnode refid="20860" relation="include">
        </childnode>
        <childnode refid="20984" relation="include">
        </childnode>
        <childnode refid="20941" relation="include">
        </childnode>
        <childnode refid="20854" relation="include">
        </childnode>
        <childnode refid="20950" relation="include">
        </childnode>
        <childnode refid="20962" relation="include">
        </childnode>
        <childnode refid="20966" relation="include">
        </childnode>
        <childnode refid="20985" relation="include">
        </childnode>
        <childnode refid="20987" relation="include">
        </childnode>
        <childnode refid="20840" relation="include">
        </childnode>
        <childnode refid="20988" relation="include">
        </childnode>
        <childnode refid="20986" relation="include">
        </childnode>
        <childnode refid="20989" relation="include">
        </childnode>
        <childnode refid="20990" relation="include">
        </childnode>
        <childnode refid="20991" relation="include">
        </childnode>
        <childnode refid="20841" relation="include">
        </childnode>
        <childnode refid="20992" relation="include">
        </childnode>
        <childnode refid="20993" relation="include">
        </childnode>
        <childnode refid="21010" relation="include">
        </childnode>
        <childnode refid="20999" relation="include">
        </childnode>
        <childnode refid="21013" relation="include">
        </childnode>
        <childnode refid="21017" relation="include">
        </childnode>
        <childnode refid="21018" relation="include">
        </childnode>
        <childnode refid="21019" relation="include">
        </childnode>
        <childnode refid="21021" relation="include">
        </childnode>
        <childnode refid="21011" relation="include">
        </childnode>
        <childnode refid="21022" relation="include">
        </childnode>
        <childnode refid="21024" relation="include">
        </childnode>
        <childnode refid="21028" relation="include">
        </childnode>
        <childnode refid="21029" relation="include">
        </childnode>
        <childnode refid="20996" relation="include">
        </childnode>
        <childnode refid="21002" relation="include">
        </childnode>
        <childnode refid="21005" relation="include">
        </childnode>
        <childnode refid="21004" relation="include">
        </childnode>
        <childnode refid="20998" relation="include">
        </childnode>
        <childnode refid="21032" relation="include">
        </childnode>
        <childnode refid="21027" relation="include">
        </childnode>
        <childnode refid="21036" relation="include">
        </childnode>
        <childnode refid="21037" relation="include">
        </childnode>
        <childnode refid="21034" relation="include">
        </childnode>
        <childnode refid="20842" relation="include">
        </childnode>
        <childnode refid="20839" relation="include">
        </childnode>
        <childnode refid="21038" relation="include">
        </childnode>
        <childnode refid="21040" relation="include">
        </childnode>
        <childnode refid="21042" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
        <childnode refid="21043" relation="include">
        </childnode>
      </node>
      <node id="21019">
        <label>src/lib/storage/HorizontalTable.h</label>
        <link refid="_horizontal_table_8h"/>
        <childnode refid="20974" relation="include">
        </childnode>
        <childnode refid="20976" relation="include">
        </childnode>
        <childnode refid="21020" relation="include">
        </childnode>
      </node>
      <node id="20843">
        <label>src/lib/storage/TestDataGenerator.cpp</label>
        <link refid="_test_data_generator_8cpp"/>
      </node>
      <node id="21034">
        <label>src/lib/storage/TableFactory.h</label>
        <link refid="_table_factory_8h"/>
        <childnode refid="20840" relation="include">
        </childnode>
        <childnode refid="21022" relation="include">
        </childnode>
        <childnode refid="21035" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20983">
        <label>src/lib/access/insertonly.cpp</label>
        <link refid="insertonly_8cpp"/>
      </node>
      <node id="20898">
        <label>src/lib/access/ExpressionScan.h</label>
        <link refid="_expression_scan_8h"/>
        <childnode refid="20899" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="21016">
        <label>src/lib/storage/storage_types_helper.cpp</label>
        <link refid="storage__types__helper_8cpp"/>
      </node>
      <node id="20993">
        <label>src/lib/storage/AbstractMerger.h</label>
        <link refid="_abstract_merger_8h"/>
        <childnode refid="20994" relation="include">
        </childnode>
        <childnode refid="20996" relation="include">
        </childnode>
        <childnode refid="21002" relation="include">
        </childnode>
        <childnode refid="21004" relation="include">
        </childnode>
        <childnode refid="21009" relation="include">
        </childnode>
        <childnode refid="21008" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20846">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="20957">
        <label>src/lib/access/SimpleRawTableScan.h</label>
        <link refid="_simple_raw_table_scan_8h"/>
        <childnode refid="20865" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="21041">
        <label>src/lib/storage/TableRangeViewFactory.cpp</label>
        <link refid="_table_range_view_factory_8cpp"/>
      </node>
      <node id="20900">
        <label>src/lib/access/GetTable.h</label>
        <link refid="_get_table_8h"/>
        <childnode refid="20901" relation="include">
        </childnode>
      </node>
      <node id="20945">
        <label>src/lib/access/QueryParser.cpp</label>
        <link refid="_query_parser_8cpp"/>
      </node>
      <node id="21011">
        <label>src/lib/storage/LogarithmicMergeStrategy.h</label>
        <link refid="_logarithmic_merge_strategy_8h"/>
        <childnode refid="20983" relation="include">
        </childnode>
        <childnode refid="20840" relation="include">
        </childnode>
        <childnode refid="21012" relation="include">
        </childnode>
        <childnode refid="21006" relation="include">
        </childnode>
        <childnode refid="20998" relation="include">
        </childnode>
        <childnode refid="20842" relation="include">
        </childnode>
        <childnode refid="20843" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20936">
        <label>src/lib/access/MySQLTableLoad.cpp</label>
        <link refid="_my_s_q_l_table_load_8cpp"/>
      </node>
      <node id="20968">
        <label>src/lib/access/TableUnload.cpp</label>
        <link refid="_table_unload_8cpp"/>
      </node>
      <node id="20904">
        <label>src/lib/access/HashJoinProbe.h</label>
        <link refid="_hash_join_probe_8h"/>
        <childnode refid="20905" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20925">
        <label>src/lib/access/LoadFile.h</label>
        <link refid="_load_file_8h"/>
        <childnode refid="20926" relation="include">
        </childnode>
      </node>
      <node id="20961">
        <label>src/lib/access/SortScan.h</label>
        <link refid="_sort_scan_8h"/>
        <childnode refid="20962" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20951">
        <label>src/lib/access/ScriptOperation.h</label>
        <link refid="_script_operation_8h"/>
        <childnode refid="20952" relation="include">
        </childnode>
      </node>
      <node id="21005">
        <label>src/lib/storage/SimpleStore.h</label>
        <link refid="_simple_store_8h"/>
        <childnode refid="20983" relation="include">
        </childnode>
        <childnode refid="20995" relation="include">
        </childnode>
        <childnode refid="20915" relation="include">
        </childnode>
        <childnode refid="20950" relation="include">
        </childnode>
        <childnode refid="20840" relation="include">
        </childnode>
        <childnode refid="21006" relation="include">
        </childnode>
        <childnode refid="21007" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20956">
        <label>src/lib/access/SettingsOperation.cpp</label>
        <link refid="_settings_operation_8cpp"/>
      </node>
      <node id="20902">
        <label>src/lib/access/HashBuild.h</label>
        <link refid="_hash_build_8h"/>
        <childnode refid="20903" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="21021">
        <label>src/lib/storage/InvertedIndex.h</label>
        <link refid="_inverted_index_8h"/>
        <childnode refid="20884" relation="include">
        </childnode>
        <childnode refid="20913" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20999">
        <label>src/lib/storage/AbstractTable.cpp</label>
        <link refid="_abstract_table_8cpp"/>
      </node>
      <node id="20976">
        <label>src/lib/access/UnionScan.cpp</label>
        <link refid="lib_2access_2_union_scan_8cpp"/>
      </node>
      <node id="20964">
        <label>src/lib/access/TableLoad.cpp</label>
        <link refid="_table_load_8cpp"/>
      </node>
      <node id="20926">
        <label>src/lib/access/LoadFile.cpp</label>
        <link refid="_load_file_8cpp"/>
      </node>
      <node id="20985">
        <label>src/lib/io/ColumnLoader.h</label>
        <link refid="_column_loader_8h"/>
        <childnode refid="20986" relation="include">
        </childnode>
      </node>
      <node id="21024">
        <label>src/lib/storage/PointerCalculator.h</label>
        <link refid="_pointer_calculator_8h"/>
        <childnode refid="20884" relation="include">
        </childnode>
        <childnode refid="20897" relation="include">
        </childnode>
        <childnode refid="20883" relation="include">
        </childnode>
        <childnode refid="20905" relation="include">
        </childnode>
        <childnode refid="20907" relation="include">
        </childnode>
        <childnode refid="20913" relation="include">
        </childnode>
        <childnode refid="20983" relation="include">
        </childnode>
        <childnode refid="21025" relation="include">
        </childnode>
        <childnode refid="20915" relation="include">
        </childnode>
        <childnode refid="20919" relation="include">
        </childnode>
        <childnode refid="20858" relation="include">
        </childnode>
        <childnode refid="20860" relation="include">
        </childnode>
        <childnode refid="20933" relation="include">
        </childnode>
        <childnode refid="20938" relation="include">
        </childnode>
        <childnode refid="20944" relation="include">
        </childnode>
        <childnode refid="20952" relation="include">
        </childnode>
        <childnode refid="20865" relation="include">
        </childnode>
        <childnode refid="20866" relation="include">
        </childnode>
        <childnode refid="20962" relation="include">
        </childnode>
        <childnode refid="20966" relation="include">
        </childnode>
        <childnode refid="20974" relation="include">
        </childnode>
        <childnode refid="20976" relation="include">
        </childnode>
        <childnode refid="21000" relation="include">
        </childnode>
        <childnode refid="21026" relation="include">
        </childnode>
        <childnode refid="21014" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20996">
        <label>src/lib/storage/SequentialHeapMerger.h</label>
        <link refid="_sequential_heap_merger_8h"/>
        <childnode refid="20922" relation="include">
        </childnode>
        <childnode refid="20840" relation="include">
        </childnode>
        <childnode refid="20997" relation="include">
        </childnode>
        <childnode refid="20998" relation="include">
        </childnode>
        <childnode refid="20842" relation="include">
        </childnode>
        <childnode refid="20843" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20958">
        <label>src/lib/access/SimpleTableScan.h</label>
        <link refid="_simple_table_scan_8h"/>
        <childnode refid="20866" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="21014">
        <label>src/lib/storage/storage_types_helper.h</label>
        <link refid="storage__types__helper_8h"/>
        <childnode refid="20991" relation="include">
        </childnode>
        <childnode refid="20999" relation="include">
        </childnode>
        <childnode refid="21015" relation="include">
        </childnode>
        <childnode refid="21016" relation="include">
        </childnode>
      </node>
      <node id="20906">
        <label>src/lib/access/HashValueJoin.hpp</label>
        <link refid="_hash_value_join_8hpp"/>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20865">
        <label>src/lib/access/SimpleRawTableScan.cpp</label>
        <link refid="_simple_raw_table_scan_8cpp"/>
      </node>
      <node id="20838">
        <label>src/lib/storage/TableGenerator-impl.h</label>
        <link refid="_table_generator-impl_8h"/>
        <childnode refid="20839" relation="include">
        </childnode>
      </node>
      <node id="20937">
        <label>src/lib/access/NestedLoopEquiJoin.h</label>
        <link refid="_nested_loop_equi_join_8h"/>
        <childnode refid="20938" relation="include">
        </childnode>
      </node>
      <node id="20974">
        <label>src/lib/access/UnionAll.cpp</label>
        <link refid="_union_all_8cpp"/>
      </node>
      <node id="20978">
        <label>src/lib/access/UnloadAll.cpp</label>
        <link refid="_unload_all_8cpp"/>
      </node>
      <node id="20847">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="20922">
        <label>src/lib/access/LayoutTable.cpp</label>
        <link refid="_layout_table_8cpp"/>
      </node>
      <node id="21027">
        <label>src/lib/storage/TableBuilder.cpp</label>
        <link refid="_table_builder_8cpp"/>
      </node>
      <node id="21004">
        <label>src/lib/storage/TableMerger.h</label>
        <link refid="_table_merger_8h"/>
        <childnode refid="21005" relation="include">
        </childnode>
        <childnode refid="21006" relation="include">
        </childnode>
        <childnode refid="20998" relation="include">
        </childnode>
        <childnode refid="20842" relation="include">
        </childnode>
        <childnode refid="21008" relation="include">
        </childnode>
        <childnode refid="20843" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20859">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="20845" relation="include">
        </childnode>
        <childnode refid="20846" relation="include">
        </childnode>
        <childnode refid="20847" relation="include">
        </childnode>
        <childnode refid="20848" relation="include">
        </childnode>
        <childnode refid="20849" relation="include">
        </childnode>
        <childnode refid="20850" relation="include">
        </childnode>
        <childnode refid="20851" relation="include">
        </childnode>
        <childnode refid="20852" relation="include">
        </childnode>
      </node>
      <node id="21031">
        <label>src/lib/storage/RawTable.cpp</label>
        <link refid="_raw_table_8cpp"/>
      </node>
      <node id="20889">
        <label>src/lib/access/QueryTransformationEngine.cpp</label>
        <link refid="_query_transformation_engine_8cpp"/>
      </node>
      <node id="20856">
        <label>src/lib/access/predicates.h</label>
        <link refid="predicates_8h"/>
        <childnode refid="20857" relation="include">
        </childnode>
        <childnode refid="20860" relation="include">
        </childnode>
        <childnode refid="20861" relation="include">
        </childnode>
        <childnode refid="20862" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20988">
        <label>src/lib/io/MetadataCreation.cpp</label>
        <link refid="_metadata_creation_8cpp"/>
      </node>
      <node id="20875">
        <label>src/lib/access/pred_MultiTableEqualsExpression.h</label>
        <link refid="pred___multi_table_equals_expression_8h"/>
        <childnode refid="20856" relation="include">
        </childnode>
      </node>
      <node id="20979">
        <label>src/lib/access/UpdateScan.h</label>
        <link refid="_update_scan_8h"/>
        <childnode refid="20980" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20841">
        <label>src/lib/io/ValidityTableGeneration.cpp</label>
        <link refid="_validity_table_generation_8cpp"/>
      </node>
      <node id="20899">
        <label>src/lib/access/ExpressionScan.cpp</label>
        <link refid="_expression_scan_8cpp"/>
      </node>
      <node id="20874">
        <label>src/lib/access/pred_MultiTableBetweenExpression.h</label>
        <link refid="pred___multi_table_between_expression_8h"/>
        <childnode refid="20856" relation="include">
        </childnode>
      </node>
      <node id="20842">
        <label>src/lib/storage/TableGenerator.cpp</label>
        <link refid="_table_generator_8cpp"/>
      </node>
      <node id="20850">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="20870">
        <label>src/lib/access/pred_EqualsExpression.h</label>
        <link refid="pred___equals_expression_8h"/>
        <childnode refid="20871" relation="include">
        </childnode>
        <childnode refid="20856" relation="include">
        </childnode>
      </node>
      <node id="20878">
        <label>src/bin/perf_regression/Loading.cpp</label>
        <link refid="_loading_8cpp"/>
      </node>
      <node id="20915">
        <label>src/lib/access/InsertOnlyOperators.cpp</label>
        <link refid="_insert_only_operators_8cpp"/>
      </node>
      <node id="20932">
        <label>src/lib/access/MergeTable.cpp</label>
        <link refid="_merge_table_8cpp"/>
      </node>
      <node id="20866">
        <label>src/lib/access/SimpleTableScan.cpp</label>
        <link refid="lib_2access_2_simple_table_scan_8cpp"/>
      </node>
      <node id="20885">
        <label>src/lib/access/ExampleExpression.cpp</label>
        <link refid="_example_expression_8cpp"/>
      </node>
      <node id="20912">
        <label>src/lib/access/IndexScan.h</label>
        <link refid="_index_scan_8h"/>
        <childnode refid="20913" relation="include">
        </childnode>
      </node>
      <node id="20923">
        <label>src/lib/access/LayoutTableLoad.h</label>
        <link refid="_layout_table_load_8h"/>
        <childnode refid="20924" relation="include">
        </childnode>
      </node>
      <node id="20876">
        <label>src/lib/access/pred_MultiTableLessThanExpression.h</label>
        <link refid="pred___multi_table_less_than_expression_8h"/>
        <childnode refid="20856" relation="include">
        </childnode>
      </node>
      <node id="20947">
        <label>src/lib/access/RadixJoin.cpp</label>
        <link refid="_radix_join_8cpp"/>
      </node>
      <node id="20891">
        <label>src/lib/access/RequestParseTask.cpp</label>
        <link refid="_request_parse_task_8cpp"/>
      </node>
      <node id="20967">
        <label>src/lib/access/TableUnload.h</label>
        <link refid="_table_unload_8h"/>
        <childnode refid="20968" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20955">
        <label>src/lib/access/SettingsOperation.h</label>
        <link refid="_settings_operation_8h"/>
        <childnode refid="20956" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="21002">
        <label>src/lib/storage/SequentialHeapMergerRow.h</label>
        <link refid="_sequential_heap_merger_row_8h"/>
        <childnode refid="21003" relation="include">
        </childnode>
        <childnode refid="20844" relation="include">
        </childnode>
      </node>
      <node id="20977">
        <label>src/lib/access/UnloadAll.h</label>
        <link refid="_unload_all_8h"/>
        <childnode refid="20978" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="21039">
        <label>src/lib/storage/TableRangeView.cpp</label>
        <link refid="_table_range_view_8cpp"/>
      </node>
      <node id="21028">
        <label>src/lib/storage/PrettyPrinter.cpp</label>
        <link refid="_pretty_printer_8cpp"/>
      </node>
      <node id="20929">
        <label>src/lib/access/MergeHashTables.h</label>
        <link refid="_merge_hash_tables_8h"/>
        <childnode refid="20930" relation="include">
        </childnode>
      </node>
      <node id="20959">
        <label>src/lib/access/SmallestTableScan.h</label>
        <link refid="_smallest_table_scan_8h"/>
        <childnode refid="20960" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20863">
        <label>src/lib/access/pred_SimpleFieldExpression.h</label>
        <link refid="pred___simple_field_expression_8h"/>
        <childnode refid="20854" relation="include">
        </childnode>
        <childnode refid="20856" relation="include">
        </childnode>
      </node>
      <node id="20857">
        <label>src/lib/access/JoinScan.h</label>
        <link refid="_join_scan_8h"/>
        <childnode refid="20858" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20913">
        <label>src/lib/access/IndexScan.cpp</label>
        <link refid="_index_scan_8cpp"/>
      </node>
      <node id="20990">
        <label>src/lib/io/StorageManager.cpp</label>
        <link refid="_storage_manager_8cpp"/>
      </node>
      <node id="20940">
        <label>src/lib/access/NoOp.cpp</label>
        <link refid="_no_op_8cpp"/>
      </node>
      <node id="20928">
        <label>src/lib/access/MaterializingScan.cpp</label>
        <link refid="_materializing_scan_8cpp"/>
      </node>
      <node id="20886">
        <label>src/lib/access/PlanOperation.h</label>
        <link refid="_plan_operation_8h"/>
        <childnode refid="20887" relation="include">
        </childnode>
        <childnode refid="20893" relation="include">
        </childnode>
        <childnode refid="20895" relation="include">
        </childnode>
        <childnode refid="20896" relation="include">
        </childnode>
        <childnode refid="20898" relation="include">
        </childnode>
        <childnode refid="20900" relation="include">
        </childnode>
        <childnode refid="20882" relation="include">
        </childnode>
        <childnode refid="20902" relation="include">
        </childnode>
        <childnode refid="20904" relation="include">
        </childnode>
        <childnode refid="20906" relation="include">
        </childnode>
        <childnode refid="20907" relation="include">
        </childnode>
        <childnode refid="20912" relation="include">
        </childnode>
        <childnode refid="20914" relation="include">
        </childnode>
        <childnode refid="20916" relation="include">
        </childnode>
        <childnode refid="20918" relation="include">
        </childnode>
        <childnode refid="20857" relation="include">
        </childnode>
        <childnode refid="20920" relation="include">
        </childnode>
        <childnode refid="20921" relation="include">
        </childnode>
        <childnode refid="20923" relation="include">
        </childnode>
        <childnode refid="20925" relation="include">
        </childnode>
        <childnode refid="20927" relation="include">
        </childnode>
        <childnode refid="20929" relation="include">
        </childnode>
        <childnode refid="20860" relation="include">
        </childnode>
        <childnode refid="20931" relation="include">
        </childnode>
        <childnode refid="20933" relation="include">
        </childnode>
        <childnode refid="20935" relation="include">
        </childnode>
        <childnode refid="20937" relation="include">
        </childnode>
        <childnode refid="20939" relation="include">
        </childnode>
        <childnode refid="20941" relation="include">
        </childnode>
        <childnode refid="20942" relation="include">
        </childnode>
        <childnode refid="20943" relation="include">
        </childnode>
        <childnode refid="20945" relation="include">
        </childnode>
        <childnode refid="20910" relation="include">
        </childnode>
        <childnode refid="20946" relation="include">
        </childnode>
        <childnode refid="20948" relation="include">
        </childnode>
        <childnode refid="20891" relation="include">
        </childnode>
        <childnode refid="20950" relation="include">
        </childnode>
        <childnode refid="20951" relation="include">
        </childnode>
        <childnode refid="20953" relation="include">
        </childnode>
        <childnode refid="20955" relation="include">
        </childnode>
        <childnode refid="20957" relation="include">
        </childnode>
        <childnode refid="20958" relation="include">
        </childnode>
        <childnode refid="20959" relation="include">
        </childnode>
        <childnode refid="20961" relation="include">
        </childnode>
        <childnode refid="20963" relation="include">
        </childnode>
        <childnode refid="20965" relation="include">
        </childnode>
        <childnode refid="20967" relation="include">
        </childnode>
        <childnode refid="20969" relation="include">
        </childnode>
        <childnode refid="20971" relation="include">
        </childnode>
        <childnode refid="20973" relation="include">
        </childnode>
        <childnode refid="20975" relation="include">
        </childnode>
        <childnode refid="20977" relation="include">
        </childnode>
        <childnode refid="20979" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
        <childnode refid="20981" relation="include">
        </childnode>
      </node>
      <node id="21008">
        <label>src/lib/storage/TableMerger.cpp</label>
        <link refid="_table_merger_8cpp"/>
      </node>
      <node id="20919">
        <label>src/lib/access/IntersectPositions.cpp</label>
        <link refid="_intersect_positions_8cpp"/>
      </node>
      <node id="20897">
        <label>src/lib/access/Distinct.cpp</label>
        <link refid="_distinct_8cpp"/>
      </node>
      <node id="20858">
        <label>src/lib/access/JoinScan.cpp</label>
        <link refid="lib_2access_2_join_scan_8cpp"/>
      </node>
      <node id="20895">
        <label>src/lib/access/CreateIndex.h</label>
        <link refid="_create_index_8h"/>
        <childnode refid="20884" relation="include">
        </childnode>
      </node>
      <node id="20894">
        <label>src/lib/access/Barrier.cpp</label>
        <link refid="_barrier_8cpp"/>
      </node>
      <node id="20981">
        <label>src/lib/testing/test.h</label>
        <link refid="test_8h"/>
        <childnode refid="20982" relation="include">
        </childnode>
      </node>
      <node id="20954">
        <label>src/lib/access/SetTable.cpp</label>
        <link refid="_set_table_8cpp"/>
      </node>
      <node id="20880">
        <label>src/lib/access/AggregateFunctions.h</label>
        <link refid="_aggregate_functions_8h"/>
        <childnode refid="20881" relation="include">
        </childnode>
        <childnode refid="20882" relation="include">
        </childnode>
      </node>
      <node id="20873">
        <label>src/lib/access/pred_LessThanExpression.h</label>
        <link refid="pred___less_than_expression_8h"/>
        <childnode refid="20856" relation="include">
        </childnode>
      </node>
      <node id="20884">
        <label>src/lib/access/CreateIndex.cpp</label>
        <link refid="_create_index_8cpp"/>
      </node>
      <node id="20868">
        <label>src/lib/access/pred_PredicateBuilder.h</label>
        <link refid="pred___predicate_builder_8h"/>
        <childnode refid="20856" relation="include">
        </childnode>
        <childnode refid="20869" relation="include">
        </childnode>
      </node>
      <node id="20918">
        <label>src/lib/access/IntersectPositions.h</label>
        <link refid="_intersect_positions_8h"/>
        <childnode refid="20919" relation="include">
        </childnode>
      </node>
      <node id="20920">
        <label>src/lib/access/Layouter.h</label>
        <link refid="_layouter_8h"/>
        <childnode refid="20837" relation="include">
        </childnode>
        <childnode refid="20859" relation="include">
        </childnode>
      </node>
      <node id="20862">
        <label>src/lib/access/pred_expression_factory.h</label>
        <link refid="pred__expression__factory_8h"/>
        <childnode refid="20861" relation="include">
        </childnode>
        <childnode refid="20856" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_order_indifferent_dictionary_iterator" prot="public">OrderIndifferentDictionaryIterator</innerclass>
    <innerclass refid="class_order_indifferent_dictionary" prot="public">OrderIndifferentDictionary</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_STORAGE_ORDERINDIFFERENTDICTIONARY_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_STORAGE_ORDERINDIFFERENTDICTIONARY_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="storage__types_8h" kindref="compound">storage/storage_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_abstract_dictionary_8h" kindref="compound">storage/AbstractDictionary.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_base_dictionary_8h" kindref="compound">storage/BaseDictionary.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_dictionary_iterator_8h" kindref="compound">storage/DictionaryIterator.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="csb__tree_8h" kindref="compound">storage/csb_tree.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_abstract_allocated_dictionary_8h" kindref="compound">storage/AbstractAllocatedDictionary.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/unordered_map.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/functional/hash.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIXME<sp/>should<sp/>be<sp/>aware<sp/>of<sp/>allocator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="24" refid="class_order_indifferent_dictionary_iterator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_order_indifferent_dictionary_iterator" kindref="compound">OrderIndifferentDictionaryIterator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_base_iterator" kindref="compound">BaseIterator</ref>&lt;T&gt;<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_order_indifferent_dictionary_iterator_1abcd7cacd84aa92a4efe1ba989b4e6c59" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::map&lt;T,<sp/>value_id_t&gt;::iterator<sp/><ref refid="class_order_indifferent_dictionary_iterator_1abcd7cacd84aa92a4efe1ba989b4e6c59" kindref="member">iterator_t</ref>;</highlight></codeline>
<codeline lineno="28" refid="class_order_indifferent_dictionary_iterator_1ae20a2bf293de8d2b91b056c344e2268b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_order_indifferent_dictionary_iterator_1abcd7cacd84aa92a4efe1ba989b4e6c59" kindref="member">iterator_t</ref><sp/><ref refid="class_order_indifferent_dictionary_iterator_1ae20a2bf293de8d2b91b056c344e2268b" kindref="member">_it</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_order_indifferent_dictionary_iterator_1ab692a85e39bb695ef2445c6b5b6c014b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_order_indifferent_dictionary_iterator_1ab692a85e39bb695ef2445c6b5b6c014b" kindref="member">OrderIndifferentDictionaryIterator</ref>():<sp/><ref refid="class_order_indifferent_dictionary_iterator_1ae20a2bf293de8d2b91b056c344e2268b" kindref="member">_it</ref>(<ref refid="csb__tree_8cpp_1ab979d9d4b4923f7c54d6caa6e1a61936" kindref="member">nullptr</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_order_indifferent_dictionary_iterator_1af1b5db73b0e98e78426dc728b712711d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_iterator_1af1b5db73b0e98e78426dc728b712711d" kindref="member">OrderIndifferentDictionaryIterator</ref>(<ref refid="class_order_indifferent_dictionary_iterator_1abcd7cacd84aa92a4efe1ba989b4e6c59" kindref="member">iterator_t</ref><sp/>it):<sp/><ref refid="class_order_indifferent_dictionary_iterator_1ae20a2bf293de8d2b91b056c344e2268b" kindref="member">_it</ref>(it)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;order<sp/>indifferent<sp/>dict<sp/>it<sp/>copy<sp/>constr&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="class_order_indifferent_dictionary_iterator_1a61c5a1d30c3c9535a2f696e718a6c90a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_iterator_1a61c5a1d30c3c9535a2f696e718a6c90a" kindref="member">increment</ref>()<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>++<ref refid="class_order_indifferent_dictionary_iterator_1ae20a2bf293de8d2b91b056c344e2268b" kindref="member">_it</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="class_order_indifferent_dictionary_iterator_1ac6f8985ad33b0e770827f49ad63142f0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_iterator_1ac6f8985ad33b0e770827f49ad63142f0" kindref="member">equal</ref>(<ref refid="class_base_iterator" kindref="compound">BaseIterator&lt;T&gt;</ref><sp/>*other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_iterator_1ae20a2bf293de8d2b91b056c344e2268b" kindref="member">_it</ref><sp/>==<sp/>((<ref refid="class_order_indifferent_dictionary_iterator" kindref="compound">OrderIndifferentDictionaryIterator&lt;T&gt;</ref><sp/>*)<sp/>other)-&gt;_it;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_order_indifferent_dictionary_iterator_1a182f154be3058eb8ecff94b8cd0d1f12" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/>&amp;<ref refid="class_order_indifferent_dictionary_iterator_1a182f154be3058eb8ecff94b8cd0d1f12" kindref="member">dereference</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(T<sp/>&amp;)(*_it).first;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_order_indifferent_dictionary_iterator_1a44cb88e3f551e530094c33b9894922b1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref><sp/><ref refid="class_order_indifferent_dictionary_iterator_1a44cb88e3f551e530094c33b9894922b1" kindref="member">getValueId</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*_it).second;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_order_indifferent_dictionary_iterator_1adb07bcc64a0bdcb8102c163311534a24" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_base_iterator" kindref="compound">BaseIterator&lt;T&gt;</ref><sp/>*<ref refid="class_order_indifferent_dictionary_iterator_1adb07bcc64a0bdcb8102c163311534a24" kindref="member">clone</ref>()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;t2&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_iterator" kindref="compound">OrderIndifferentDictionaryIterator&lt;T&gt;</ref>(*this);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/>An<sp/>unordered<sp/>dictionary<sp/>directly<sp/>returns<sp/>the<sp/>offset<sp/>of<sp/>the<sp/>value</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/>inside<sp/>the<sp/>value<sp/>list.<sp/>An<sp/>auxillary<sp/>structure<sp/>is<sp/>kept<sp/>to<sp/>allow</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/>easy<sp/>sorted<sp/>iteratos<sp/>and<sp/>logarithmic<sp/>finds.</highlight></codeline>
<codeline lineno="64"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Strategy<sp/>=<sp/><ref refid="class_malloc_strategy" kindref="compound">MallocStrategy</ref>,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>S&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Allocator<sp/>=<sp/><ref refid="class_strategized_allocator" kindref="compound">StrategizedAllocator</ref></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&gt;</highlight></codeline>
<codeline lineno="69" refid="class_order_indifferent_dictionary" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_order_indifferent_dictionary" kindref="compound">OrderIndifferentDictionary</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_base_allocated_dictionary" kindref="compound">BaseAllocatedDictionary</ref><sp/>&lt;<sp/>T,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>Strategy,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>Allocator,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>OrderIndifferentDictionary&lt;T,<sp/>Strategy,<sp/>Allocator&gt;<sp/>&gt;<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_order_indifferent_dictionary_1a8adb8c3cd05e631513c2e1d4145119ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Strategy<sp/><ref refid="class_order_indifferent_dictionary_1a8adb8c3cd05e631513c2e1d4145119ce" kindref="member">strategy_type</ref>;</highlight></codeline>
<codeline lineno="75" refid="class_order_indifferent_dictionary_1ac2bf4f3645e79ba16f98d6f8ec4b6958" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;T,<sp/>value_id_t,<sp/>std::less&lt;T&gt;,<sp/>Allocator&lt;std::pair&lt;T,<sp/>value_id_t&gt;,<sp/>Strategy&gt;<sp/>&gt;<sp/><ref refid="class_order_indifferent_dictionary_1ac2bf4f3645e79ba16f98d6f8ec4b6958" kindref="member">index_type</ref>;</highlight></codeline>
<codeline lineno="76" refid="class_order_indifferent_dictionary_1aceadb686e00dc02ce1fde6d12b3a56db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;T,<sp/>Allocator&lt;T,<sp/>Strategy&gt;<sp/>&gt;<sp/><ref refid="class_order_indifferent_dictionary_1aceadb686e00dc02ce1fde6d12b3a56db" kindref="member">vector_type</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>main<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_order_indifferent_dictionary_1a2d42231e96ba64a35cf198b65d3a1a81" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_order_indifferent_dictionary_1ac2bf4f3645e79ba16f98d6f8ec4b6958" kindref="member">index_type</ref><sp/><ref refid="class_order_indifferent_dictionary_1a2d42231e96ba64a35cf198b65d3a1a81" kindref="member">_index</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>used<sp/>for<sp/>the<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_order_indifferent_dictionary_1aceadb686e00dc02ce1fde6d12b3a56db" kindref="member">vector_type</ref><sp/><ref refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" kindref="member">_value_list</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_order_indifferent_dictionary_1ad529f2dbf878f32fe7b89c078de4e78b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1ad529f2dbf878f32fe7b89c078de4e78b" kindref="member">OrderIndifferentDictionary</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_order_indifferent_dictionary_1a696a95aded3ae17ebce247c82d8dc6d7" kindref="member">reserve</ref>(s);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_order_indifferent_dictionary_1a997df11f4717a9fe803caff18f6e6346" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a997df11f4717a9fe803caff18f6e6346" kindref="member">~OrderIndifferentDictionary</ref>()<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_order_indifferent_dictionary_1a09080e5e26bf0bdf88c94e21d4108f66" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a09080e5e26bf0bdf88c94e21d4108f66" kindref="member">shrink</ref>()<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" kindref="member">_value_list</ref>.shrink_to_fit();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_order_indifferent_dictionary_1a674d4ade9b462154411c33575043ac52" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a674d4ade9b462154411c33575043ac52" kindref="member">isOrdered</ref>()<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_order_indifferent_dictionary_1a657edbbe644f8bf1f8fc102e65d4a382" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a657edbbe644f8bf1f8fc102e65d4a382" kindref="member">size</ref>()<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" kindref="member">_value_list</ref>.size();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_order_indifferent_dictionary_1a96097b280ce81696760f805d3f9062d9" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;AbstractDictionary&gt;<sp/><ref refid="class_order_indifferent_dictionary_1a96097b280ce81696760f805d3f9062d9" kindref="member">copy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>std::make_shared&lt;OrderIndifferentDictionary&lt;T,<sp/>Strategy,<sp/>Allocator&gt;&gt;();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>res-&gt;_index<sp/>=<sp/><ref refid="class_order_indifferent_dictionary_1a2d42231e96ba64a35cf198b65d3a1a81" kindref="member">_index</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>res-&gt;_value_list<sp/>=<sp/><ref refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" kindref="member">_value_list</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="class_order_indifferent_dictionary_1a696a95aded3ae17ebce247c82d8dc6d7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a696a95aded3ae17ebce247c82d8dc6d7" kindref="member">reserve</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" kindref="member">_value_list</ref>.reserve(s);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_order_indifferent_dictionary_1a983cd4b3da824dd8ccea9c8a894bb149" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_order_indifferent_dictionary_1a983cd4b3da824dd8ccea9c8a894bb149" kindref="member">getValueForValueId</ref>(<ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref><sp/>value_id)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" kindref="member">_value_list</ref>[value_id];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_order_indifferent_dictionary_1a465a5b228c9211a3fe68b96053ecf3a8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref><sp/><ref refid="class_order_indifferent_dictionary_1a465a5b228c9211a3fe68b96053ecf3a8" kindref="member">addValue</ref>(T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" kindref="member">_value_list</ref>.push_back(value);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_order_indifferent_dictionary_1ab2ed2e67ceb10273fc9cb0b9e1a6f384" kindref="member">addValueToIndex</ref>(value);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" kindref="member">_value_list</ref>.size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="class_order_indifferent_dictionary_1ab2ed2e67ceb10273fc9cb0b9e1a6f384" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1ab2ed2e67ceb10273fc9cb0b9e1a6f384" kindref="member">addValueToIndex</ref>(T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_order_indifferent_dictionary_1a2d42231e96ba64a35cf198b65d3a1a81" kindref="member">_index</ref>.insert(std::pair&lt;T,<sp/>value_id_t&gt;(value,<sp/><ref refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" kindref="member">_value_list</ref>.size()<sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="class_order_indifferent_dictionary_1ac1c8682e67d42636b3eab489af14fe7b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1ac1c8682e67d42636b3eab489af14fe7b" kindref="member">isValueIdValid</ref>(<ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref><sp/>value_id)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value_id<sp/>&lt;<sp/><ref refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" kindref="member">_value_list</ref>.size();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_order_indifferent_dictionary_1ab12d5b00e51c710fc934ad81dd281293" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1ab12d5b00e51c710fc934ad81dd281293" kindref="member">valueExists</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;v)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a2d42231e96ba64a35cf198b65d3a1a81" kindref="member">_index</ref>.count(v)<sp/>==<sp/>1;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/>*<sp/><sp/>Returns<sp/>the<sp/>value<sp/>id<sp/>given<sp/>a<sp/>value</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Unfortunately<sp/>its<sp/>not<sp/>possible<sp/>to<sp/>not<sp/>perform<sp/>a<sp/>better<sp/>search,<sp/>since</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/>*<sp/>the<sp/>value<sp/>lookup<sp/>is<sp/>always<sp/>linear</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@note<sp/>complexity<sp/>is<sp/>O(n)</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/>*<sp/>@param<sp/>value<sp/>the<sp/>value</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_order_indifferent_dictionary_1a9dbf5768a350242da44f563dd5fff517" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref><sp/><ref refid="class_order_indifferent_dictionary_1a9dbf5768a350242da44f563dd5fff517" kindref="member">getValueIdForValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;value)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_order_indifferent_dictionary_1a2d42231e96ba64a35cf198b65d3a1a81" kindref="member">_index</ref>.count(value)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a2d42231e96ba64a35cf198b65d3a1a81" kindref="member">_index</ref>.at(value);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Value<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="class_order_indifferent_dictionary_1a2b4a4a4b385c6803873cabedb85cbc0f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref><sp/><ref refid="class_order_indifferent_dictionary_1a2b4a4a4b385c6803873cabedb85cbc0f" kindref="member">getValueIdForValueSmaller</ref>(T<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;This<sp/>cannot<sp/>be<sp/>called<sp/>since<sp/>value<sp/>ids<sp/>have<sp/>no<sp/>ordered<sp/>meaning&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="class_order_indifferent_dictionary_1a7fb5ccecfe536f6695eb827e2c46118f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref><sp/><ref refid="class_order_indifferent_dictionary_1a7fb5ccecfe536f6695eb827e2c46118f" kindref="member">getValueIdForValueGreater</ref>(T<sp/>other)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;This<sp/>cannot<sp/>be<sp/>calles<sp/>since<sp/>value<sp/>ids<sp/>have<sp/>no<sp/>ordered<sp/>meaning&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_order_indifferent_dictionary_1a505830fd9d5b149514088799e1f4a71a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_order_indifferent_dictionary_1a505830fd9d5b149514088799e1f4a71a" kindref="member">getSmallestValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;This<sp/>cannot<sp/>be<sp/>called<sp/>in<sp/>an<sp/>unordered<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_order_indifferent_dictionary_1a44b76427d344c0488d793bbcbf8b20e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_order_indifferent_dictionary_1a44b76427d344c0488d793bbcbf8b20e5" kindref="member">getGreatestValue</ref>()<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;This<sp/>cannot<sp/>be<sp/>called<sp/>in<sp/>an<sp/>unordered<sp/>dictionary&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="class_order_indifferent_dictionary_1a1e87a3fa8da32b796934e808af2bcaa2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_dictionary_iterator" kindref="compound">DictionaryIterator&lt;T&gt;</ref><sp/><ref refid="class_order_indifferent_dictionary_1a1e87a3fa8da32b796934e808af2bcaa2" kindref="member">iterator</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>an<sp/>iterator<sp/>pointing<sp/>to<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="class_order_indifferent_dictionary_1afeac2939b2a3b7cdfefc30cd522eda4b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_dictionary_iterator" kindref="compound">iterator</ref><sp/><ref refid="class_order_indifferent_dictionary_1afeac2939b2a3b7cdfefc30cd522eda4b" kindref="member">begin</ref>()<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a1e87a3fa8da32b796934e808af2bcaa2" kindref="member">iterator</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_iterator" kindref="compound">OrderIndifferentDictionaryIterator&lt;T&gt;</ref>(<ref refid="class_order_indifferent_dictionary_1a2d42231e96ba64a35cf198b65d3a1a81" kindref="member">_index</ref>.begin()));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>an<sp/>empty<sp/>iterator<sp/>that<sp/>marks<sp/>the<sp/>end<sp/>of<sp/>the<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_order_indifferent_dictionary_1ae4d47cde54a05c84f624d29041b33ee6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_dictionary_iterator" kindref="compound">iterator</ref><sp/><ref refid="class_order_indifferent_dictionary_1ae4d47cde54a05c84f624d29041b33ee6" kindref="member">end</ref>()<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a1e87a3fa8da32b796934e808af2bcaa2" kindref="member">iterator</ref>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_iterator" kindref="compound">OrderIndifferentDictionaryIterator&lt;T&gt;</ref>(<ref refid="class_order_indifferent_dictionary_1a2d42231e96ba64a35cf198b65d3a1a81" kindref="member">_index</ref>.end()));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_order_indifferent_dictionary_1a8cfa3c64b468c8c23f28355c59661f1c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_order_indifferent_dictionary_1a8cfa3c64b468c8c23f28355c59661f1c" kindref="member">build_index</ref>()<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" kindref="member">_value_list</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_order_indifferent_dictionary_1ab2ed2e67ceb10273fc9cb0b9e1a6f384" kindref="member">addValueToIndex</ref>(<ref refid="class_order_indifferent_dictionary_1a848ac209de977617fb443233fd2221fb" kindref="member">_value_list</ref>[i]);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_STORAGE_ORDERINDIFFERENTDICTIONARY_H_</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/storage/OrderIndifferentDictionary.h"/>
  </compounddef>
</doxygen>
