<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_example_expression_8cpp" kind="file">
    <compoundname>ExampleExpression.cpp</compoundname>
    <includes refid="_example_expression_8h" local="yes">access/ExampleExpression.h</includes>
    <includes refid="_abstract_table_8h" local="yes">storage/AbstractTable.h</includes>
    <includes refid="make__unique_8h" local="yes">helper/make_unique.h</includes>
    <includes refid="_expression_registration_8h" local="yes">access/ExpressionRegistration.h</includes>
    <incdepgraph>
      <node id="3484">
        <label>list</label>
      </node>
      <node id="3470">
        <label>atomic</label>
      </node>
      <node id="3479">
        <label>storage/BaseAllocatedAttributeVector.h</label>
        <link refid="_base_allocated_attribute_vector_8h"/>
        <childnode refid="3478" relation="include">
        </childnode>
        <childnode refid="3480" relation="include">
        </childnode>
      </node>
      <node id="3493">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="3467">
        <label>limits</label>
      </node>
      <node id="3514">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="3489">
        <label>assert.h</label>
      </node>
      <node id="3495">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="3476">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="3465">
        <label>cstdint</label>
      </node>
      <node id="3469">
        <label>storage/FixedLengthVector.h</label>
        <link refid="_fixed_length_vector_8h"/>
        <childnode refid="3470" relation="include">
        </childnode>
        <childnode refid="3471" relation="include">
        </childnode>
        <childnode refid="3472" relation="include">
        </childnode>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3473" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3474" relation="include">
        </childnode>
        <childnode refid="3475" relation="include">
        </childnode>
        <childnode refid="3476" relation="include">
        </childnode>
        <childnode refid="3477" relation="include">
        </childnode>
        <childnode refid="3478" relation="include">
        </childnode>
        <childnode refid="3479" relation="include">
        </childnode>
        <childnode refid="3481" relation="include">
        </childnode>
        <childnode refid="3485" relation="include">
        </childnode>
      </node>
      <node id="3499">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="3490" relation="include">
        </childnode>
        <childnode refid="3496" relation="include">
        </childnode>
        <childnode refid="3500" relation="include">
        </childnode>
      </node>
      <node id="3491">
        <label>stdint.h</label>
      </node>
      <node id="3498">
        <label>stdlib.h</label>
      </node>
      <node id="3471">
        <label>errno.h</label>
      </node>
      <node id="3474">
        <label>stdexcept</label>
      </node>
      <node id="3460">
        <label>access/ExampleExpression.h</label>
        <link refid="_example_expression_8h"/>
        <childnode refid="3461" relation="include">
        </childnode>
        <childnode refid="3462" relation="include">
        </childnode>
        <childnode refid="3464" relation="include">
        </childnode>
        <childnode refid="3469" relation="include">
        </childnode>
        <childnode refid="3488" relation="include">
        </childnode>
        <childnode refid="3490" relation="include">
        </childnode>
      </node>
      <node id="3466">
        <label>string</label>
      </node>
      <node id="3511">
        <label>map</label>
      </node>
      <node id="3506">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="3488" relation="include">
        </childnode>
        <childnode refid="3507" relation="include">
        </childnode>
      </node>
      <node id="3497">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="3471" relation="include">
        </childnode>
        <childnode refid="3480" relation="include">
        </childnode>
        <childnode refid="3498" relation="include">
        </childnode>
      </node>
      <node id="3510">
        <label>exception</label>
      </node>
      <node id="3482">
        <label>stddef.h</label>
      </node>
      <node id="3507">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="3490" relation="include">
        </childnode>
        <childnode refid="3496" relation="include">
        </childnode>
        <childnode refid="3499" relation="include">
        </childnode>
        <childnode refid="3500" relation="include">
        </childnode>
        <childnode refid="3508" relation="include">
        </childnode>
        <childnode refid="3502" relation="include">
        </childnode>
        <childnode refid="3510" relation="include">
        </childnode>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3511" relation="include">
        </childnode>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3512" relation="include">
        </childnode>
        <childnode refid="3513" relation="include">
        </childnode>
        <childnode refid="3514" relation="include">
        </childnode>
      </node>
      <node id="3492">
        <label>ostream</label>
      </node>
      <node id="3461">
        <label>json.h</label>
      </node>
      <node id="3519">
        <label>helper/noncopyable.h</label>
        <link refid="noncopyable_8h"/>
      </node>
      <node id="3512">
        <label>limits.h</label>
      </node>
      <node id="3500">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="3501" relation="include">
        </childnode>
        <childnode refid="3476" relation="include">
        </childnode>
      </node>
      <node id="3496">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3481" relation="include">
        </childnode>
        <childnode refid="3485" relation="include">
        </childnode>
        <childnode refid="3497" relation="include">
        </childnode>
        <childnode refid="3490" relation="include">
        </childnode>
      </node>
      <node id="3462">
        <label>access/AbstractExpression.h</label>
        <link refid="_abstract_expression_8h"/>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3464" relation="include">
        </childnode>
      </node>
      <node id="3509">
        <label>string.h</label>
      </node>
      <node id="3503">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="3467" relation="include">
        </childnode>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3474" relation="include">
        </childnode>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3464" relation="include">
        </childnode>
        <childnode refid="3504" relation="include">
        </childnode>
        <childnode refid="3490" relation="include">
        </childnode>
        <childnode refid="3505" relation="include">
        </childnode>
        <childnode refid="3506" relation="include">
        </childnode>
      </node>
      <node id="3504">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="3513">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="3463">
        <label>vector</label>
      </node>
      <node id="3517">
        <label>utility</label>
      </node>
      <node id="3464">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3465" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3467" relation="include">
        </childnode>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3463" relation="include">
        </childnode>
      </node>
      <node id="3475">
        <label>sstream</label>
      </node>
      <node id="3501">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="3481">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="3482" relation="include">
        </childnode>
        <childnode refid="3483" relation="include">
        </childnode>
        <childnode refid="3484" relation="include">
        </childnode>
        <childnode refid="3474" relation="include">
        </childnode>
      </node>
      <node id="3472">
        <label>math.h</label>
      </node>
      <node id="3486">
        <label>iostream</label>
      </node>
      <node id="3518">
        <label>access/ExpressionRegistration.h</label>
        <link refid="_expression_registration_8h"/>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3511" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3461" relation="include">
        </childnode>
        <childnode refid="3464" relation="include">
        </childnode>
        <childnode refid="3515" relation="include">
        </childnode>
        <childnode refid="3519" relation="include">
        </childnode>
        <childnode refid="3462" relation="include">
        </childnode>
      </node>
      <node id="3505">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="3490" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3474" relation="include">
        </childnode>
      </node>
      <node id="3477">
        <label>storage/AbstractAttributeVector.h</label>
        <link refid="_abstract_attribute_vector_8h"/>
      </node>
      <node id="3494">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="3473">
        <label>mutex</label>
      </node>
      <node id="3459">
        <label>src/lib/access/ExampleExpression.cpp</label>
        <link refid="ExampleExpression.cpp"/>
        <childnode refid="3460" relation="include">
        </childnode>
        <childnode refid="3503" relation="include">
        </childnode>
        <childnode refid="3515" relation="include">
        </childnode>
        <childnode refid="3518" relation="include">
        </childnode>
      </node>
      <node id="3502">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="3478">
        <label>storage/BaseAttributeVector.h</label>
        <link refid="_base_attribute_vector_8h"/>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3474" relation="include">
        </childnode>
        <childnode refid="3477" relation="include">
        </childnode>
      </node>
      <node id="3485">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="3486" relation="include">
        </childnode>
        <childnode refid="3465" relation="include">
        </childnode>
        <childnode refid="3487" relation="include">
        </childnode>
      </node>
      <node id="3516">
        <label>type_traits</label>
      </node>
      <node id="3488">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="3489" relation="include">
        </childnode>
        <childnode refid="3486" relation="include">
        </childnode>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3490" relation="include">
        </childnode>
        <childnode refid="3496" relation="include">
        </childnode>
        <childnode refid="3499" relation="include">
        </childnode>
        <childnode refid="3500" relation="include">
        </childnode>
        <childnode refid="3502" relation="include">
        </childnode>
        <childnode refid="3501" relation="include">
        </childnode>
      </node>
      <node id="3515">
        <label>helper/make_unique.h</label>
        <link refid="make__unique_8h"/>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3516" relation="include">
        </childnode>
        <childnode refid="3517" relation="include">
        </childnode>
      </node>
      <node id="3483">
        <label>algorithm</label>
      </node>
      <node id="3480">
        <label>stdio.h</label>
      </node>
      <node id="3487">
        <label>cstring</label>
      </node>
      <node id="3508">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3486" relation="include">
        </childnode>
        <childnode refid="3484" relation="include">
        </childnode>
        <childnode refid="3468" relation="include">
        </childnode>
        <childnode refid="3509" relation="include">
        </childnode>
        <childnode refid="3489" relation="include">
        </childnode>
        <childnode refid="3476" relation="include">
        </childnode>
      </node>
      <node id="3468">
        <label>memory</label>
      </node>
      <node id="3490">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="3463" relation="include">
        </childnode>
        <childnode refid="3466" relation="include">
        </childnode>
        <childnode refid="3474" relation="include">
        </childnode>
        <childnode refid="3491" relation="include">
        </childnode>
        <childnode refid="3492" relation="include">
        </childnode>
        <childnode refid="3493" relation="include">
        </childnode>
        <childnode refid="3494" relation="include">
        </childnode>
        <childnode refid="3495" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacehyrise">hyrise</innernamespace>
    <innernamespace refid="namespacehyrise_1_1access">hyrise::access</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_example_expression_8h" kindref="compound">access/ExampleExpression.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_table_8h" kindref="compound">storage/AbstractTable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="make__unique_8h" kindref="compound">helper/make_unique.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_expression_registration_8h" kindref="compound">access/ExpressionRegistration.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hyrise<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">access<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>_<sp/>=<sp/>Expressions::add&lt;ExampleExpression&gt;(</highlight><highlight class="stringliteral">&quot;hyrise::example&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="classhyrise_1_1access_1_1_example_expression_1a936a717bc90e83cee50b794d8a350c62" refkind="member"><highlight class="normal"><ref refid="classhyrise_1_1access_1_1_example_expression_1a936a717bc90e83cee50b794d8a350c62" kindref="member">ExampleExpression::ExampleExpression</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a72c5f9ba0685142ffc747d0a586a5d8a" kindref="member">hyrise_int_t</ref>&amp;<sp/>value)<sp/>:<sp/>_column(column),<sp/>_value(value)<sp/>{}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classhyrise_1_1access_1_1_example_expression_1a82df4f703642b38ed0971bacd7339133" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_example_expression_1a82df4f703642b38ed0971bacd7339133" kindref="member">ExampleExpression::operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>row)<sp/>{<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_example_expression_1ada63c31e56a5b1e23102f26705ea9619" kindref="member">_vector</ref>-&gt;getRef(<ref refid="classhyrise_1_1access_1_1_example_expression_1a120f2938165ec6234c36d7da26f3e73b" kindref="member">_column</ref>,<sp/>row)<sp/>==<sp/><ref refid="classhyrise_1_1access_1_1_example_expression_1abe95a4a305535a797092b138a84cc5cb" kindref="member">_valueid</ref>;<sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="classhyrise_1_1access_1_1_example_expression_1af65177adf8b38acf419dc8bd075c5530" refkind="member"><highlight class="normal"><ref refid="storage__types_8h_1a543d59ef56384af4a7af9aa551bc6825" kindref="member">pos_list_t</ref>*<sp/><ref refid="classhyrise_1_1access_1_1_example_expression_1af65177adf8b38acf419dc8bd075c5530" kindref="member">ExampleExpression::match</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stop)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pl<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a543d59ef56384af4a7af9aa551bc6825" kindref="member">pos_list_t</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row=0;<sp/>row<sp/>&lt;<sp/>stop;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;ExampleExpression::operator()(row))<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pl-&gt;push_back(row);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pl;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="classhyrise_1_1access_1_1_example_expression_1a0a8ad2994d97cef020e6fe30eb0d5060" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_example_expression_1a0a8ad2994d97cef020e6fe30eb0d5060" kindref="member">ExampleExpression::walk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t&gt;<sp/>&amp;tables)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_example_expression_1a87f3c26fecbb56a6351d38d4ccabe31d" kindref="member">_table</ref><sp/>=<sp/>tables.at(0);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>avs<sp/>=<sp/><ref refid="classhyrise_1_1access_1_1_example_expression_1a87f3c26fecbb56a6351d38d4ccabe31d" kindref="member">_table</ref>-&gt;getAttributeVectors(<ref refid="classhyrise_1_1access_1_1_example_expression_1a120f2938165ec6234c36d7da26f3e73b" kindref="member">_column</ref>);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_example_expression_1ada63c31e56a5b1e23102f26705ea9619" kindref="member">_vector</ref><sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_fixed_length_vector" kindref="compound">FixedLengthVector&lt;value_id_t&gt;</ref>&gt;(avs.at(0).attribute_vector);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_example_expression_1a5cb51666998a1be5aab022cd68c8966f" kindref="member">_dict</ref><sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_order_preserving_dictionary" kindref="compound">OrderPreservingDictionary&lt;hyrise_int_t&gt;</ref>&gt;(<ref refid="classhyrise_1_1access_1_1_example_expression_1a87f3c26fecbb56a6351d38d4ccabe31d" kindref="member">_table</ref>-&gt;dictionaryAt(<ref refid="classhyrise_1_1access_1_1_example_expression_1a120f2938165ec6234c36d7da26f3e73b" kindref="member">_column</ref>));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="classhyrise_1_1access_1_1_example_expression_1ada63c31e56a5b1e23102f26705ea9619" kindref="member">_vector</ref><sp/>&amp;&amp;<sp/>_dict))<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>extract<sp/>proper<sp/>structures&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="classhyrise_1_1access_1_1_example_expression_1abe95a4a305535a797092b138a84cc5cb" kindref="member">_valueid</ref><sp/>=<sp/>_dict-&gt;getValueIdForValue(<ref refid="classhyrise_1_1access_1_1_example_expression_1a62ddb3a0124fb83d29a8b706c27ec699" kindref="member">_value</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="classhyrise_1_1access_1_1_example_expression_1a50e6c6c5449bb0c29099f5cbee71b9f9" refkind="member"><highlight class="normal">std::unique_ptr&lt;ExampleExpression&gt;<sp/><ref refid="classhyrise_1_1access_1_1_example_expression_1a50e6c6c5449bb0c29099f5cbee71b9f9" kindref="member">ExampleExpression::parse</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Json::Value&amp;<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>make_unique&lt;ExampleExpression&gt;(data[</highlight><highlight class="stringliteral">&quot;column&quot;</highlight><highlight class="normal">].asUInt(),<sp/>data[</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">].asUInt());</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">}}</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/access/ExampleExpression.cpp"/>
  </compounddef>
</doxygen>
