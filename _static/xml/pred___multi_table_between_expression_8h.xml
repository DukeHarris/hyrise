<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="pred___multi_table_between_expression_8h" kind="file">
    <compoundname>pred_MultiTableBetweenExpression.h</compoundname>
    <includes refid="pred__common_8h" local="yes">pred_common.h</includes>
    <includedby refid="predicates_8h" local="yes">src/lib/access/predicates.h</includedby>
    <incdepgraph>
      <node id="9143">
        <label>list</label>
      </node>
      <node id="9129">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="9124">
        <label>limits</label>
      </node>
      <node id="9161">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="9137">
        <label>assert.h</label>
      </node>
      <node id="9131">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="9152">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="9122">
        <label>cstdint</label>
      </node>
      <node id="9162">
        <label>expression_types.h</label>
        <link refid="expression__types_8h"/>
        <childnode refid="9158" relation="include">
        </childnode>
        <childnode refid="9123" relation="include">
        </childnode>
        <childnode refid="9163" relation="include">
        </childnode>
      </node>
      <node id="9149">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="9126" relation="include">
        </childnode>
        <childnode refid="9139" relation="include">
        </childnode>
        <childnode refid="9150" relation="include">
        </childnode>
      </node>
      <node id="9127">
        <label>stdint.h</label>
      </node>
      <node id="9148">
        <label>stdlib.h</label>
      </node>
      <node id="9147">
        <label>errno.h</label>
      </node>
      <node id="9119">
        <label>stdexcept</label>
      </node>
      <node id="9123">
        <label>string</label>
      </node>
      <node id="9117">
        <label>pred_common.h</label>
        <link refid="pred__common_8h"/>
        <childnode refid="9118" relation="include">
        </childnode>
        <childnode refid="9119" relation="include">
        </childnode>
        <childnode refid="9120" relation="include">
        </childnode>
        <childnode refid="9121" relation="include">
        </childnode>
        <childnode refid="9126" relation="include">
        </childnode>
        <childnode refid="9132" relation="include">
        </childnode>
        <childnode refid="9135" relation="include">
        </childnode>
        <childnode refid="9162" relation="include">
        </childnode>
        <childnode refid="9164" relation="include">
        </childnode>
        <childnode refid="9165" relation="include">
        </childnode>
        <childnode refid="9167" relation="include">
        </childnode>
      </node>
      <node id="9158">
        <label>map</label>
      </node>
      <node id="9135">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="9136" relation="include">
        </childnode>
        <childnode refid="9154" relation="include">
        </childnode>
      </node>
      <node id="9146">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="9147" relation="include">
        </childnode>
        <childnode refid="9120" relation="include">
        </childnode>
        <childnode refid="9148" relation="include">
        </childnode>
      </node>
      <node id="9157">
        <label>exception</label>
      </node>
      <node id="9141">
        <label>stddef.h</label>
      </node>
      <node id="9154">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="9126" relation="include">
        </childnode>
        <childnode refid="9139" relation="include">
        </childnode>
        <childnode refid="9149" relation="include">
        </childnode>
        <childnode refid="9150" relation="include">
        </childnode>
        <childnode refid="9155" relation="include">
        </childnode>
        <childnode refid="9153" relation="include">
        </childnode>
        <childnode refid="9157" relation="include">
        </childnode>
        <childnode refid="9118" relation="include">
        </childnode>
        <childnode refid="9158" relation="include">
        </childnode>
        <childnode refid="9125" relation="include">
        </childnode>
        <childnode refid="9159" relation="include">
        </childnode>
        <childnode refid="9160" relation="include">
        </childnode>
        <childnode refid="9161" relation="include">
        </childnode>
      </node>
      <node id="9128">
        <label>ostream</label>
      </node>
      <node id="9163">
        <label>json.h</label>
      </node>
      <node id="9159">
        <label>limits.h</label>
      </node>
      <node id="9150">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="9151" relation="include">
        </childnode>
        <childnode refid="9152" relation="include">
        </childnode>
      </node>
      <node id="9139">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="9118" relation="include">
        </childnode>
        <childnode refid="9123" relation="include">
        </childnode>
        <childnode refid="9125" relation="include">
        </childnode>
        <childnode refid="9140" relation="include">
        </childnode>
        <childnode refid="9144" relation="include">
        </childnode>
        <childnode refid="9146" relation="include">
        </childnode>
        <childnode refid="9126" relation="include">
        </childnode>
      </node>
      <node id="9166">
        <label>access/AbstractExpression.h</label>
        <link refid="_abstract_expression_8h"/>
        <childnode refid="9118" relation="include">
        </childnode>
        <childnode refid="9121" relation="include">
        </childnode>
      </node>
      <node id="9156">
        <label>string.h</label>
      </node>
      <node id="9132">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="9124" relation="include">
        </childnode>
        <childnode refid="9125" relation="include">
        </childnode>
        <childnode refid="9119" relation="include">
        </childnode>
        <childnode refid="9118" relation="include">
        </childnode>
        <childnode refid="9123" relation="include">
        </childnode>
        <childnode refid="9121" relation="include">
        </childnode>
        <childnode refid="9133" relation="include">
        </childnode>
        <childnode refid="9126" relation="include">
        </childnode>
        <childnode refid="9134" relation="include">
        </childnode>
        <childnode refid="9135" relation="include">
        </childnode>
      </node>
      <node id="9133">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="9160">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="9118">
        <label>vector</label>
      </node>
      <node id="9164">
        <label>join_predicates.h</label>
        <link refid="join__predicates_8h"/>
        <childnode refid="9121" relation="include">
        </childnode>
        <childnode refid="9162" relation="include">
        </childnode>
      </node>
      <node id="9121">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="9122" relation="include">
        </childnode>
        <childnode refid="9123" relation="include">
        </childnode>
        <childnode refid="9124" relation="include">
        </childnode>
        <childnode refid="9125" relation="include">
        </childnode>
        <childnode refid="9118" relation="include">
        </childnode>
      </node>
      <node id="9165">
        <label>pred_SimpleExpression.h</label>
        <link refid="pred___simple_expression_8h"/>
        <childnode refid="9126" relation="include">
        </childnode>
        <childnode refid="9121" relation="include">
        </childnode>
        <childnode refid="9166" relation="include">
        </childnode>
      </node>
      <node id="9151">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="9140">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="9141" relation="include">
        </childnode>
        <childnode refid="9142" relation="include">
        </childnode>
        <childnode refid="9143" relation="include">
        </childnode>
        <childnode refid="9119" relation="include">
        </childnode>
      </node>
      <node id="9138">
        <label>iostream</label>
      </node>
      <node id="9134">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="9126" relation="include">
        </childnode>
        <childnode refid="9123" relation="include">
        </childnode>
        <childnode refid="9119" relation="include">
        </childnode>
      </node>
      <node id="9130">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="9116">
        <label>src/lib/access/pred_MultiTableBetweenExpression.h</label>
        <link refid="pred_MultiTableBetweenExpression.h"/>
        <childnode refid="9117" relation="include">
        </childnode>
      </node>
      <node id="9153">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="9144">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="9138" relation="include">
        </childnode>
        <childnode refid="9122" relation="include">
        </childnode>
        <childnode refid="9145" relation="include">
        </childnode>
      </node>
      <node id="9167">
        <label>pred_SimpleFieldExpression.h</label>
        <link refid="pred___simple_field_expression_8h"/>
        <childnode refid="9121" relation="include">
        </childnode>
        <childnode refid="9117" relation="include">
        </childnode>
      </node>
      <node id="9136">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="9137" relation="include">
        </childnode>
        <childnode refid="9138" relation="include">
        </childnode>
        <childnode refid="9125" relation="include">
        </childnode>
        <childnode refid="9126" relation="include">
        </childnode>
        <childnode refid="9139" relation="include">
        </childnode>
        <childnode refid="9149" relation="include">
        </childnode>
        <childnode refid="9150" relation="include">
        </childnode>
        <childnode refid="9153" relation="include">
        </childnode>
        <childnode refid="9151" relation="include">
        </childnode>
      </node>
      <node id="9142">
        <label>algorithm</label>
      </node>
      <node id="9120">
        <label>stdio.h</label>
      </node>
      <node id="9145">
        <label>cstring</label>
      </node>
      <node id="9155">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="9118" relation="include">
        </childnode>
        <childnode refid="9138" relation="include">
        </childnode>
        <childnode refid="9143" relation="include">
        </childnode>
        <childnode refid="9125" relation="include">
        </childnode>
        <childnode refid="9156" relation="include">
        </childnode>
        <childnode refid="9137" relation="include">
        </childnode>
        <childnode refid="9152" relation="include">
        </childnode>
      </node>
      <node id="9125">
        <label>memory</label>
      </node>
      <node id="9126">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="9118" relation="include">
        </childnode>
        <childnode refid="9123" relation="include">
        </childnode>
        <childnode refid="9119" relation="include">
        </childnode>
        <childnode refid="9127" relation="include">
        </childnode>
        <childnode refid="9128" relation="include">
        </childnode>
        <childnode refid="9129" relation="include">
        </childnode>
        <childnode refid="9130" relation="include">
        </childnode>
        <childnode refid="9131" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9180">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="9181">
        <label>src/lib/access/MergeJoin.hpp</label>
        <link refid="_merge_join_8hpp"/>
        <childnode refid="9172" relation="include">
        </childnode>
      </node>
      <node id="9182">
        <label>src/lib/access/pred_buildExpression.cpp</label>
        <link refid="pred__build_expression_8cpp"/>
      </node>
      <node id="9176">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="9179">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="9173">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="9177">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="9174">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="9175">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="9172">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="9173" relation="include">
        </childnode>
        <childnode refid="9174" relation="include">
        </childnode>
        <childnode refid="9175" relation="include">
        </childnode>
        <childnode refid="9176" relation="include">
        </childnode>
        <childnode refid="9177" relation="include">
        </childnode>
        <childnode refid="9178" relation="include">
        </childnode>
        <childnode refid="9179" relation="include">
        </childnode>
        <childnode refid="9180" relation="include">
        </childnode>
      </node>
      <node id="9169">
        <label>src/lib/access/predicates.h</label>
        <link refid="predicates_8h"/>
        <childnode refid="9170" relation="include">
        </childnode>
        <childnode refid="9181" relation="include">
        </childnode>
        <childnode refid="9182" relation="include">
        </childnode>
        <childnode refid="9183" relation="include">
        </childnode>
        <childnode refid="9172" relation="include">
        </childnode>
      </node>
      <node id="9168">
        <label>src/lib/access/pred_MultiTableBetweenExpression.h</label>
        <link refid="pred_MultiTableBetweenExpression.h"/>
        <childnode refid="9169" relation="include">
        </childnode>
      </node>
      <node id="9178">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="9170">
        <label>src/lib/access/JoinScan.h</label>
        <link refid="_join_scan_8h"/>
        <childnode refid="9171" relation="include">
        </childnode>
        <childnode refid="9172" relation="include">
        </childnode>
      </node>
      <node id="9171">
        <label>src/lib/access/JoinScan.cpp</label>
        <link refid="lib_2access_2_join_scan_8cpp"/>
      </node>
      <node id="9183">
        <label>src/lib/access/pred_expression_factory.h</label>
        <link refid="pred__expression__factory_8h"/>
        <childnode refid="9182" relation="include">
        </childnode>
        <childnode refid="9169" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_multi_table_between_expression" prot="public">MultiTableBetweenExpression</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_ACCESS_PRED_MULTITABLEBETWEENEXPRESSION_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_ACCESS_PRED_MULTITABLEBETWEENEXPRESSION_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pred__common_8h" kindref="compound">pred_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="8" refid="class_multi_table_between_expression" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_multi_table_between_expression" kindref="compound">MultiTableBetweenExpression</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref><sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_multi_table_between_expression_1ac1754ed1db4ca932715ea1c95b762a2a" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_multi_table_between_expression_1ac1754ed1db4ca932715ea1c95b762a2a" kindref="member">lower_value</ref>;</highlight></codeline>
<codeline lineno="13" refid="class_multi_table_between_expression_1ad7fdc17d5c3db963cff3f30a49cf7c44" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_multi_table_between_expression_1ad7fdc17d5c3db963cff3f30a49cf7c44" kindref="member">upper_value</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_multi_table_between_expression_1ad43dc5ea94d8f633382e05b9421364c0" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;ValueId&gt;<sp/><ref refid="class_multi_table_between_expression_1ad43dc5ea94d8f633382e05b9421364c0" kindref="member">lids</ref>;</highlight></codeline>
<codeline lineno="16" refid="class_multi_table_between_expression_1a48134f5821645cbb91f78e7ce48308b4" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;ValueId&gt;<sp/><ref refid="class_multi_table_between_expression_1a48134f5821645cbb91f78e7ce48308b4" kindref="member">uids</ref>;</highlight></codeline>
<codeline lineno="17" refid="class_multi_table_between_expression_1a76ebaaf4d67eccce2fb563f355af9470" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;<sp/><ref refid="class_multi_table_between_expression_1a76ebaaf4d67eccce2fb563f355af9470" kindref="member">has_lvid</ref>;</highlight></codeline>
<codeline lineno="18" refid="class_multi_table_between_expression_1a116c5bb89fa5486ee42a3d13b991b271" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;<sp/><ref refid="class_multi_table_between_expression_1a116c5bb89fa5486ee42a3d13b991b271" kindref="member">has_uvid</ref>;</highlight></codeline>
<codeline lineno="19" refid="class_multi_table_between_expression_1ae6a7f14e441b22f67bf659591447c34e" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;<sp/><ref refid="class_multi_table_between_expression_1ae6a7f14e441b22f67bf659591447c34e" kindref="member">_sorteds</ref>;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_multi_table_between_expression_1a0293fc439cd231a450197702254501f7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_multi_table_between_expression_1a0293fc439cd231a450197702254501f7" kindref="member">MultiTableBetweenExpression</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>_field,<sp/>T<sp/>_lower_value,<sp/>T<sp/>_upper_value):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(i,<sp/>_field),<sp/><ref refid="class_multi_table_between_expression_1ac1754ed1db4ca932715ea1c95b762a2a" kindref="member">lower_value</ref>(_lower_value),<sp/><ref refid="class_multi_table_between_expression_1ad7fdc17d5c3db963cff3f30a49cf7c44" kindref="member">upper_value</ref>(_upper_value)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_multi_table_between_expression_1af1ded2a6227468a4f959d9bb384b3d80" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_multi_table_between_expression_1a0293fc439cd231a450197702254501f7" kindref="member">MultiTableBetweenExpression</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="storage__types_8h_1ad64b8c8026a86f643d173acbb694b4f8" kindref="member">field_name_t</ref><sp/>_field,<sp/>T<sp/>_lower_value,<sp/>T<sp/>_upper_value):</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(i,<sp/>_field),<sp/><ref refid="class_multi_table_between_expression_1ac1754ed1db4ca932715ea1c95b762a2a" kindref="member">lower_value</ref>(_lower_value),<sp/><ref refid="class_multi_table_between_expression_1ad7fdc17d5c3db963cff3f30a49cf7c44" kindref="member">upper_value</ref>(_upper_value)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_multi_table_between_expression_1a5c8ff678c1a66c65cd770bc96f3ed2d8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_multi_table_between_expression_1a0293fc439cd231a450197702254501f7" kindref="member">MultiTableBetweenExpression</ref>(<ref refid="namespacehyrise_1_1storage_1a15bf8f029e789356b9d72cd53e9973ec" kindref="member">hyrise::storage::c_store_ptr_t</ref><sp/>_table,<sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>_field,<sp/>T<sp/>_lower_value,<sp/>T<sp/>_upper_value):</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(std::dynamic_pointer_cast&lt;const<sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>&gt;(_table),<sp/>_field),<sp/><ref refid="class_multi_table_between_expression_1ac1754ed1db4ca932715ea1c95b762a2a" kindref="member">lower_value</ref>(_lower_value),<sp/><ref refid="class_multi_table_between_expression_1ad7fdc17d5c3db963cff3f30a49cf7c44" kindref="member">upper_value</ref>(_upper_value)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_multi_table_between_expression_1a6c0ca55dfbeee78f4eb033f56ad2fc07" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_multi_table_between_expression_1a6c0ca55dfbeee78f4eb033f56ad2fc07" kindref="member">walk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;l)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1a6c0ca55dfbeee78f4eb033f56ad2fc07" kindref="member">SimpleFieldExpression::walk</ref>(l);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>subtables<sp/>=<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;subtableCount();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1ae6a7f14e441b22f67bf659591447c34e" kindref="member">_sorteds</ref>.assign(subtables,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reserve<sp/>the<sp/>values<sp/>for<sp/>the<sp/>value<sp/>id<sp/>and<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>vid;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1ad43dc5ea94d8f633382e05b9421364c0" kindref="member">lids</ref>.assign(subtables,<sp/>vid);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1a48134f5821645cbb91f78e7ce48308b4" kindref="member">uids</ref>.assign(subtables,<sp/>vid);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1a76ebaaf4d67eccce2fb563f355af9470" kindref="member">has_lvid</ref>.assign(subtables,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1a116c5bb89fa5486ee42a3d13b991b271" kindref="member">has_uvid</ref>.assign(subtables,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>subtables;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1ae6a7f14e441b22f67bf659591447c34e" kindref="member">_sorteds</ref>[i]<sp/>=<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;dictionaryByTableId(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/>i)-&gt;isOrdered();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;valueExists(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/><ref refid="class_multi_table_between_expression_1ac1754ed1db4ca932715ea1c95b762a2a" kindref="member">lower_value</ref>,<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1ad43dc5ea94d8f633382e05b9421364c0" kindref="member">lids</ref>[i]<sp/>=<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;getValueIdForValueByTableId(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/><ref refid="class_multi_table_between_expression_1ac1754ed1db4ca932715ea1c95b762a2a" kindref="member">lower_value</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1a76ebaaf4d67eccce2fb563f355af9470" kindref="member">has_lvid</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_multi_table_between_expression_1ae6a7f14e441b22f67bf659591447c34e" kindref="member">_sorteds</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>value<sp/>does<sp/>not<sp/>exist<sp/>we<sp/>have<sp/>to<sp/>find<sp/>the<sp/>first<sp/>value<sp/>smaller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>v2;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_base_dictionary" kindref="compound">BaseDictionary&lt;T&gt;</ref>&gt;(<ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;dictionaryByTableId(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/>i))-&gt;getValueIdForValueSmaller(<ref refid="class_multi_table_between_expression_1ac1754ed1db4ca932715ea1c95b762a2a" kindref="member">lower_value</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1ad43dc5ea94d8f633382e05b9421364c0" kindref="member">lids</ref>[i]<sp/>=<sp/>v2;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;valueExists(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/><ref refid="class_multi_table_between_expression_1ad7fdc17d5c3db963cff3f30a49cf7c44" kindref="member">upper_value</ref>,<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1a48134f5821645cbb91f78e7ce48308b4" kindref="member">uids</ref>[i]<sp/>=<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;getValueIdForValueByTableId(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/><ref refid="class_multi_table_between_expression_1ad7fdc17d5c3db963cff3f30a49cf7c44" kindref="member">upper_value</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1a116c5bb89fa5486ee42a3d13b991b271" kindref="member">has_uvid</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_multi_table_between_expression_1ae6a7f14e441b22f67bf659591447c34e" kindref="member">_sorteds</ref>[i])<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>value<sp/>does<sp/>not<sp/>exist<sp/>we<sp/>have<sp/>to<sp/>find<sp/>the<sp/>first<sp/>value<sp/>smaller</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>v2;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_base_dictionary" kindref="compound">BaseDictionary&lt;T&gt;</ref>&gt;(<ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;dictionaryByTableId(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/>i))-&gt;getValueIdForValueSmaller(<ref refid="class_multi_table_between_expression_1ad7fdc17d5c3db963cff3f30a49cf7c44" kindref="member">upper_value</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_table_between_expression_1a48134f5821645cbb91f78e7ce48308b4" kindref="member">uids</ref>[i]<sp/>=<sp/>v2;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_multi_table_between_expression_1a6385fb0eaab29522e271c183f642075b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_multi_table_between_expression_1a6385fb0eaab29522e271c183f642075b" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>v<sp/>=<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;getValueId(this-&gt;<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/>row);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_multi_table_between_expression_1ae6a7f14e441b22f67bf659591447c34e" kindref="member">_sorteds</ref>[v.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>])<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>tt<sp/>=<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;getValueForValueId&lt;T&gt;(this-&gt;<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/>v);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tt<sp/>&gt;<sp/>this-&gt;<ref refid="class_multi_table_between_expression_1ac1754ed1db4ca932715ea1c95b762a2a" kindref="member">lower_value</ref><sp/>&amp;&amp;<sp/>tt<sp/>&lt;<sp/>this-&gt;<ref refid="class_multi_table_between_expression_1ad7fdc17d5c3db963cff3f30a49cf7c44" kindref="member">upper_value</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="class_multi_table_between_expression_1a76ebaaf4d67eccce2fb563f355af9470" kindref="member">has_lvid</ref>[v.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>]<sp/>&amp;&amp;<sp/>this-&gt;has_uvid[v.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>]<sp/>&amp;&amp;<sp/>v.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>&gt;<sp/>this-&gt;lids[v.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>].valueId<sp/>&amp;&amp;<sp/>v.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>&lt;<sp/>this-&gt;uids[v.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>].valueId)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;<ref refid="class_multi_table_between_expression_1a76ebaaf4d67eccce2fb563f355af9470" kindref="member">has_lvid</ref>[v.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>]<sp/>&amp;&amp;<sp/>!this-&gt;has_uvid[v.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>]<sp/>&amp;&amp;<sp/>v.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>&gt;=<sp/>this-&gt;lids[v.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>].valueId<sp/>&amp;&amp;<sp/>v.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>&lt;=<sp/>this-&gt;uids[v.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>].valueId)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_ACCESS_PRED_MULTITABLEBETWEENEXPRESSION_H_</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/access/pred_MultiTableBetweenExpression.h"/>
  </compounddef>
</doxygen>
