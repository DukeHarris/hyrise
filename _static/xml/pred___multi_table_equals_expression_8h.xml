<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="pred___multi_table_equals_expression_8h" kind="file">
    <compoundname>pred_MultiTableEqualsExpression.h</compoundname>
    <includes refid="pred__common_8h" local="yes">pred_common.h</includes>
    <includedby refid="predicates_8h" local="yes">src/lib/access/predicates.h</includedby>
    <incdepgraph>
      <node id="9211">
        <label>list</label>
      </node>
      <node id="9197">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="9192">
        <label>limits</label>
      </node>
      <node id="9229">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="9205">
        <label>assert.h</label>
      </node>
      <node id="9199">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="9220">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="9190">
        <label>cstdint</label>
      </node>
      <node id="9230">
        <label>expression_types.h</label>
        <link refid="expression__types_8h"/>
        <childnode refid="9226" relation="include">
        </childnode>
        <childnode refid="9191" relation="include">
        </childnode>
        <childnode refid="9231" relation="include">
        </childnode>
      </node>
      <node id="9217">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="9194" relation="include">
        </childnode>
        <childnode refid="9207" relation="include">
        </childnode>
        <childnode refid="9218" relation="include">
        </childnode>
      </node>
      <node id="9195">
        <label>stdint.h</label>
      </node>
      <node id="9216">
        <label>stdlib.h</label>
      </node>
      <node id="9215">
        <label>errno.h</label>
      </node>
      <node id="9187">
        <label>stdexcept</label>
      </node>
      <node id="9191">
        <label>string</label>
      </node>
      <node id="9185">
        <label>pred_common.h</label>
        <link refid="pred__common_8h"/>
        <childnode refid="9186" relation="include">
        </childnode>
        <childnode refid="9187" relation="include">
        </childnode>
        <childnode refid="9188" relation="include">
        </childnode>
        <childnode refid="9189" relation="include">
        </childnode>
        <childnode refid="9194" relation="include">
        </childnode>
        <childnode refid="9200" relation="include">
        </childnode>
        <childnode refid="9203" relation="include">
        </childnode>
        <childnode refid="9230" relation="include">
        </childnode>
        <childnode refid="9232" relation="include">
        </childnode>
        <childnode refid="9233" relation="include">
        </childnode>
        <childnode refid="9235" relation="include">
        </childnode>
      </node>
      <node id="9226">
        <label>map</label>
      </node>
      <node id="9203">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="9204" relation="include">
        </childnode>
        <childnode refid="9222" relation="include">
        </childnode>
      </node>
      <node id="9214">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="9215" relation="include">
        </childnode>
        <childnode refid="9188" relation="include">
        </childnode>
        <childnode refid="9216" relation="include">
        </childnode>
      </node>
      <node id="9225">
        <label>exception</label>
      </node>
      <node id="9209">
        <label>stddef.h</label>
      </node>
      <node id="9222">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="9194" relation="include">
        </childnode>
        <childnode refid="9207" relation="include">
        </childnode>
        <childnode refid="9217" relation="include">
        </childnode>
        <childnode refid="9218" relation="include">
        </childnode>
        <childnode refid="9223" relation="include">
        </childnode>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9225" relation="include">
        </childnode>
        <childnode refid="9186" relation="include">
        </childnode>
        <childnode refid="9226" relation="include">
        </childnode>
        <childnode refid="9193" relation="include">
        </childnode>
        <childnode refid="9227" relation="include">
        </childnode>
        <childnode refid="9228" relation="include">
        </childnode>
        <childnode refid="9229" relation="include">
        </childnode>
      </node>
      <node id="9196">
        <label>ostream</label>
      </node>
      <node id="9231">
        <label>json.h</label>
      </node>
      <node id="9227">
        <label>limits.h</label>
      </node>
      <node id="9218">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="9219" relation="include">
        </childnode>
        <childnode refid="9220" relation="include">
        </childnode>
      </node>
      <node id="9207">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="9186" relation="include">
        </childnode>
        <childnode refid="9191" relation="include">
        </childnode>
        <childnode refid="9193" relation="include">
        </childnode>
        <childnode refid="9208" relation="include">
        </childnode>
        <childnode refid="9212" relation="include">
        </childnode>
        <childnode refid="9214" relation="include">
        </childnode>
        <childnode refid="9194" relation="include">
        </childnode>
      </node>
      <node id="9234">
        <label>access/AbstractExpression.h</label>
        <link refid="_abstract_expression_8h"/>
        <childnode refid="9186" relation="include">
        </childnode>
        <childnode refid="9189" relation="include">
        </childnode>
      </node>
      <node id="9224">
        <label>string.h</label>
      </node>
      <node id="9200">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="9192" relation="include">
        </childnode>
        <childnode refid="9193" relation="include">
        </childnode>
        <childnode refid="9187" relation="include">
        </childnode>
        <childnode refid="9186" relation="include">
        </childnode>
        <childnode refid="9191" relation="include">
        </childnode>
        <childnode refid="9189" relation="include">
        </childnode>
        <childnode refid="9201" relation="include">
        </childnode>
        <childnode refid="9194" relation="include">
        </childnode>
        <childnode refid="9202" relation="include">
        </childnode>
        <childnode refid="9203" relation="include">
        </childnode>
      </node>
      <node id="9201">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="9228">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="9186">
        <label>vector</label>
      </node>
      <node id="9232">
        <label>join_predicates.h</label>
        <link refid="join__predicates_8h"/>
        <childnode refid="9189" relation="include">
        </childnode>
        <childnode refid="9230" relation="include">
        </childnode>
      </node>
      <node id="9189">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="9190" relation="include">
        </childnode>
        <childnode refid="9191" relation="include">
        </childnode>
        <childnode refid="9192" relation="include">
        </childnode>
        <childnode refid="9193" relation="include">
        </childnode>
        <childnode refid="9186" relation="include">
        </childnode>
      </node>
      <node id="9233">
        <label>pred_SimpleExpression.h</label>
        <link refid="pred___simple_expression_8h"/>
        <childnode refid="9194" relation="include">
        </childnode>
        <childnode refid="9189" relation="include">
        </childnode>
        <childnode refid="9234" relation="include">
        </childnode>
      </node>
      <node id="9219">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="9208">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="9209" relation="include">
        </childnode>
        <childnode refid="9210" relation="include">
        </childnode>
        <childnode refid="9211" relation="include">
        </childnode>
        <childnode refid="9187" relation="include">
        </childnode>
      </node>
      <node id="9206">
        <label>iostream</label>
      </node>
      <node id="9202">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="9194" relation="include">
        </childnode>
        <childnode refid="9191" relation="include">
        </childnode>
        <childnode refid="9187" relation="include">
        </childnode>
      </node>
      <node id="9184">
        <label>src/lib/access/pred_MultiTableEqualsExpression.h</label>
        <link refid="pred_MultiTableEqualsExpression.h"/>
        <childnode refid="9185" relation="include">
        </childnode>
      </node>
      <node id="9198">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="9221">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="9212">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="9206" relation="include">
        </childnode>
        <childnode refid="9190" relation="include">
        </childnode>
        <childnode refid="9213" relation="include">
        </childnode>
      </node>
      <node id="9235">
        <label>pred_SimpleFieldExpression.h</label>
        <link refid="pred___simple_field_expression_8h"/>
        <childnode refid="9189" relation="include">
        </childnode>
        <childnode refid="9185" relation="include">
        </childnode>
      </node>
      <node id="9204">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="9205" relation="include">
        </childnode>
        <childnode refid="9206" relation="include">
        </childnode>
        <childnode refid="9193" relation="include">
        </childnode>
        <childnode refid="9194" relation="include">
        </childnode>
        <childnode refid="9207" relation="include">
        </childnode>
        <childnode refid="9217" relation="include">
        </childnode>
        <childnode refid="9218" relation="include">
        </childnode>
        <childnode refid="9221" relation="include">
        </childnode>
        <childnode refid="9219" relation="include">
        </childnode>
      </node>
      <node id="9210">
        <label>algorithm</label>
      </node>
      <node id="9188">
        <label>stdio.h</label>
      </node>
      <node id="9213">
        <label>cstring</label>
      </node>
      <node id="9223">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="9186" relation="include">
        </childnode>
        <childnode refid="9206" relation="include">
        </childnode>
        <childnode refid="9211" relation="include">
        </childnode>
        <childnode refid="9193" relation="include">
        </childnode>
        <childnode refid="9224" relation="include">
        </childnode>
        <childnode refid="9205" relation="include">
        </childnode>
        <childnode refid="9220" relation="include">
        </childnode>
      </node>
      <node id="9193">
        <label>memory</label>
      </node>
      <node id="9194">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="9186" relation="include">
        </childnode>
        <childnode refid="9191" relation="include">
        </childnode>
        <childnode refid="9187" relation="include">
        </childnode>
        <childnode refid="9195" relation="include">
        </childnode>
        <childnode refid="9196" relation="include">
        </childnode>
        <childnode refid="9197" relation="include">
        </childnode>
        <childnode refid="9198" relation="include">
        </childnode>
        <childnode refid="9199" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9248">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="9249">
        <label>src/lib/access/MergeJoin.hpp</label>
        <link refid="_merge_join_8hpp"/>
        <childnode refid="9240" relation="include">
        </childnode>
      </node>
      <node id="9250">
        <label>src/lib/access/pred_buildExpression.cpp</label>
        <link refid="pred__build_expression_8cpp"/>
      </node>
      <node id="9244">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="9247">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="9241">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="9245">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="9242">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="9243">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="9240">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="9241" relation="include">
        </childnode>
        <childnode refid="9242" relation="include">
        </childnode>
        <childnode refid="9243" relation="include">
        </childnode>
        <childnode refid="9244" relation="include">
        </childnode>
        <childnode refid="9245" relation="include">
        </childnode>
        <childnode refid="9246" relation="include">
        </childnode>
        <childnode refid="9247" relation="include">
        </childnode>
        <childnode refid="9248" relation="include">
        </childnode>
      </node>
      <node id="9237">
        <label>src/lib/access/predicates.h</label>
        <link refid="predicates_8h"/>
        <childnode refid="9238" relation="include">
        </childnode>
        <childnode refid="9249" relation="include">
        </childnode>
        <childnode refid="9250" relation="include">
        </childnode>
        <childnode refid="9251" relation="include">
        </childnode>
        <childnode refid="9240" relation="include">
        </childnode>
      </node>
      <node id="9236">
        <label>src/lib/access/pred_MultiTableEqualsExpression.h</label>
        <link refid="pred_MultiTableEqualsExpression.h"/>
        <childnode refid="9237" relation="include">
        </childnode>
      </node>
      <node id="9246">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="9238">
        <label>src/lib/access/JoinScan.h</label>
        <link refid="_join_scan_8h"/>
        <childnode refid="9239" relation="include">
        </childnode>
        <childnode refid="9240" relation="include">
        </childnode>
      </node>
      <node id="9239">
        <label>src/lib/access/JoinScan.cpp</label>
        <link refid="lib_2access_2_join_scan_8cpp"/>
      </node>
      <node id="9251">
        <label>src/lib/access/pred_expression_factory.h</label>
        <link refid="pred__expression__factory_8h"/>
        <childnode refid="9250" relation="include">
        </childnode>
        <childnode refid="9237" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_multi_table_equals_expression" prot="public">MultiTableEqualsExpression</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_ACCESS_PRED_MULTITABLEEQUALSEXPRESSION_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_ACCESS_PRED_MULTITABLEEQUALSEXPRESSION_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pred__common_8h" kindref="compound">pred_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Simple<sp/>Template<sp/>for<sp/>equals<sp/>expression<sp/>with<sp/>multiple<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="9" refid="class_multi_table_equals_expression" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_multi_table_equals_expression" kindref="compound">MultiTableEqualsExpression</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_multi_table_equals_expression_1a7957d3e894ada9868dbe884771449aff" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;ValueId&gt;<sp/><ref refid="class_multi_table_equals_expression_1a7957d3e894ada9868dbe884771449aff" kindref="member">ids</ref>;</highlight></codeline>
<codeline lineno="13" refid="class_multi_table_equals_expression_1af14cb7276c60d3d1dde022bebea39ba3" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;<sp/><ref refid="class_multi_table_equals_expression_1af14cb7276c60d3d1dde022bebea39ba3" kindref="member">has_vid</ref>;</highlight></codeline>
<codeline lineno="14" refid="class_multi_table_equals_expression_1a16dc59ccd1478ad8e6d8ca230fb638c1" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_multi_table_equals_expression_1a16dc59ccd1478ad8e6d8ca230fb638c1" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="15" refid="class_multi_table_equals_expression_1a3fac88c499a86b3dcc6266b40d8a9a12" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_multi_table_equals_expression_1a3fac88c499a86b3dcc6266b40d8a9a12" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_multi_table_equals_expression_1a6a287bf88a1299010ab8aa2a8bd1dc1b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_multi_table_equals_expression_1a6a287bf88a1299010ab8aa2a8bd1dc1b" kindref="member">MultiTableEqualsExpression</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_input,<sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>_field,<sp/>T<sp/>_value):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(_input,<sp/>_field),<sp/><ref refid="class_multi_table_equals_expression_1a16dc59ccd1478ad8e6d8ca230fb638c1" kindref="member">value</ref>(_value)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_multi_table_equals_expression_1a9620897703541a02ddfaa12ed002d446" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_multi_table_equals_expression_1a6a287bf88a1299010ab8aa2a8bd1dc1b" kindref="member">MultiTableEqualsExpression</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>_input,<sp/><ref refid="storage__types_8h_1ad64b8c8026a86f643d173acbb694b4f8" kindref="member">field_name_t</ref><sp/>_field,<sp/>T<sp/>_value):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(_input,<sp/>_field),<sp/><ref refid="class_multi_table_equals_expression_1a16dc59ccd1478ad8e6d8ca230fb638c1" kindref="member">value</ref>(_value)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="class_multi_table_equals_expression_1a7ab78c0a52af6b33be7d47d6535f595f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_multi_table_equals_expression_1a6a287bf88a1299010ab8aa2a8bd1dc1b" kindref="member">MultiTableEqualsExpression</ref>(<ref refid="namespacehyrise_1_1storage_1a15bf8f029e789356b9d72cd53e9973ec" kindref="member">hyrise::storage::c_store_ptr_t</ref><sp/>_table,<sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>_field,<sp/>T<sp/>_value)<sp/>:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(std::dynamic_pointer_cast&lt;const<sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>&gt;(_table),<sp/>_field),<sp/><ref refid="class_multi_table_equals_expression_1a16dc59ccd1478ad8e6d8ca230fb638c1" kindref="member">value</ref>(_value)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_multi_table_equals_expression_1a42a037c29a4318643351f79545d93c49" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_multi_table_equals_expression_1a42a037c29a4318643351f79545d93c49" kindref="member">walk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;l)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_table_equals_expression_1a42a037c29a4318643351f79545d93c49" kindref="member">SimpleFieldExpression::walk</ref>(l);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>According<sp/>to<sp/>the<sp/>number<sp/>of<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>subtables<sp/>=<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;subtableCount();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reserve<sp/>the<sp/>values<sp/>for<sp/>the<sp/>value<sp/>id<sp/>and<sp/>for<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bool<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>vid;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_table_equals_expression_1a7957d3e894ada9868dbe884771449aff" kindref="member">ids</ref>.assign(subtables,<sp/>vid);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_multi_table_equals_expression_1af14cb7276c60d3d1dde022bebea39ba3" kindref="member">has_vid</ref>.assign(subtables,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>subtables;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;valueExists(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/><ref refid="class_multi_table_equals_expression_1a16dc59ccd1478ad8e6d8ca230fb638c1" kindref="member">value</ref>,<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_table_equals_expression_1a7957d3e894ada9868dbe884771449aff" kindref="member">ids</ref>[i]<sp/>=<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;getValueIdForValueByTableId(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/><ref refid="class_multi_table_equals_expression_1a16dc59ccd1478ad8e6d8ca230fb638c1" kindref="member">value</ref>,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_multi_table_equals_expression_1af14cb7276c60d3d1dde022bebea39ba3" kindref="member">has_vid</ref>[i]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_multi_table_equals_expression_1a44e7bdaabfddb6175def5e08e5999ea7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_multi_table_equals_expression_1a44e7bdaabfddb6175def5e08e5999ea7" kindref="member">~MultiTableEqualsExpression</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_multi_table_equals_expression_1a42e96351a4a3f3e1a7466d51a15e89be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_multi_table_equals_expression_1a42e96351a4a3f3e1a7466d51a15e89be" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>v<sp/>=<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;getValueId(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/>row);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_multi_table_equals_expression_1af14cb7276c60d3d1dde022bebea39ba3" kindref="member">has_vid</ref>[v.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>]<sp/>&amp;&amp;<sp/><ref refid="class_multi_table_equals_expression_1a7957d3e894ada9868dbe884771449aff" kindref="member">ids</ref>[v.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>].valueId<sp/>==<sp/>v.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_ACCESS_PRED_MULTITABLEEQUALSEXPRESSION_H_</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/access/pred_MultiTableEqualsExpression.h"/>
  </compounddef>
</doxygen>
