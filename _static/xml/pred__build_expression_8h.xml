<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="pred__build_expression_8h" kind="file">
    <compoundname>pred_buildExpression.h</compoundname>
    <includes refid="pred__common_8h" local="yes">pred_common.h</includes>
    <includedby refid="pred__build_expression_8cpp" local="yes">src/lib/access/pred_buildExpression.cpp</includedby>
    <includedby refid="predicates_8h" local="yes">src/lib/access/predicates.h</includedby>
    <includedby refid="_simple_raw_table_scan_8cpp" local="yes">src/lib/access/SimpleRawTableScan.cpp</includedby>
    <includedby refid="lib_2access_2_simple_table_scan_8cpp" local="yes">src/lib/access/SimpleTableScan.cpp</includedby>
    <incdepgraph>
      <node id="8623">
        <label>list</label>
      </node>
      <node id="8609">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="8604">
        <label>limits</label>
      </node>
      <node id="8641">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="8617">
        <label>assert.h</label>
      </node>
      <node id="8611">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="8632">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="8602">
        <label>cstdint</label>
      </node>
      <node id="8642">
        <label>expression_types.h</label>
        <link refid="expression__types_8h"/>
        <childnode refid="8638" relation="include">
        </childnode>
        <childnode refid="8603" relation="include">
        </childnode>
        <childnode refid="8643" relation="include">
        </childnode>
      </node>
      <node id="8629">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="8606" relation="include">
        </childnode>
        <childnode refid="8619" relation="include">
        </childnode>
        <childnode refid="8630" relation="include">
        </childnode>
      </node>
      <node id="8607">
        <label>stdint.h</label>
      </node>
      <node id="8628">
        <label>stdlib.h</label>
      </node>
      <node id="8627">
        <label>errno.h</label>
      </node>
      <node id="8599">
        <label>stdexcept</label>
      </node>
      <node id="8596">
        <label>src/lib/access/pred_buildExpression.h</label>
        <link refid="pred_buildExpression.h"/>
        <childnode refid="8597" relation="include">
        </childnode>
      </node>
      <node id="8603">
        <label>string</label>
      </node>
      <node id="8597">
        <label>pred_common.h</label>
        <link refid="pred__common_8h"/>
        <childnode refid="8598" relation="include">
        </childnode>
        <childnode refid="8599" relation="include">
        </childnode>
        <childnode refid="8600" relation="include">
        </childnode>
        <childnode refid="8601" relation="include">
        </childnode>
        <childnode refid="8606" relation="include">
        </childnode>
        <childnode refid="8612" relation="include">
        </childnode>
        <childnode refid="8615" relation="include">
        </childnode>
        <childnode refid="8642" relation="include">
        </childnode>
        <childnode refid="8644" relation="include">
        </childnode>
        <childnode refid="8645" relation="include">
        </childnode>
        <childnode refid="8647" relation="include">
        </childnode>
      </node>
      <node id="8638">
        <label>map</label>
      </node>
      <node id="8615">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="8616" relation="include">
        </childnode>
        <childnode refid="8634" relation="include">
        </childnode>
      </node>
      <node id="8626">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="8627" relation="include">
        </childnode>
        <childnode refid="8600" relation="include">
        </childnode>
        <childnode refid="8628" relation="include">
        </childnode>
      </node>
      <node id="8637">
        <label>exception</label>
      </node>
      <node id="8621">
        <label>stddef.h</label>
      </node>
      <node id="8634">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="8606" relation="include">
        </childnode>
        <childnode refid="8619" relation="include">
        </childnode>
        <childnode refid="8629" relation="include">
        </childnode>
        <childnode refid="8630" relation="include">
        </childnode>
        <childnode refid="8635" relation="include">
        </childnode>
        <childnode refid="8633" relation="include">
        </childnode>
        <childnode refid="8637" relation="include">
        </childnode>
        <childnode refid="8598" relation="include">
        </childnode>
        <childnode refid="8638" relation="include">
        </childnode>
        <childnode refid="8605" relation="include">
        </childnode>
        <childnode refid="8639" relation="include">
        </childnode>
        <childnode refid="8640" relation="include">
        </childnode>
        <childnode refid="8641" relation="include">
        </childnode>
      </node>
      <node id="8608">
        <label>ostream</label>
      </node>
      <node id="8643">
        <label>json.h</label>
      </node>
      <node id="8639">
        <label>limits.h</label>
      </node>
      <node id="8630">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="8631" relation="include">
        </childnode>
        <childnode refid="8632" relation="include">
        </childnode>
      </node>
      <node id="8619">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="8598" relation="include">
        </childnode>
        <childnode refid="8603" relation="include">
        </childnode>
        <childnode refid="8605" relation="include">
        </childnode>
        <childnode refid="8620" relation="include">
        </childnode>
        <childnode refid="8624" relation="include">
        </childnode>
        <childnode refid="8626" relation="include">
        </childnode>
        <childnode refid="8606" relation="include">
        </childnode>
      </node>
      <node id="8646">
        <label>access/AbstractExpression.h</label>
        <link refid="_abstract_expression_8h"/>
        <childnode refid="8598" relation="include">
        </childnode>
        <childnode refid="8601" relation="include">
        </childnode>
      </node>
      <node id="8636">
        <label>string.h</label>
      </node>
      <node id="8612">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="8604" relation="include">
        </childnode>
        <childnode refid="8605" relation="include">
        </childnode>
        <childnode refid="8599" relation="include">
        </childnode>
        <childnode refid="8598" relation="include">
        </childnode>
        <childnode refid="8603" relation="include">
        </childnode>
        <childnode refid="8601" relation="include">
        </childnode>
        <childnode refid="8613" relation="include">
        </childnode>
        <childnode refid="8606" relation="include">
        </childnode>
        <childnode refid="8614" relation="include">
        </childnode>
        <childnode refid="8615" relation="include">
        </childnode>
      </node>
      <node id="8613">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="8640">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="8598">
        <label>vector</label>
      </node>
      <node id="8644">
        <label>join_predicates.h</label>
        <link refid="join__predicates_8h"/>
        <childnode refid="8601" relation="include">
        </childnode>
        <childnode refid="8642" relation="include">
        </childnode>
      </node>
      <node id="8601">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="8602" relation="include">
        </childnode>
        <childnode refid="8603" relation="include">
        </childnode>
        <childnode refid="8604" relation="include">
        </childnode>
        <childnode refid="8605" relation="include">
        </childnode>
        <childnode refid="8598" relation="include">
        </childnode>
      </node>
      <node id="8645">
        <label>pred_SimpleExpression.h</label>
        <link refid="pred___simple_expression_8h"/>
        <childnode refid="8606" relation="include">
        </childnode>
        <childnode refid="8601" relation="include">
        </childnode>
        <childnode refid="8646" relation="include">
        </childnode>
      </node>
      <node id="8631">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="8620">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="8621" relation="include">
        </childnode>
        <childnode refid="8622" relation="include">
        </childnode>
        <childnode refid="8623" relation="include">
        </childnode>
        <childnode refid="8599" relation="include">
        </childnode>
      </node>
      <node id="8618">
        <label>iostream</label>
      </node>
      <node id="8614">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="8606" relation="include">
        </childnode>
        <childnode refid="8603" relation="include">
        </childnode>
        <childnode refid="8599" relation="include">
        </childnode>
      </node>
      <node id="8610">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="8633">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="8624">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="8618" relation="include">
        </childnode>
        <childnode refid="8602" relation="include">
        </childnode>
        <childnode refid="8625" relation="include">
        </childnode>
      </node>
      <node id="8647">
        <label>pred_SimpleFieldExpression.h</label>
        <link refid="pred___simple_field_expression_8h"/>
        <childnode refid="8601" relation="include">
        </childnode>
        <childnode refid="8597" relation="include">
        </childnode>
      </node>
      <node id="8616">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="8617" relation="include">
        </childnode>
        <childnode refid="8618" relation="include">
        </childnode>
        <childnode refid="8605" relation="include">
        </childnode>
        <childnode refid="8606" relation="include">
        </childnode>
        <childnode refid="8619" relation="include">
        </childnode>
        <childnode refid="8629" relation="include">
        </childnode>
        <childnode refid="8630" relation="include">
        </childnode>
        <childnode refid="8633" relation="include">
        </childnode>
        <childnode refid="8631" relation="include">
        </childnode>
      </node>
      <node id="8622">
        <label>algorithm</label>
      </node>
      <node id="8600">
        <label>stdio.h</label>
      </node>
      <node id="8625">
        <label>cstring</label>
      </node>
      <node id="8635">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="8598" relation="include">
        </childnode>
        <childnode refid="8618" relation="include">
        </childnode>
        <childnode refid="8623" relation="include">
        </childnode>
        <childnode refid="8605" relation="include">
        </childnode>
        <childnode refid="8636" relation="include">
        </childnode>
        <childnode refid="8617" relation="include">
        </childnode>
        <childnode refid="8632" relation="include">
        </childnode>
      </node>
      <node id="8605">
        <label>memory</label>
      </node>
      <node id="8606">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="8598" relation="include">
        </childnode>
        <childnode refid="8603" relation="include">
        </childnode>
        <childnode refid="8599" relation="include">
        </childnode>
        <childnode refid="8607" relation="include">
        </childnode>
        <childnode refid="8608" relation="include">
        </childnode>
        <childnode refid="8609" relation="include">
        </childnode>
        <childnode refid="8610" relation="include">
        </childnode>
        <childnode refid="8611" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8661">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="8662">
        <label>src/lib/access/MergeJoin.hpp</label>
        <link refid="_merge_join_8hpp"/>
        <childnode refid="8653" relation="include">
        </childnode>
      </node>
      <node id="8649">
        <label>src/lib/access/pred_buildExpression.cpp</label>
        <link refid="pred__build_expression_8cpp"/>
      </node>
      <node id="8648">
        <label>src/lib/access/pred_buildExpression.h</label>
        <link refid="pred_buildExpression.h"/>
        <childnode refid="8649" relation="include">
        </childnode>
        <childnode refid="8650" relation="include">
        </childnode>
        <childnode refid="8664" relation="include">
        </childnode>
        <childnode refid="8665" relation="include">
        </childnode>
      </node>
      <node id="8657">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="8660">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="8654">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="8658">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="8655">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="8664">
        <label>src/lib/access/SimpleRawTableScan.cpp</label>
        <link refid="_simple_raw_table_scan_8cpp"/>
      </node>
      <node id="8656">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="8653">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="8654" relation="include">
        </childnode>
        <childnode refid="8655" relation="include">
        </childnode>
        <childnode refid="8656" relation="include">
        </childnode>
        <childnode refid="8657" relation="include">
        </childnode>
        <childnode refid="8658" relation="include">
        </childnode>
        <childnode refid="8659" relation="include">
        </childnode>
        <childnode refid="8660" relation="include">
        </childnode>
        <childnode refid="8661" relation="include">
        </childnode>
      </node>
      <node id="8650">
        <label>src/lib/access/predicates.h</label>
        <link refid="predicates_8h"/>
        <childnode refid="8651" relation="include">
        </childnode>
        <childnode refid="8662" relation="include">
        </childnode>
        <childnode refid="8649" relation="include">
        </childnode>
        <childnode refid="8663" relation="include">
        </childnode>
        <childnode refid="8653" relation="include">
        </childnode>
      </node>
      <node id="8659">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="8665">
        <label>src/lib/access/SimpleTableScan.cpp</label>
        <link refid="lib_2access_2_simple_table_scan_8cpp"/>
      </node>
      <node id="8651">
        <label>src/lib/access/JoinScan.h</label>
        <link refid="_join_scan_8h"/>
        <childnode refid="8652" relation="include">
        </childnode>
        <childnode refid="8653" relation="include">
        </childnode>
      </node>
      <node id="8652">
        <label>src/lib/access/JoinScan.cpp</label>
        <link refid="lib_2access_2_join_scan_8cpp"/>
      </node>
      <node id="8663">
        <label>src/lib/access/pred_expression_factory.h</label>
        <link refid="pred__expression__factory_8h"/>
        <childnode refid="8649" relation="include">
        </childnode>
        <childnode refid="8650" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_expression_build_error" prot="public">ExpressionBuildError</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="pred__build_expression_8h_1a78db0dff0c30dc4f14e67733ba035780" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref> *</type>
        <definition>SimpleFieldExpression* buildFieldExpression</definition>
        <argsstring>(PredicateType::type, Json::Value &amp;)</argsstring>
        <name>buildFieldExpression</name>
        <param>
          <type><ref refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4" kindref="member">PredicateType::type</ref></type>
        </param>
        <param>
          <type>Json::Value &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/access/pred_buildExpression.h" line="12" bodyfile="/home/grund/hyrise/src/lib/access/pred_buildExpression.cpp" bodystart="12" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="pred__build_expression_8h_1a860b728b80207d8af84fd77e67320f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_simple_expression" kindref="compound">SimpleExpression</ref> *</type>
        <definition>SimpleExpression* buildExpression</definition>
        <argsstring>(Json::Value &amp;)</argsstring>
        <name>buildExpression</name>
        <param>
          <type>Json::Value &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/access/pred_buildExpression.h" line="13" bodyfile="/home/grund/hyrise/src/lib/access/pred_buildExpression.cpp" bodystart="23" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_ACCESS_PRED_BUILDEXPRESSION_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_ACCESS_PRED_BUILDEXPRESSION_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pred__common_8h" kindref="compound">pred_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="class_expression_build_error" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_expression_build_error" kindref="compound">ExpressionBuildError</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="9" refid="class_expression_build_error_1a38aa440787d8ae1c850b0f99438d0680" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_expression_build_error_1a38aa440787d8ae1c850b0f99438d0680" kindref="member">ExpressionBuildError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;what):<sp/>std::runtime_error(what)<sp/>{}</highlight></codeline>
<codeline lineno="10"><highlight class="normal">};</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref><sp/>*<ref refid="pred__build_expression_8cpp_1a25b05497914ea51ff063e411971eff00" kindref="member">buildFieldExpression</ref>(<ref refid="struct_predicate_type_1a826cc813b7b1e81f4ba5b0a15441afa4" kindref="member">PredicateType::type</ref>,<sp/>Json::Value<sp/>&amp;);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><ref refid="class_simple_expression" kindref="compound">SimpleExpression</ref><sp/>*<ref refid="pred__build_expression_8cpp_1adde58ea9cb61f303c996ff1b6e2bf0c9" kindref="member">buildExpression</ref>(Json::Value<sp/>&amp;);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_ACCESS_PRED_BUILDEXPRESSION_H_</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/access/pred_buildExpression.h"/>
  </compounddef>
</doxygen>
