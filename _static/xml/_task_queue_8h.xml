<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_task_queue_8h" kind="file">
    <compoundname>TaskQueue.h</compoundname>
    <includes refid="_task_8h" local="yes">taskscheduler/Task.h</includes>
    <includes refid="_task_queue_8h" local="yes">taskscheduler/TaskQueue.h</includes>
    <includes local="no">thread</includes>
    <includes local="no">queue</includes>
    <includes local="no">mutex</includes>
    <includes local="no">memory</includes>
    <includes local="no">condition_variable</includes>
    <includes local="no">log4cxx/logger.h</includes>
    <includedby refid="_task_queue_8cpp" local="yes">src/lib/taskscheduler/TaskQueue.cpp</includedby>
    <includedby refid="_task_queue_8h" local="yes">src/lib/taskscheduler/TaskQueue.h</includedby>
    <incdepgraph>
      <node id="25534">
        <label>queue</label>
      </node>
      <node id="25532">
        <label>string</label>
      </node>
      <node id="25527">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="25528" relation="include">
        </childnode>
        <childnode refid="25529" relation="include">
        </childnode>
        <childnode refid="25530" relation="include">
        </childnode>
        <childnode refid="25531" relation="include">
        </childnode>
        <childnode refid="25532" relation="include">
        </childnode>
      </node>
      <node id="25531">
        <label>condition_variable</label>
      </node>
      <node id="25528">
        <label>vector</label>
      </node>
      <node id="25529">
        <label>mutex</label>
      </node>
      <node id="25533">
        <label>thread</label>
      </node>
      <node id="25535">
        <label>log4cxx/logger.h</label>
      </node>
      <node id="25530">
        <label>memory</label>
      </node>
      <node id="25526">
        <label>src/lib/taskscheduler/TaskQueue.h</label>
        <link refid="TaskQueue.h"/>
        <childnode refid="25527" relation="include">
        </childnode>
        <childnode refid="25526" relation="include">
        </childnode>
        <childnode refid="25533" relation="include">
        </childnode>
        <childnode refid="25534" relation="include">
        </childnode>
        <childnode refid="25529" relation="include">
        </childnode>
        <childnode refid="25530" relation="include">
        </childnode>
        <childnode refid="25531" relation="include">
        </childnode>
        <childnode refid="25535" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="25537">
        <label>src/lib/taskscheduler/TaskQueue.cpp</label>
        <link refid="_task_queue_8cpp"/>
      </node>
      <node id="25536">
        <label>src/lib/taskscheduler/TaskQueue.h</label>
        <link refid="TaskQueue.h"/>
        <childnode refid="25537" relation="include">
        </childnode>
        <childnode refid="25536" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_task_queue" prot="public">TaskQueue</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959" prot="public" static="no">
        <name>status</name>
        <enumvalue id="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959a439c688a4e9ed31638d5922a50680a8e" prot="public">
          <name>RUN</name>
          <initializer> 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959a05f5ba7b88505582bad86de98ebc94e9" prot="public">
          <name>RUN_UNTIL_DONE</name>
          <initializer> 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959a8f84b662dcde5b78a6b0858d4314f00c" prot="public">
          <name>TO_STOP</name>
          <initializer> 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959a948b2aee15f52b421fa4770c47bcfe8c" prot="public">
          <name>STOPPED</name>
          <initializer> 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/taskscheduler/TaskQueue.h" line="21" bodyfile="/home/grund/hyrise/src/lib/taskscheduler/TaskQueue.h" bodystart="21" bodyend="26"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>TaskQueue.h</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>Feb<sp/>15,<sp/>2012</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Author:<sp/>jwust</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_TASKSCHEDULER_TASKQUEUE_H_</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_TASKSCHEDULER_TASKQUEUE_H_</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_task_8h" kindref="compound">taskscheduler/Task.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_task_queue_8h" kindref="compound">taskscheduler/TaskQueue.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;condition_variable&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;log4cxx/logger.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref><sp/>{</highlight></codeline>
<codeline lineno="22" refid="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959a439c688a4e9ed31638d5922a50680a8e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959a439c688a4e9ed31638d5922a50680a8e" kindref="member">RUN</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="23" refid="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959a05f5ba7b88505582bad86de98ebc94e9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959a05f5ba7b88505582bad86de98ebc94e9" kindref="member">RUN_UNTIL_DONE</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="24" refid="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959a8f84b662dcde5b78a6b0858d4314f00c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959a8f84b662dcde5b78a6b0858d4314f00c" kindref="member">TO_STOP</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="25" refid="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959a948b2aee15f52b421fa4770c47bcfe8c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959a948b2aee15f52b421fa4770c47bcfe8c" kindref="member">STOPPED</ref><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>A<sp/>queue<sp/>with<sp/>a<sp/>dedicated<sp/>worker<sp/>thread;<sp/>used<sp/>by<sp/>SimpleTaskScheduler<sp/>to<sp/>run<sp/>tasks</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_task_queue" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_task_queue" kindref="compound">TaskQueue</ref><sp/>{</highlight></codeline>
<codeline lineno="32" refid="class_task_queue_1a520f9ccec8b6a059af693436811f6506" refkind="member"><highlight class="normal"><sp/><sp/>std::queue&lt;std::shared_ptr&lt;Task&gt;<sp/>&gt;<sp/><ref refid="class_task_queue_1a520f9ccec8b6a059af693436811f6506" kindref="member">_runQueue</ref>;</highlight></codeline>
<codeline lineno="33" refid="class_task_queue_1ae70819edbde21542e764ff9b574dba2c" refkind="member"><highlight class="normal"><sp/><sp/>std::thread<sp/>*<ref refid="class_task_queue_1ae70819edbde21542e764ff9b574dba2c" kindref="member">_thread</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//the<sp/>core<sp/>the<sp/>thread<sp/>should<sp/>run<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_task_queue_1afd512fd77c9206f1be9c726d00b56c3f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_task_queue_1afd512fd77c9206f1be9c726d00b56c3f" kindref="member">_core</ref>;</highlight></codeline>
<codeline lineno="36" refid="class_task_queue_1afedbad0c26166e82065ebc13dfae3818" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_task_queue_1afedbad0c26166e82065ebc13dfae3818" kindref="member">_blocked</ref>;</highlight></codeline>
<codeline lineno="37" refid="class_task_queue_1a3e15edfb262ee392c183d8f4a308adff" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="_task_queue_8h_1a015eb90e0de9f16e87bd149d4b9ce959" kindref="member">status</ref><sp/><ref refid="class_task_queue_1a3e15edfb262ee392c183d8f4a308adff" kindref="member">_status</ref>;</highlight></codeline>
<codeline lineno="38" refid="class_task_queue_1a0d5c41a2b59d100dd31b5300d0df308a" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="class_task_queue_1a0d5c41a2b59d100dd31b5300d0df308a" kindref="member">_queueMutex</ref>;</highlight></codeline>
<codeline lineno="39" refid="class_task_queue_1af824ff28e4a4f775cb930db504d6b588" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="class_task_queue_1af824ff28e4a4f775cb930db504d6b588" kindref="member">_threadStatusMutex</ref>;</highlight></codeline>
<codeline lineno="40" refid="class_task_queue_1a585da29de9236ce30b25f88f9cbf6ca4" refkind="member"><highlight class="normal"><sp/><sp/>std::condition_variable<sp/><ref refid="class_task_queue_1a585da29de9236ce30b25f88f9cbf6ca4" kindref="member">_condition</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_task_queue_1a4958f7e6a24de1fe1f61ce2e19d84624" kindref="member">launchThread</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>core);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="45" refid="class_task_queue_1a58561b1397e43198d24a8189886ecc25" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>log4cxx::LoggerPtr<sp/><ref refid="class_task_queue_1a58561b1397e43198d24a8189886ecc25" kindref="member">logger</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/><sp/><sp/>*<sp/>intializes<sp/>a<sp/>task<sp/>queue<sp/>and<sp/>pins<sp/>created<sp/>thread<sp/>to<sp/>given<sp/>core</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="class_task_queue_1a33f17ef628e07a1e358da7b63e42df58" kindref="member">TaskQueue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>core);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="class_task_queue_1a80e3df38cc5af6574d5b3fa44726caca" kindref="member">~TaskQueue</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/>*<sp/>Is<sp/>executed<sp/>by<sp/>dedicated<sp/>thread<sp/>to<sp/>work<sp/>the<sp/>queue</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_task_queue_1af6f7fec4908b3e2eedbc95764cd03ecf" kindref="member">executeTask</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/><sp/><sp/>*<sp/>push<sp/>a<sp/>new<sp/>task<sp/>to<sp/>the<sp/>queue,<sp/>tasks<sp/>are<sp/>expected<sp/>to<sp/>have<sp/>no<sp/>unmet<sp/>dependencies</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_task_queue_1a3cee861d1e4a9c834c973f7d7f157ac8" kindref="member">push</ref>(std::shared_ptr&lt;Task&gt;<sp/>task);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/>*<sp/>stop<sp/>queue<sp/>and<sp/>return<sp/>remaining<sp/>tasks;<sp/>allows<sp/>resizing<sp/>the<sp/>number<sp/>of<sp/>threads<sp/>used<sp/>by<sp/>a<sp/>task<sp/>pool</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>std::queue&lt;std::shared_ptr&lt;Task&gt;<sp/>&gt;<sp/>*<ref refid="class_task_queue_1a3760fa6b01564a746e7674d2837f8d9d" kindref="member">stopQueue</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>*<sp/>wait<sp/>until<sp/>all<sp/>tasks<sp/>are<sp/>done</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_task_queue_1afed1f7e2fe75d65a2c2aa01f9762862f" kindref="member">join</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//get<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//steal<sp/>task<sp/>(with<sp/>priority)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_task_queue_1ac393d72eb075c68e7e6fcf4c589c3428" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_task_queue_1ac393d72eb075c68e7e6fcf4c589c3428" kindref="member">blocked</ref>()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_task_queue_1afedbad0c26166e82065ebc13dfae3818" kindref="member">_blocked</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_TASKSCHEDULER_TASKQUEUE_H_</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/taskscheduler/TaskQueue.h"/>
  </compounddef>
</doxygen>
