<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_sequential_heap_merger_row_8cpp" kind="file">
    <compoundname>SequentialHeapMergerRow.cpp</compoundname>
    <includes refid="_sequential_heap_merger_row_8h" local="yes">storage/SequentialHeapMergerRow.h</includes>
    <includes local="no">queue</includes>
    <includes refid="storage__types_8h" local="yes">storage/storage_types.h</includes>
    <incdepgraph>
      <node id="21924">
        <label>list</label>
      </node>
      <node id="21917">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="21954">
        <label>queue</label>
      </node>
      <node id="21946">
        <label>limits</label>
      </node>
      <node id="21944">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="21904">
        <label>src/lib/storage/SequentialHeapMergerRow.cpp</label>
        <link refid="SequentialHeapMergerRow.cpp"/>
        <childnode refid="21905" relation="include">
        </childnode>
        <childnode refid="21954" relation="include">
        </childnode>
        <childnode refid="21911" relation="include">
        </childnode>
      </node>
      <node id="21908">
        <label>assert.h</label>
      </node>
      <node id="21919">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="21935">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="21926">
        <label>cstdint</label>
      </node>
      <node id="21932">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="21911" relation="include">
        </childnode>
        <childnode refid="21920" relation="include">
        </childnode>
        <childnode refid="21933" relation="include">
        </childnode>
      </node>
      <node id="21915">
        <label>stdint.h</label>
      </node>
      <node id="21931">
        <label>stdlib.h</label>
      </node>
      <node id="21929">
        <label>errno.h</label>
      </node>
      <node id="21914">
        <label>stdexcept</label>
      </node>
      <node id="21913">
        <label>string</label>
      </node>
      <node id="21941">
        <label>map</label>
      </node>
      <node id="21906">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="21907" relation="include">
        </childnode>
        <childnode refid="21937" relation="include">
        </childnode>
      </node>
      <node id="21928">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="21929" relation="include">
        </childnode>
        <childnode refid="21930" relation="include">
        </childnode>
        <childnode refid="21931" relation="include">
        </childnode>
      </node>
      <node id="21940">
        <label>exception</label>
      </node>
      <node id="21922">
        <label>stddef.h</label>
      </node>
      <node id="21937">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="21911" relation="include">
        </childnode>
        <childnode refid="21920" relation="include">
        </childnode>
        <childnode refid="21932" relation="include">
        </childnode>
        <childnode refid="21933" relation="include">
        </childnode>
        <childnode refid="21938" relation="include">
        </childnode>
        <childnode refid="21936" relation="include">
        </childnode>
        <childnode refid="21940" relation="include">
        </childnode>
        <childnode refid="21912" relation="include">
        </childnode>
        <childnode refid="21941" relation="include">
        </childnode>
        <childnode refid="21910" relation="include">
        </childnode>
        <childnode refid="21942" relation="include">
        </childnode>
        <childnode refid="21943" relation="include">
        </childnode>
        <childnode refid="21944" relation="include">
        </childnode>
      </node>
      <node id="21916">
        <label>ostream</label>
      </node>
      <node id="21942">
        <label>limits.h</label>
      </node>
      <node id="21933">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="21934" relation="include">
        </childnode>
        <childnode refid="21935" relation="include">
        </childnode>
      </node>
      <node id="21920">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="21912" relation="include">
        </childnode>
        <childnode refid="21913" relation="include">
        </childnode>
        <childnode refid="21910" relation="include">
        </childnode>
        <childnode refid="21921" relation="include">
        </childnode>
        <childnode refid="21925" relation="include">
        </childnode>
        <childnode refid="21928" relation="include">
        </childnode>
        <childnode refid="21911" relation="include">
        </childnode>
      </node>
      <node id="21939">
        <label>string.h</label>
      </node>
      <node id="21945">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="21946" relation="include">
        </childnode>
        <childnode refid="21910" relation="include">
        </childnode>
        <childnode refid="21914" relation="include">
        </childnode>
        <childnode refid="21912" relation="include">
        </childnode>
        <childnode refid="21913" relation="include">
        </childnode>
        <childnode refid="21947" relation="include">
        </childnode>
        <childnode refid="21948" relation="include">
        </childnode>
        <childnode refid="21911" relation="include">
        </childnode>
        <childnode refid="21949" relation="include">
        </childnode>
        <childnode refid="21906" relation="include">
        </childnode>
      </node>
      <node id="21948">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="21950">
        <label>storage/AbstractMerger.h</label>
        <link refid="_abstract_merger_8h"/>
        <childnode refid="21912" relation="include">
        </childnode>
        <childnode refid="21951" relation="include">
        </childnode>
        <childnode refid="21947" relation="include">
        </childnode>
        <childnode refid="21945" relation="include">
        </childnode>
        <childnode refid="21952" relation="include">
        </childnode>
      </node>
      <node id="21943">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="21912">
        <label>vector</label>
      </node>
      <node id="21947">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="21926" relation="include">
        </childnode>
        <childnode refid="21913" relation="include">
        </childnode>
        <childnode refid="21946" relation="include">
        </childnode>
        <childnode refid="21910" relation="include">
        </childnode>
        <childnode refid="21912" relation="include">
        </childnode>
      </node>
      <node id="21953">
        <label>storage/DictionaryPosition.h</label>
        <link refid="_dictionary_position_8h"/>
      </node>
      <node id="21934">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="21921">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="21922" relation="include">
        </childnode>
        <childnode refid="21923" relation="include">
        </childnode>
        <childnode refid="21924" relation="include">
        </childnode>
        <childnode refid="21914" relation="include">
        </childnode>
      </node>
      <node id="21909">
        <label>iostream</label>
      </node>
      <node id="21949">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="21911" relation="include">
        </childnode>
        <childnode refid="21913" relation="include">
        </childnode>
        <childnode refid="21914" relation="include">
        </childnode>
      </node>
      <node id="21951">
        <label>unordered_map</label>
      </node>
      <node id="21918">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="21952">
        <label>storage/TableUtils.h</label>
        <link refid="_table_utils_8h"/>
        <childnode refid="21910" relation="include">
        </childnode>
        <childnode refid="21951" relation="include">
        </childnode>
      </node>
      <node id="21936">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="21905">
        <label>storage/SequentialHeapMergerRow.h</label>
        <link refid="_sequential_heap_merger_row_8h"/>
        <childnode refid="21906" relation="include">
        </childnode>
        <childnode refid="21945" relation="include">
        </childnode>
        <childnode refid="21950" relation="include">
        </childnode>
        <childnode refid="21953" relation="include">
        </childnode>
      </node>
      <node id="21925">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="21909" relation="include">
        </childnode>
        <childnode refid="21926" relation="include">
        </childnode>
        <childnode refid="21927" relation="include">
        </childnode>
      </node>
      <node id="21907">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="21908" relation="include">
        </childnode>
        <childnode refid="21909" relation="include">
        </childnode>
        <childnode refid="21910" relation="include">
        </childnode>
        <childnode refid="21911" relation="include">
        </childnode>
        <childnode refid="21920" relation="include">
        </childnode>
        <childnode refid="21932" relation="include">
        </childnode>
        <childnode refid="21933" relation="include">
        </childnode>
        <childnode refid="21936" relation="include">
        </childnode>
        <childnode refid="21934" relation="include">
        </childnode>
      </node>
      <node id="21923">
        <label>algorithm</label>
      </node>
      <node id="21930">
        <label>stdio.h</label>
      </node>
      <node id="21927">
        <label>cstring</label>
      </node>
      <node id="21938">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="21912" relation="include">
        </childnode>
        <childnode refid="21909" relation="include">
        </childnode>
        <childnode refid="21924" relation="include">
        </childnode>
        <childnode refid="21910" relation="include">
        </childnode>
        <childnode refid="21939" relation="include">
        </childnode>
        <childnode refid="21908" relation="include">
        </childnode>
        <childnode refid="21935" relation="include">
        </childnode>
      </node>
      <node id="21910">
        <label>memory</label>
      </node>
      <node id="21911">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="21912" relation="include">
        </childnode>
        <childnode refid="21913" relation="include">
        </childnode>
        <childnode refid="21914" relation="include">
        </childnode>
        <childnode refid="21915" relation="include">
        </childnode>
        <childnode refid="21916" relation="include">
        </childnode>
        <childnode refid="21917" relation="include">
        </childnode>
        <childnode refid="21918" relation="include">
        </childnode>
        <childnode refid="21919" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sequential_heap_merger_row_8h" kindref="compound">storage/SequentialHeapMergerRow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="storage__types_8h" kindref="compound">storage/storage_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="class_sequential_heap_merger_row_1a6a5ceefaa91b0da3645189f641358bd4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sequential_heap_merger_row_1a6a5ceefaa91b0da3645189f641358bd4" kindref="member">SequentialHeapMergerRow::mergeValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;input_tables,<sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>merged_table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a8addaea8b5301cc30c8f8f634b531127" kindref="member">hyrise::storage::column_mapping_t</ref><sp/>&amp;mapping,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint64_t<sp/>newSize)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>First<sp/>merge<sp/>all<sp/>the<sp/>dictionaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr&gt;<sp/>dict_list_t;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;std::vector&lt;value_id_t&gt;<sp/>&gt;<sp/>value_id_mapping_t;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Preallocate<sp/>the<sp/>list<sp/>for<sp/>the<sp/>mappings<sp/>per<sp/>attribute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>std::vector&lt;dict_list_t&gt;<sp/>dictMappingPerAttribute(input_tables[0]-&gt;columnCount());</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>std::vector&lt;value_id_mapping_t&gt;<sp/>mappingPerAtrtibute(input_tables[0]-&gt;columnCount());</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column_index<sp/>=<sp/>0;<sp/>column_index<sp/>&lt;<sp/>input_tables[0]-&gt;columnCount();<sp/>column_index++)<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>dest<sp/>=<sp/>mapping.find(column_index)-&gt;second;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(merged_table-&gt;metadataAt(dest)-&gt;getType())<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a90453dde1506c63dbaaa7a1a363a06a9" kindref="member">IntegerType</ref>:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mergeValues&lt;hyrise_int_t&gt;(input_tables,<sp/>column_index,<sp/>dest,<sp/>merged_table,<sp/>mappingPerAtrtibute[dest],<sp/>dictMappingPerAttribute[dest]);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a866d24e407b4ee66d3efe59486be6db4" kindref="member">FloatType</ref>:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mergeValues&lt;hyrise_float_t&gt;(input_tables,<sp/>column_index,<sp/>dest,<sp/>merged_table,<sp/>mappingPerAtrtibute[dest],<sp/>dictMappingPerAttribute[dest]);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a83ccab8dfcfc3a9e8656224313fb61f3" kindref="member">StringType</ref>:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mergeValues&lt;hyrise_string_t&gt;(input_tables,<sp/>column_index,<sp/>dest,<sp/>merged_table,<sp/>mappingPerAtrtibute[dest],<sp/>dictMappingPerAttribute[dest]);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Reverse<sp/>the<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a8addaea8b5301cc30c8f8f634b531127" kindref="member">hyrise::storage::column_mapping_t</ref><sp/>inverted;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>kv<sp/>:<sp/>mapping)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>inverted[kv.second]<sp/>=<sp/>kv.first;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>merged_table-&gt;resize(newSize);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>perform<sp/>an<sp/>container<sp/>wise<sp/>update<sp/>of<sp/>the<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="class_sequential_heap_merger_row_1a65b6c57b4d5e3c603a342c679eac2efb" kindref="member">copyValuesRowWise</ref>(input_tables,<sp/>merged_table,<sp/>mappingPerAtrtibute,<sp/>inverted);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="50" refid="class_sequential_heap_merger_row_1afdb5c54ac60414d4be8e7ac1aa476f8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sequential_heap_merger_row_1a6a5ceefaa91b0da3645189f641358bd4" kindref="member">SequentialHeapMergerRow::mergeValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;input_tables,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>source_index,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column_index,<sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>merged_table,<sp/>std::vector&lt;std::vector&lt;value_id_t&gt;<sp/>&gt;<sp/>&amp;value_id_mapping,<sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr<sp/>&gt;<sp/>&amp;value_id_maps)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref><sp/>new_dict;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>shortcut<sp/>for<sp/>dicts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>value_id_maps.reserve(input_tables.size());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>table<sp/>=<sp/>0;<sp/>table<sp/>&lt;<sp/>input_tables.size();<sp/>table++)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dict<sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_base_dictionary" kindref="compound">BaseDictionary&lt;T&gt;</ref>&gt;(input_tables[table]-&gt;dictionaryAt(source_index));</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//assert(dict-&gt;isOrdered());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>value_id_maps.push_back(dict);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>new<sp/>BaseDictionary<sp/>-<sp/>shrink<sp/>when<sp/>merge<sp/>finished?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>new_dict<sp/>=<sp/>createNewDict&lt;T&gt;(input_tables,<sp/>value_id_maps,<sp/>value_id_mapping);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>new<sp/>value<sp/>id<sp/>map<sp/>for<sp/>column</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>merged_table-&gt;setDictionaryAt(new_dict,<sp/>column_index);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="70" refid="class_sequential_heap_merger_row_1a0e93757c68be17b5924624b523d3100e" refkind="member"><highlight class="normal"><ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref><sp/><ref refid="class_sequential_heap_merger_row_1a0e93757c68be17b5924624b523d3100e" kindref="member">SequentialHeapMergerRow::createNewDict</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;input_tables,<sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr<sp/>&gt;<sp/>&amp;value_id_maps,<sp/>std::vector&lt;std::vector&lt;value_id_t&gt;<sp/>&gt;<sp/>&amp;value_id_mapping)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref><sp/>new_dict;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>std::priority_queue&lt;DictionaryPosition&lt;T&gt;<sp/>&gt;<sp/>p_queue;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_dict_max_size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>T<sp/>last_value;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>value_id_mapping.resize(input_tables.size());</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>table<sp/>=<sp/>0;<sp/>table<sp/>&lt;<sp/>input_tables.size();<sp/>table++)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reserve<sp/>space<sp/>for<sp/>value<sp/>id<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>value_id_mapping[table].resize(value_id_maps[table]-&gt;size());</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>insert<sp/>initial<sp/>value<sp/>in<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value_id_maps[table]-&gt;size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_queue.push(<ref refid="class_dictionary_position" kindref="compound">DictionaryPosition&lt;T&gt;</ref>(table,<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_base_dictionary" kindref="compound">BaseDictionary&lt;T&gt;</ref>&gt;(value_id_maps[table])-&gt;begin()));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>new_dict_max_size<sp/>+=<sp/>value_id_maps[table]-&gt;size();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>new<sp/>BaseDictionary<sp/>-<sp/>shrink<sp/>when<sp/>merge<sp/>finished?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>new_dict<sp/>=<sp/>std::make_shared&lt;OrderPreservingDictionary&lt;T&gt;&gt;(new_dict_max_size);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p_queue.empty())<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_dictionary_position" kindref="compound">DictionaryPosition&lt;T&gt;</ref><sp/>dict_pos<sp/>=<sp/>p_queue.top();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>p_queue.pop();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::dynamic_pointer_cast&lt;<ref refid="class_base_dictionary" kindref="compound">BaseDictionary&lt;T&gt;</ref>&gt;(new_dict)-&gt;addValue(dict_pos.<ref refid="class_dictionary_position_1ad8496c58d8762dd929f902291c1bf69f" kindref="member">getValue</ref>());</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>last_value<sp/>=<sp/>dict_pos.<ref refid="class_dictionary_position_1ad8496c58d8762dd929f902291c1bf69f" kindref="member">getValue</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>value_id_mapping[dict_pos.<ref refid="class_dictionary_position_1a47aad47813b634de61d355134dfa273d" kindref="member">index</ref>][dict_pos.<ref refid="class_dictionary_position_1a5611b380876e7cee650659ecf05c6b5d" kindref="member">it</ref>.getValueId()]<sp/>=<sp/>new_dict-&gt;size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>dict_pos.<ref refid="class_dictionary_position_1a5611b380876e7cee650659ecf05c6b5d" kindref="member">it</ref>++;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::dynamic_pointer_cast&lt;<ref refid="class_base_dictionary" kindref="compound">BaseDictionary&lt;T&gt;</ref>&gt;(value_id_maps[dict_pos.<ref refid="class_dictionary_position_1a47aad47813b634de61d355134dfa273d" kindref="member">index</ref>])-&gt;<ref refid="class_base_dictionary_1a61461dc90085108337b8930923755870" kindref="member">end</ref>()<sp/>!=<sp/>dict_pos.<ref refid="class_dictionary_position_1a5611b380876e7cee650659ecf05c6b5d" kindref="member">it</ref>)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_queue.push(dict_pos);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!p_queue.empty())<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_dictionary_position" kindref="compound">DictionaryPosition&lt;T&gt;</ref><sp/>dict_pos<sp/>=<sp/>p_queue.top();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>p_queue.pop();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dict_pos.<ref refid="class_dictionary_position_1ad8496c58d8762dd929f902291c1bf69f" kindref="member">getValue</ref>()<sp/>!=<sp/>last_value)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::dynamic_pointer_cast&lt;<ref refid="class_base_dictionary" kindref="compound">BaseDictionary&lt;T&gt;</ref>&gt;(new_dict)-&gt;addValue(dict_pos.<ref refid="class_dictionary_position_1ad8496c58d8762dd929f902291c1bf69f" kindref="member">getValue</ref>());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_value<sp/>=<sp/>dict_pos.<ref refid="class_dictionary_position_1ad8496c58d8762dd929f902291c1bf69f" kindref="member">getValue</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>value_id_mapping[dict_pos.<ref refid="class_dictionary_position_1a47aad47813b634de61d355134dfa273d" kindref="member">index</ref>][dict_pos.<ref refid="class_dictionary_position_1a5611b380876e7cee650659ecf05c6b5d" kindref="member">it</ref>.getValueId()]<sp/>=<sp/>new_dict-&gt;size()<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>dict_pos.<ref refid="class_dictionary_position_1a5611b380876e7cee650659ecf05c6b5d" kindref="member">it</ref>++;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(std::dynamic_pointer_cast&lt;<ref refid="class_base_dictionary" kindref="compound">BaseDictionary&lt;T&gt;</ref>&gt;(value_id_maps[dict_pos.<ref refid="class_dictionary_position_1a47aad47813b634de61d355134dfa273d" kindref="member">index</ref>])-&gt;<ref refid="class_base_dictionary_1a61461dc90085108337b8930923755870" kindref="member">end</ref>()<sp/>!=<sp/>dict_pos.<ref refid="class_dictionary_position_1a5611b380876e7cee650659ecf05c6b5d" kindref="member">it</ref>)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p_queue.push(dict_pos);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>queue_size<sp/>=<sp/>(float)queue_sum<sp/>/<sp/>(float)loop_count;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>loop_count<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>add_count<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>next_count<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>queue_size<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>new_dict-&gt;size()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_dict;</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="class_sequential_heap_merger_row_1a65b6c57b4d5e3c603a342c679eac2efb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sequential_heap_merger_row_1a65b6c57b4d5e3c603a342c679eac2efb" kindref="member">SequentialHeapMergerRow::copyValuesRowWise</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;input_tables,<sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>merged_table,<sp/>std::vector&lt;std::vector&lt;std::vector&lt;value_id_t&gt;<sp/>&gt;<sp/>&gt;<sp/>&amp;mappings,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a8addaea8b5301cc30c8f8f634b531127" kindref="member">hyrise::storage::column_mapping_t</ref><sp/>&amp;field_mapping)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref><sp/>v;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>over<sp/>all<sp/>slices<sp/>and<sp/>copy<sp/>the<sp/>data<sp/>rowvise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>merged_table-&gt;sliceCount();<sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numcols<sp/>=<sp/>offset<sp/>+<sp/>merged_table-&gt;getSliceWidth(s)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>mergedRow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>table<sp/>=<sp/>0;<sp/>table<sp/>&lt;<sp/>input_tables.size();<sp/>++table)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>input_tables[table]-&gt;size();<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>meta<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>offset;<sp/>col<sp/>&lt;<sp/>numcols;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mapped<sp/>=<sp/>field_mapping.find(col)-&gt;second;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>translate<sp/>the<sp/>fields<sp/>if<sp/>the<sp/>order<sp/>has<sp/>changed<sp/>map<sp/>source<sp/>to<sp/>new<sp/>dest<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v<sp/>=<sp/>input_tables[table]-&gt;getValueId(mapped,<sp/>row).valueId;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>value_id(mappings[col][table][v],<sp/>0);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>merged_table-&gt;setValueId(col,<sp/>mergedRow,<sp/>value_id);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++mergedRow;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>mapping;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>numcols;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="class_sequential_heap_merger_row_1a8f884b22260b2f0df4f3c28fc0a0ed65" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sequential_heap_merger_row_1a8f884b22260b2f0df4f3c28fc0a0ed65" kindref="member">SequentialHeapMergerRow::copyValues</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;input_tables,<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column_index,<sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>&amp;merged_table,<sp/>std::vector&lt;std::vector&lt;value_id_t&gt;<sp/>&gt;<sp/>&amp;value_id_mapping)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>value_id;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>all<sp/>value<sp/>ids<sp/>to<sp/>the<sp/>new<sp/>doc<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>apply<sp/>value<sp/>id<sp/>mapping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>merged_table_row<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>table<sp/>=<sp/>0;<sp/>table<sp/>&lt;<sp/>input_tables.size();<sp/>table++)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>input_tables[table]-&gt;size();<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_id.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>=<sp/>input_tables[table]-&gt;getValueId(column_index,<sp/>row).valueId;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_id.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>=<sp/>value_id_mapping[table][value_id.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref>];<sp/></highlight><highlight class="comment">//<sp/>translate<sp/>value<sp/>id<sp/>to<sp/>new<sp/>dict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>merged_table-&gt;setValueId(column_index,<sp/>merged_table_row,<sp/>value_id);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>merged_table_row++;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="class_sequential_heap_merger_row_1a211b8bd5ac8cfb68f22a2da36abb5d7b" refkind="member"><highlight class="normal"><ref refid="class_abstract_merger" kindref="compound">AbstractMerger</ref><sp/>*<ref refid="class_sequential_heap_merger_row_1a211b8bd5ac8cfb68f22a2da36abb5d7b" kindref="member">SequentialHeapMergerRow::copy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_sequential_heap_merger_row" kindref="compound">SequentialHeapMergerRow</ref>();</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/storage/SequentialHeapMergerRow.cpp"/>
  </compounddef>
</doxygen>
