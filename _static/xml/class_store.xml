<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="class_store" kind="class" prot="public">
    <compoundname>Store</compoundname>
    <basecompoundref refid="class_abstract_table" prot="public" virt="non-virtual">AbstractTable</basecompoundref>
    <includes refid="_store_8h" local="no">Store.h</includes>
    <innerclass refid="struct_store_1_1table__offset__idx__t" prot="protected">Store::table_offset_idx_t</innerclass>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_store_1a5055f718396ec445bfb582323e49d55f" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref> &gt;</type>
        <definition>std::vector&lt; hyrise::storage::atable_ptr_t &gt; Store::main_tables</definition>
        <argsstring></argsstring>
        <name>main_tables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="36" bodyfile="/home/grund/hyrise/src/lib/storage/Store.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_store_1a60cfc2584c21833970feb18e4465c219" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref></type>
        <definition>hyrise::storage::atable_ptr_t Store::delta</definition>
        <argsstring></argsstring>
        <name>delta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="39" bodyfile="/home/grund/hyrise/src/lib/storage/Store.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_store_1a64e75844b85ac164809b2df60d826f06" prot="protected" static="no" mutable="no">
        <type><ref refid="class_table_merger" kindref="compound">TableMerger</ref> *</type>
        <definition>TableMerger* Store::merger</definition>
        <argsstring></argsstring>
        <name>merger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="42" bodyfile="/home/grund/hyrise/src/lib/storage/Store.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_store_1aaa27799e68d8882d50e1a5c4da096e57" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_store_1_1table__offset__idx__t" kindref="compound">table_offset_idx_t</ref></type>
        <definition>Store::table_offset_idx_t Store::responsibleTable</definition>
        <argsstring>(size_t row) const </argsstring>
        <name>responsibleTable</name>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="45" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="112" bodyend="130"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_store_1afa891764f2dd013645c558e2806971c5" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Store::Store</definition>
        <argsstring>(std::vector&lt; std::vector&lt; const ColumnMetadata * &gt; * &gt; md)</argsstring>
        <name>Store</name>
        <param>
          <type>std::vector&lt; std::vector&lt; const <ref refid="class_column_metadata" kindref="compound">ColumnMetadata</ref> * &gt; * &gt;</type>
          <declname>md</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="49" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="7" bodyend="10"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1ac1e1478d5ba70c1ca5996d2ab054279b" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Store::Store</definition>
        <argsstring>(hyrise::storage::atable_ptr_t main_table)</argsstring>
        <name>Store</name>
        <param>
          <type><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref></type>
          <declname>main_table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="51" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="16" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a5f58eadcb7385d5a5aa6830daef84f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Store::Store</definition>
        <argsstring>()</argsstring>
        <name>Store</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="53" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="12" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a4fd725fdb2de0632ed98bfbd131c2512" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Store::~Store</definition>
        <argsstring>()</argsstring>
        <name>~Store</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="55" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1ab089e4aecf19089cc155f5d62292850b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref> &gt;</type>
        <definition>std::vector&lt; hyrise::storage::atable_ptr_t &gt; Store::getMainTables</definition>
        <argsstring>() const </argsstring>
        <name>getMainTables</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to the main tables vector. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="60" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1af2cdc7e2ed4e03785a5982b797a768d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref></type>
        <definition>hyrise::storage::atable_ptr_t Store::getDeltaTable</definition>
        <argsstring>() const </argsstring>
        <name>getDeltaTable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to the delta store. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="65" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a6d5749cca0eeeb84fcc7476e6bdbfc9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="class_column_metadata" kindref="compound">ColumnMetadata</ref> *</type>
        <definition>const ColumnMetadata * Store::metadataAt</definition>
        <argsstring>(const size_t column_index, const size_t row_index=0, const table_id_t table_id=0) const </argsstring>
        <name>metadataAt</name>
        <reimplements refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9">metadataAt</reimplements>
        <param>
          <type>const size_t</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>row</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref></type>
          <declname>table_id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the metadata for a certain column. Returns a pointer to a <ref refid="class_column_metadata" kindref="compound">ColumnMetadata</ref> object for a specified column. <simplesect kind="note"><para>Must be implemented by any derived class!</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>Column for which to return the metadata. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Row in that column (default=0). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the table from which to extract (default=0). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="67" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="47" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a46770db9f688639313b1c8da39d7994f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Store::setDictionaryAt</definition>
        <argsstring>(AbstractTable::SharedDictionaryPtr dict, const size_t column, const size_t row=0, const table_id_t table_id=0)</argsstring>
        <name>setDictionaryAt</name>
        <reimplements refid="class_abstract_table_1a15c7e879e77c9586460488e6e442566c">setDictionaryAt</reimplements>
        <param>
          <type><ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref></type>
          <declname>dict</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>row</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref></type>
          <declname>table_id</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the dictionary for a certain column. <simplesect kind="note"><para>Must be implemented by any derived class!</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dict</parametername>
</parameternamelist>
<parameterdescription>
<para>Dictionary to be used. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>Column for which to set the dictionary. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Row in that column (default=0). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the table (default=0). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="69" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="61" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1ac99a49efd57349d2fdb4642e3c1ffb85" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref> &amp;</type>
        <definition>const AbstractTable::SharedDictionaryPtr &amp; Store::dictionaryAt</definition>
        <argsstring>(const size_t column, const size_t row=0, const table_id_t table_id=0, const bool of_delta=false) const </argsstring>
        <name>dictionaryAt</name>
        <reimplements refid="class_abstract_table_1a001566ba79ef4dfcde544b4867dd69e7">dictionaryAt</reimplements>
        <param>
          <type>const size_t</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>row</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref></type>
          <declname>table_id</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>of_delta</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the dictionary for a certain column. <simplesect kind="note"><para>Must be implemented by any derived class!</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>Column from which to extract the dictionary. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Row in that column (default=0). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the table from which to extract (default=0). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="71" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="76" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a897f1aaea02ea049f9687e0bbe821b19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref> &amp;</type>
        <definition>const AbstractTable::SharedDictionaryPtr &amp; Store::dictionaryByTableId</definition>
        <argsstring>(const size_t column, const table_id_t table_id) const </argsstring>
        <name>dictionaryByTableId</name>
        <reimplements refid="class_abstract_table_1aa2833dbbbabb49737922e5172f0efff9">dictionaryByTableId</reimplements>
        <param>
          <type>const size_t</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const <ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref></type>
          <declname>table_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the dictionary for a certain column by table ID. <simplesect kind="note"><para>Must be implemented by any derived class!</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>Column from which to extract the dictionary. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>table_id</parametername>
</parameternamelist>
<parameterdescription>
<para>ID of the table from which to extract. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="73" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="102" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a87540e0c8654a91fc01e3cc6925aa823" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_value_id" kindref="compound">ValueId</ref></type>
        <definition>ValueId Store::getValueId</definition>
        <argsstring>(const size_t column, const size_t row) const </argsstring>
        <name>getValueId</name>
        <reimplements refid="class_abstract_table_1ab0dc4d8eaa3d5b2022d2f0ba1d873a14">getValueId</reimplements>
        <param>
          <type>const size_t</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the value-ID of a cell. <simplesect kind="note"><para>Must be implemented by any derived class!</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>Column number of the cell. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Row number of the cell. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="75" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1adb053acbcbb215a46324a083ecb5f23f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Store::setValueId</definition>
        <argsstring>(const size_t column, const size_t row, ValueId vid)</argsstring>
        <name>setValueId</name>
        <reimplements refid="class_abstract_table_1ad7fabd72d657d48f1f4380132515b451">setValueId</reimplements>
        <param>
          <type>const size_t</type>
          <declname>column</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="class_value_id" kindref="compound">ValueId</ref></type>
          <declname>valueId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the value ID of a cell. <simplesect kind="note"><para>Should be implemented in derived classes or throws runtime error!</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>column</parametername>
</parameternamelist>
<parameterdescription>
<para>Column number of the cell. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Row number of the cell. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valueId</parametername>
</parameternamelist>
<parameterdescription>
<para>New value-ID of the cell. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="77" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a7a16ab17df15f50f605a4243d993d928" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t Store::size</definition>
        <argsstring>() const </argsstring>
        <name>size</name>
        <reimplements refid="class_abstract_table_1a2b3fde5fb0c70f288eda47c4c66bb151">size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of rows in the table <simplesect kind="note"><para>Must be implemented by any derived class! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="79" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="145" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1ae255c50f218def7b1f74b131b13b031c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t Store::columnCount</definition>
        <argsstring>() const </argsstring>
        <name>columnCount</name>
        <reimplements refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c">columnCount</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of columns. <simplesect kind="note"><para>Must be implemented by any derived class! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="81" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a5985b78449c324e9c5000a8e076696ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>unsigned</type>
        <definition>unsigned Store::sliceCount</definition>
        <argsstring>() const </argsstring>
        <name>sliceCount</name>
        <reimplements refid="class_abstract_table_1a593d49b1ae5ca4a47e5c5c43c1eeb4c8">sliceCount</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of slices. <simplesect kind="note"><para>Must be implemented by any derived class! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="83" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a46d326a26cebe6fd98a69016d5a34795" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void *</type>
        <definition>void * Store::atSlice</definition>
        <argsstring>(const size_t slice, const size_t row) const </argsstring>
        <name>atSlice</name>
        <reimplements refid="class_abstract_table_1a472d2a3dc19e99e640d2b65e81a6d052">atSlice</reimplements>
        <param>
          <type>const size_t</type>
          <declname>slice</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to the memory area of a slice. <simplesect kind="note"><para>Must be implemented by any derived class!</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>The slice of interest. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Row in that slice. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_width</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="85" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="164" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a7073045d76aa1aea7e1b58c551d701fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t Store::getSliceWidth</definition>
        <argsstring>(const size_t slice) const </argsstring>
        <name>getSliceWidth</name>
        <reimplements refid="class_abstract_table_1a560af7bf02ed631dd359b22a62e0bed7">getSliceWidth</reimplements>
        <param>
          <type>const size_t</type>
          <declname>slice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the width of a slice. <simplesect kind="note"><para>Must be implemented by any derived class!</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>slice</parametername>
</parameternamelist>
<parameterdescription>
<para>The slice of interest. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="87" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a20f897fce9ff1cd3aeb587f187d222ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t Store::getSliceForColumn</definition>
        <argsstring>(const size_t column) const </argsstring>
        <name>getSliceForColumn</name>
        <reimplements refid="class_abstract_table_1a964f6a039d706144a0f07b6e96acac10">getSliceForColumn</reimplements>
        <param>
          <type>const size_t</type>
          <declname>column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="89" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a5851ddb6f0c531ea59a93c4afff87bd1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t Store::getOffsetInSlice</definition>
        <argsstring>(const size_t column) const </argsstring>
        <name>getOffsetInSlice</name>
        <reimplements refid="class_abstract_table_1a87503e254e2ec4ad43aa198f254a35e0">getOffsetInSlice</reimplements>
        <param>
          <type>const size_t</type>
          <declname>column</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="90" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a1011812043e6963e8e122dd77bdec2c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Store::merge</definition>
        <argsstring>()</argsstring>
        <name>merge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Merges main tables with and resets delta. <simplesect kind="note"><para>Merger must be set! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="98" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="26" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a03268df852e96dd93ef68f5da9395ab2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Store::print</definition>
        <argsstring>(const size_t limit=(size_t)-1) const </argsstring>
        <name>print</name>
        <reimplements refid="class_abstract_table_1a64faa3ae981d0b077787fbd60c46ede1">print</reimplements>
        <param>
          <type>const size_t</type>
          <declname>limit</declname>
          <defval>(size_t)-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prints the table </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="100" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="195" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a4c8c3037af8f66889a648a4d502bef3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Store::setMerger</definition>
        <argsstring>(TableMerger *_merger)</argsstring>
        <name>setMerger</name>
        <param>
          <type><ref refid="class_table_merger" kindref="compound">TableMerger</ref> *</type>
          <declname>_merger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the merger used for merging main tables with delta.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_merger</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a merger instance. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="107" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1aafca3d94b33ecd4c642995a6603a860e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Store::setDelta</definition>
        <argsstring>(hyrise::storage::atable_ptr_t _delta)</argsstring>
        <name>setDelta</name>
        <param>
          <type><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref></type>
          <declname>_delta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the delta table.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_delta</parametername>
</parameternamelist>
<parameterdescription>
<para>New delta. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="114" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a9dbb346cc7d85fe55a9d49bd5f8a2725" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref></type>
        <definition>virtual table_id_t Store::subtableCount</definition>
        <argsstring>() const </argsstring>
        <name>subtableCount</name>
        <reimplements refid="class_abstract_table_1af5330c0a617946ad538cacea21ba7639">subtableCount</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of horizontal subtables. <simplesect kind="note"><para>Must be implemented by any derived class! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="116" bodyfile="/home/grund/hyrise/src/lib/storage/Store.h" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a85c3ab730b3d083f79eeacc5110ddf49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref></type>
        <definition>hyrise::storage::atable_ptr_t Store::copy</definition>
        <argsstring>() const </argsstring>
        <name>copy</name>
        <reimplements refid="class_abstract_table_1a87134964b75abb36c49d0c44455d23e2">copy</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create of copy of this table. <simplesect kind="note"><para>Must be implemented by any derived class! </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="120" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="216" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="class_store_1a35355e41ebb792f40f9f4cfd02100922" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="_abstract_table_8h_1ae3a004c859daed205eb7639b1e993ce4" kindref="member">attr_vectors_t</ref></type>
        <definition>const attr_vectors_t Store::getAttributeVectors</definition>
        <argsstring>(size_t column) const </argsstring>
        <name>getAttributeVectors</name>
        <reimplements refid="class_abstract_table_1a3467bc6159aa361db993c3fc56584789">getAttributeVectors</reimplements>
        <param>
          <type>size_t</type>
          <declname>column</declname>
        </param>
        <briefdescription>
<para>get underlying attribute vectors for column </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="122" bodyfile="/home/grund/hyrise/src/lib/storage/Store.cpp" bodystart="235" bodyend="244"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_store" kindref="compound">Store</ref> consists of one or more main tables and a delta store and is the only entity capable of modifying the content of the table(s) after initialization via the delta store. It can be merged into the main tables using a to-be-set merger. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2984">
        <label>AbstractTable</label>
        <link refid="class_abstract_table"/>
        <childnode refid="2985" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2985">
        <label>AbstractResource</label>
        <link refid="class_abstract_resource"/>
      </node>
      <node id="2983">
        <label>Store</label>
        <link refid="class_store"/>
        <childnode refid="2984" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2987">
        <label>AbstractTable</label>
        <link refid="class_abstract_table"/>
        <childnode refid="2988" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2991">
        <label>AbstractMerger</label>
        <link refid="class_abstract_merger"/>
      </node>
      <node id="2988">
        <label>AbstractResource</label>
        <link refid="class_abstract_resource"/>
      </node>
      <node id="2990">
        <label>AbstractMergeStrategy</label>
        <link refid="class_abstract_merge_strategy"/>
      </node>
      <node id="2989">
        <label>TableMerger</label>
        <link refid="class_table_merger"/>
        <childnode refid="2990" relation="usage">
          <edgelabel>_strategy</edgelabel>
        </childnode>
        <childnode refid="2991" relation="usage">
          <edgelabel>_merger</edgelabel>
        </childnode>
      </node>
      <node id="2986">
        <label>Store</label>
        <link refid="class_store"/>
        <childnode refid="2987" relation="public-inheritance">
        </childnode>
        <childnode refid="2989" relation="usage">
          <edgelabel>merger</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/grund/hyrise/src/lib/storage/Store.h" line="33" bodyfile="/home/grund/hyrise/src/lib/storage/Store.h" bodystart="33" bodyend="123"/>
    <listofallmembers>
      <member refid="class_abstract_table_1a0d4b411db86931d15cc643a2883ffe59" prot="public" virt="non-virtual"><scope>Store</scope><name>AbstractTable</name></member>
      <member refid="class_store_1a46d326a26cebe6fd98a69016d5a34795" prot="public" virt="virtual"><scope>Store</scope><name>atSlice</name></member>
      <member refid="class_store_1ae255c50f218def7b1f74b131b13b031c" prot="public" virt="virtual"><scope>Store</scope><name>columnCount</name></member>
      <member refid="class_abstract_table_1af716c04f38a6ab47b277911baf050c9d" prot="public" virt="non-virtual"><scope>Store</scope><name>contentEquals</name></member>
      <member refid="class_store_1a85c3ab730b3d083f79eeacc5110ddf49" prot="public" virt="virtual"><scope>Store</scope><name>copy</name></member>
      <member refid="class_abstract_table_1a0439c8c9642d0a5dbbbf2d3e37c690fc" prot="public" virt="virtual"><scope>Store</scope><name>copy_structure</name></member>
      <member refid="class_abstract_table_1ab2e5350c658908dc343dd2b8c36eed14" prot="public" virt="non-virtual"><scope>Store</scope><name>copy_structure_modifiable</name></member>
      <member refid="class_abstract_table_1afbbf69e94a282a71fb1ecedd72ca8824" prot="public" virt="non-virtual"><scope>Store</scope><name>copyRowFrom</name></member>
      <member refid="class_abstract_table_1a4361f683288a0d1360227b309ca625f6" prot="public" virt="non-virtual"><scope>Store</scope><name>copyValueFrom</name></member>
      <member refid="class_abstract_table_1a0e1dd83cf4622413949542ecc0604bb7" prot="public" virt="non-virtual"><scope>Store</scope><name>copyValueFrom</name></member>
      <member refid="class_abstract_table_1ae66e82c1f4eb0001f747af5bcf8a4ef1" prot="public" virt="non-virtual"><scope>Store</scope><name>copyValueFrom</name></member>
      <member refid="class_abstract_table_1a85b7d9471c86bd31879c0f6378071b9c" prot="public" virt="non-virtual"><scope>Store</scope><name>copyValueIds</name></member>
      <member refid="class_store_1a60cfc2584c21833970feb18e4465c219" prot="protected" virt="non-virtual"><scope>Store</scope><name>delta</name></member>
      <member refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" prot="public" virt="non-virtual"><scope>Store</scope><name>dictionaries</name></member>
      <member refid="class_store_1ac99a49efd57349d2fdb4642e3c1ffb85" prot="public" virt="virtual"><scope>Store</scope><name>dictionaryAt</name></member>
      <member refid="class_store_1a897f1aaea02ea049f9687e0bbe821b19" prot="public" virt="virtual"><scope>Store</scope><name>dictionaryByTableId</name></member>
      <member refid="class_abstract_table_1a1d792fb6711c4ea00e4662576c1c3dc8" prot="public" virt="non-virtual"><scope>Store</scope><name>generation</name></member>
      <member refid="class_store_1a35355e41ebb792f40f9f4cfd02100922" prot="public" virt="virtual"><scope>Store</scope><name>getAttributeVectors</name></member>
      <member refid="class_store_1af2cdc7e2ed4e03785a5982b797a768d5" prot="public" virt="non-virtual"><scope>Store</scope><name>getDeltaTable</name></member>
      <member refid="class_store_1ab089e4aecf19089cc155f5d62292850b" prot="public" virt="non-virtual"><scope>Store</scope><name>getMainTables</name></member>
      <member refid="class_store_1a5851ddb6f0c531ea59a93c4afff87bd1" prot="public" virt="virtual"><scope>Store</scope><name>getOffsetInSlice</name></member>
      <member refid="class_store_1a20f897fce9ff1cd3aeb587f187d222ab" prot="public" virt="virtual"><scope>Store</scope><name>getSliceForColumn</name></member>
      <member refid="class_store_1a7073045d76aa1aea7e1b58c551d701fe" prot="public" virt="virtual"><scope>Store</scope><name>getSliceWidth</name></member>
      <member refid="class_abstract_table_1a6648aba614a398c3243a60b18d5d7dbf" prot="public" virt="non-virtual"><scope>Store</scope><name>getValue</name></member>
      <member refid="class_abstract_table_1aac6e3940c4b756a4c627ece2c008782c" prot="public" virt="non-virtual"><scope>Store</scope><name>getValue</name></member>
      <member refid="class_abstract_table_1af380b8fd7715abe5988f53b885920e0c" prot="public" virt="non-virtual"><scope>Store</scope><name>getValueForValueId</name></member>
      <member refid="class_store_1a87540e0c8654a91fc01e3cc6925aa823" prot="public" virt="virtual"><scope>Store</scope><name>getValueId</name></member>
      <member refid="class_abstract_table_1aefae5f6a831167c3d5669be5ba9d87bc" prot="public" virt="non-virtual"><scope>Store</scope><name>getValueIdForValue</name></member>
      <member refid="class_abstract_table_1acd7ea07c9b1605ca53c7608c7c3b2ea5" prot="public" virt="non-virtual"><scope>Store</scope><name>getValueIdForValueByTableId</name></member>
      <member refid="class_store_1a5055f718396ec445bfb582323e49d55f" prot="protected" virt="non-virtual"><scope>Store</scope><name>main_tables</name></member>
      <member refid="class_store_1a1011812043e6963e8e122dd77bdec2c5" prot="public" virt="non-virtual"><scope>Store</scope><name>merge</name></member>
      <member refid="class_store_1a64e75844b85ac164809b2df60d826f06" prot="protected" virt="non-virtual"><scope>Store</scope><name>merger</name></member>
      <member refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" prot="public" virt="non-virtual"><scope>Store</scope><name>metadata</name></member>
      <member refid="class_store_1a6d5749cca0eeeb84fcc7476e6bdbfc9f" prot="public" virt="virtual"><scope>Store</scope><name>metadataAt</name></member>
      <member refid="class_abstract_table_1aa126cb17995eef9d0833ff2a4a673853" prot="public" virt="non-virtual"><scope>Store</scope><name>nameOfColumn</name></member>
      <member refid="class_abstract_table_1aaea606e4fd8c92a43febced405de1c6c" prot="public" virt="non-virtual"><scope>Store</scope><name>numberOfColumn</name></member>
      <member refid="class_store_1a03268df852e96dd93ef68f5da9395ab2" prot="public" virt="virtual"><scope>Store</scope><name>print</name></member>
      <member refid="class_abstract_table_1ae2f20cf55374dc8560dc4d2e8c4623ec" prot="public" virt="non-virtual"><scope>Store</scope><name>printValue</name></member>
      <member refid="class_abstract_table_1acf25e9092735089d88c0fd9a1cb02984" prot="public" virt="virtual"><scope>Store</scope><name>reserve</name></member>
      <member refid="class_abstract_table_1a2c284b3bc7d1ee8522cd02be2fffa3be" prot="public" virt="virtual"><scope>Store</scope><name>resize</name></member>
      <member refid="class_store_1aaa27799e68d8882d50e1a5c4da096e57" prot="protected" virt="non-virtual"><scope>Store</scope><name>responsibleTable</name></member>
      <member refid="class_store_1aafca3d94b33ecd4c642995a6603a860e" prot="public" virt="non-virtual"><scope>Store</scope><name>setDelta</name></member>
      <member refid="class_store_1a46770db9f688639313b1c8da39d7994f" prot="public" virt="virtual"><scope>Store</scope><name>setDictionaryAt</name></member>
      <member refid="class_abstract_table_1a583da7847c5f08de7ee4288cec78e187" prot="public" virt="non-virtual"><scope>Store</scope><name>setGeneration</name></member>
      <member refid="class_store_1a4c8c3037af8f66889a648a4d502bef3b" prot="public" virt="non-virtual"><scope>Store</scope><name>setMerger</name></member>
      <member refid="class_abstract_table_1a50d0ce6998606d864a429002f86ae654" prot="public" virt="non-virtual"><scope>Store</scope><name>setValue</name></member>
      <member refid="class_abstract_table_1a453b25a7f8ebe971d82cd5790d4183dd" prot="public" virt="non-virtual"><scope>Store</scope><name>setValue</name></member>
      <member refid="class_store_1adb053acbcbb215a46324a083ecb5f23f" prot="public" virt="virtual"><scope>Store</scope><name>setValueId</name></member>
      <member refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" prot="public" virt="non-virtual"><scope>Store</scope><name>SharedDictionaryPtr</name></member>
      <member refid="class_store_1a7a16ab17df15f50f605a4243d993d928" prot="public" virt="virtual"><scope>Store</scope><name>size</name></member>
      <member refid="class_store_1a5985b78449c324e9c5000a8e076696ce" prot="public" virt="virtual"><scope>Store</scope><name>sliceCount</name></member>
      <member refid="class_store_1afa891764f2dd013645c558e2806971c5" prot="public" virt="non-virtual"><scope>Store</scope><name>Store</name></member>
      <member refid="class_store_1ac1e1478d5ba70c1ca5996d2ab054279b" prot="public" virt="non-virtual"><scope>Store</scope><name>Store</name></member>
      <member refid="class_store_1a5f58eadcb7385d5a5aa6830daef84f7d" prot="public" virt="non-virtual"><scope>Store</scope><name>Store</name></member>
      <member refid="class_store_1a9dbb346cc7d85fe55a9d49bd5f8a2725" prot="public" virt="virtual"><scope>Store</scope><name>subtableCount</name></member>
      <member refid="class_abstract_table_1ad6de2b7c7b99098e9766b060b4d4b8c7" prot="public" virt="non-virtual"><scope>Store</scope><name>typeOfColumn</name></member>
      <member refid="class_abstract_table_1a55de3a5a31acf6898fb9ddd287b760e3" prot="public" virt="non-virtual"><scope>Store</scope><name>valueExists</name></member>
      <member refid="class_abstract_table_1a8e1d6f1b61390fc3e6954fbaa1f7745f" prot="public" virt="non-virtual"><scope>Store</scope><name>write</name></member>
      <member refid="class_abstract_resource_1a4299feff952f974409aaaf52082deadb" prot="public" virt="virtual"><scope>Store</scope><name>~AbstractResource</name></member>
      <member refid="class_abstract_table_1a957e2dc86a1aa6ffa19b2d8585a1ee91" prot="public" virt="virtual"><scope>Store</scope><name>~AbstractTable</name></member>
      <member refid="class_store_1a4fd725fdb2de0632ed98bfbd131c2512" prot="public" virt="virtual"><scope>Store</scope><name>~Store</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
