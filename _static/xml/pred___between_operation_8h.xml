<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="pred___between_operation_8h" kind="file">
    <compoundname>pred_BetweenOperation.h</compoundname>
    <includes refid="types_8h" local="yes">helper/types.h</includes>
    <includes refid="pred__common_8h" local="yes">pred_common.h</includes>
    <includedby refid="predicates_8h" local="yes">src/lib/access/predicates.h</includedby>
    <incdepgraph>
      <node id="8481">
        <label>list</label>
      </node>
      <node id="8467">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="8458">
        <label>limits</label>
      </node>
      <node id="8499">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="8475">
        <label>assert.h</label>
      </node>
      <node id="8469">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="8490">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="8456">
        <label>cstdint</label>
      </node>
      <node id="8500">
        <label>expression_types.h</label>
        <link refid="expression__types_8h"/>
        <childnode refid="8496" relation="include">
        </childnode>
        <childnode refid="8457" relation="include">
        </childnode>
        <childnode refid="8501" relation="include">
        </childnode>
      </node>
      <node id="8487">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="8464" relation="include">
        </childnode>
        <childnode refid="8477" relation="include">
        </childnode>
        <childnode refid="8488" relation="include">
        </childnode>
      </node>
      <node id="8465">
        <label>stdint.h</label>
      </node>
      <node id="8486">
        <label>stdlib.h</label>
      </node>
      <node id="8485">
        <label>errno.h</label>
      </node>
      <node id="8462">
        <label>stdexcept</label>
      </node>
      <node id="8457">
        <label>string</label>
      </node>
      <node id="8461">
        <label>pred_common.h</label>
        <link refid="pred__common_8h"/>
        <childnode refid="8460" relation="include">
        </childnode>
        <childnode refid="8462" relation="include">
        </childnode>
        <childnode refid="8463" relation="include">
        </childnode>
        <childnode refid="8455" relation="include">
        </childnode>
        <childnode refid="8464" relation="include">
        </childnode>
        <childnode refid="8470" relation="include">
        </childnode>
        <childnode refid="8473" relation="include">
        </childnode>
        <childnode refid="8500" relation="include">
        </childnode>
        <childnode refid="8502" relation="include">
        </childnode>
        <childnode refid="8503" relation="include">
        </childnode>
        <childnode refid="8505" relation="include">
        </childnode>
      </node>
      <node id="8454">
        <label>src/lib/access/pred_BetweenOperation.h</label>
        <link refid="pred_BetweenOperation.h"/>
        <childnode refid="8455" relation="include">
        </childnode>
        <childnode refid="8461" relation="include">
        </childnode>
      </node>
      <node id="8496">
        <label>map</label>
      </node>
      <node id="8473">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="8474" relation="include">
        </childnode>
        <childnode refid="8492" relation="include">
        </childnode>
      </node>
      <node id="8484">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="8485" relation="include">
        </childnode>
        <childnode refid="8463" relation="include">
        </childnode>
        <childnode refid="8486" relation="include">
        </childnode>
      </node>
      <node id="8495">
        <label>exception</label>
      </node>
      <node id="8479">
        <label>stddef.h</label>
      </node>
      <node id="8492">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="8464" relation="include">
        </childnode>
        <childnode refid="8477" relation="include">
        </childnode>
        <childnode refid="8487" relation="include">
        </childnode>
        <childnode refid="8488" relation="include">
        </childnode>
        <childnode refid="8493" relation="include">
        </childnode>
        <childnode refid="8491" relation="include">
        </childnode>
        <childnode refid="8495" relation="include">
        </childnode>
        <childnode refid="8460" relation="include">
        </childnode>
        <childnode refid="8496" relation="include">
        </childnode>
        <childnode refid="8459" relation="include">
        </childnode>
        <childnode refid="8497" relation="include">
        </childnode>
        <childnode refid="8498" relation="include">
        </childnode>
        <childnode refid="8499" relation="include">
        </childnode>
      </node>
      <node id="8466">
        <label>ostream</label>
      </node>
      <node id="8501">
        <label>json.h</label>
      </node>
      <node id="8497">
        <label>limits.h</label>
      </node>
      <node id="8488">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="8489" relation="include">
        </childnode>
        <childnode refid="8490" relation="include">
        </childnode>
      </node>
      <node id="8477">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="8460" relation="include">
        </childnode>
        <childnode refid="8457" relation="include">
        </childnode>
        <childnode refid="8459" relation="include">
        </childnode>
        <childnode refid="8478" relation="include">
        </childnode>
        <childnode refid="8482" relation="include">
        </childnode>
        <childnode refid="8484" relation="include">
        </childnode>
        <childnode refid="8464" relation="include">
        </childnode>
      </node>
      <node id="8504">
        <label>access/AbstractExpression.h</label>
        <link refid="_abstract_expression_8h"/>
        <childnode refid="8460" relation="include">
        </childnode>
        <childnode refid="8455" relation="include">
        </childnode>
      </node>
      <node id="8494">
        <label>string.h</label>
      </node>
      <node id="8470">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="8458" relation="include">
        </childnode>
        <childnode refid="8459" relation="include">
        </childnode>
        <childnode refid="8462" relation="include">
        </childnode>
        <childnode refid="8460" relation="include">
        </childnode>
        <childnode refid="8457" relation="include">
        </childnode>
        <childnode refid="8455" relation="include">
        </childnode>
        <childnode refid="8471" relation="include">
        </childnode>
        <childnode refid="8464" relation="include">
        </childnode>
        <childnode refid="8472" relation="include">
        </childnode>
        <childnode refid="8473" relation="include">
        </childnode>
      </node>
      <node id="8471">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="8498">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="8460">
        <label>vector</label>
      </node>
      <node id="8502">
        <label>join_predicates.h</label>
        <link refid="join__predicates_8h"/>
        <childnode refid="8455" relation="include">
        </childnode>
        <childnode refid="8500" relation="include">
        </childnode>
      </node>
      <node id="8455">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="8456" relation="include">
        </childnode>
        <childnode refid="8457" relation="include">
        </childnode>
        <childnode refid="8458" relation="include">
        </childnode>
        <childnode refid="8459" relation="include">
        </childnode>
        <childnode refid="8460" relation="include">
        </childnode>
      </node>
      <node id="8503">
        <label>pred_SimpleExpression.h</label>
        <link refid="pred___simple_expression_8h"/>
        <childnode refid="8464" relation="include">
        </childnode>
        <childnode refid="8455" relation="include">
        </childnode>
        <childnode refid="8504" relation="include">
        </childnode>
      </node>
      <node id="8489">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="8478">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="8479" relation="include">
        </childnode>
        <childnode refid="8480" relation="include">
        </childnode>
        <childnode refid="8481" relation="include">
        </childnode>
        <childnode refid="8462" relation="include">
        </childnode>
      </node>
      <node id="8476">
        <label>iostream</label>
      </node>
      <node id="8472">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="8464" relation="include">
        </childnode>
        <childnode refid="8457" relation="include">
        </childnode>
        <childnode refid="8462" relation="include">
        </childnode>
      </node>
      <node id="8468">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="8491">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="8482">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="8476" relation="include">
        </childnode>
        <childnode refid="8456" relation="include">
        </childnode>
        <childnode refid="8483" relation="include">
        </childnode>
      </node>
      <node id="8505">
        <label>pred_SimpleFieldExpression.h</label>
        <link refid="pred___simple_field_expression_8h"/>
        <childnode refid="8455" relation="include">
        </childnode>
        <childnode refid="8461" relation="include">
        </childnode>
      </node>
      <node id="8474">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="8475" relation="include">
        </childnode>
        <childnode refid="8476" relation="include">
        </childnode>
        <childnode refid="8459" relation="include">
        </childnode>
        <childnode refid="8464" relation="include">
        </childnode>
        <childnode refid="8477" relation="include">
        </childnode>
        <childnode refid="8487" relation="include">
        </childnode>
        <childnode refid="8488" relation="include">
        </childnode>
        <childnode refid="8491" relation="include">
        </childnode>
        <childnode refid="8489" relation="include">
        </childnode>
      </node>
      <node id="8480">
        <label>algorithm</label>
      </node>
      <node id="8463">
        <label>stdio.h</label>
      </node>
      <node id="8483">
        <label>cstring</label>
      </node>
      <node id="8493">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="8460" relation="include">
        </childnode>
        <childnode refid="8476" relation="include">
        </childnode>
        <childnode refid="8481" relation="include">
        </childnode>
        <childnode refid="8459" relation="include">
        </childnode>
        <childnode refid="8494" relation="include">
        </childnode>
        <childnode refid="8475" relation="include">
        </childnode>
        <childnode refid="8490" relation="include">
        </childnode>
      </node>
      <node id="8459">
        <label>memory</label>
      </node>
      <node id="8464">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="8460" relation="include">
        </childnode>
        <childnode refid="8457" relation="include">
        </childnode>
        <childnode refid="8462" relation="include">
        </childnode>
        <childnode refid="8465" relation="include">
        </childnode>
        <childnode refid="8466" relation="include">
        </childnode>
        <childnode refid="8467" relation="include">
        </childnode>
        <childnode refid="8468" relation="include">
        </childnode>
        <childnode refid="8469" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8518">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="8519">
        <label>src/lib/access/MergeJoin.hpp</label>
        <link refid="_merge_join_8hpp"/>
        <childnode refid="8510" relation="include">
        </childnode>
      </node>
      <node id="8520">
        <label>src/lib/access/pred_buildExpression.cpp</label>
        <link refid="pred__build_expression_8cpp"/>
      </node>
      <node id="8506">
        <label>src/lib/access/pred_BetweenOperation.h</label>
        <link refid="pred_BetweenOperation.h"/>
        <childnode refid="8507" relation="include">
        </childnode>
      </node>
      <node id="8514">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="8517">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="8511">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="8515">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="8512">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="8513">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="8510">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="8511" relation="include">
        </childnode>
        <childnode refid="8512" relation="include">
        </childnode>
        <childnode refid="8513" relation="include">
        </childnode>
        <childnode refid="8514" relation="include">
        </childnode>
        <childnode refid="8515" relation="include">
        </childnode>
        <childnode refid="8516" relation="include">
        </childnode>
        <childnode refid="8517" relation="include">
        </childnode>
        <childnode refid="8518" relation="include">
        </childnode>
      </node>
      <node id="8507">
        <label>src/lib/access/predicates.h</label>
        <link refid="predicates_8h"/>
        <childnode refid="8508" relation="include">
        </childnode>
        <childnode refid="8519" relation="include">
        </childnode>
        <childnode refid="8520" relation="include">
        </childnode>
        <childnode refid="8521" relation="include">
        </childnode>
        <childnode refid="8510" relation="include">
        </childnode>
      </node>
      <node id="8516">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="8508">
        <label>src/lib/access/JoinScan.h</label>
        <link refid="_join_scan_8h"/>
        <childnode refid="8509" relation="include">
        </childnode>
        <childnode refid="8510" relation="include">
        </childnode>
      </node>
      <node id="8509">
        <label>src/lib/access/JoinScan.cpp</label>
        <link refid="lib_2access_2_join_scan_8cpp"/>
      </node>
      <node id="8521">
        <label>src/lib/access/pred_expression_factory.h</label>
        <link refid="pred__expression__factory_8h"/>
        <childnode refid="8520" relation="include">
        </childnode>
        <childnode refid="8507" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_between_expression" prot="public">BetweenExpression</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifndef<sp/>SRC_LIB_ACCESS_PRED_BETWEENOPERATION_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_ACCESS_PRED_BETWEENOPERATION_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">helper/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pred__common_8h" kindref="compound">pred_common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="9" refid="class_between_expression" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_between_expression" kindref="compound">BetweenExpression</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11" refid="class_between_expression_1a080120e2df323b562d815c0fbd00a2d6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/><ref refid="class_between_expression_1a080120e2df323b562d815c0fbd00a2d6" kindref="member">lower_bound</ref>;</highlight></codeline>
<codeline lineno="12" refid="class_between_expression_1a1cf174416b480687d8d58c43021bca51" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/><ref refid="class_between_expression_1a1cf174416b480687d8d58c43021bca51" kindref="member">upper_bound</ref>;</highlight></codeline>
<codeline lineno="13" refid="class_between_expression_1a45d2515c02eac806f07006ea7d10248a" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_between_expression_1a45d2515c02eac806f07006ea7d10248a" kindref="member">lower_value</ref>;</highlight></codeline>
<codeline lineno="14" refid="class_between_expression_1a660fe050b812d06495d5af97600493ab" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_between_expression_1a660fe050b812d06495d5af97600493ab" kindref="member">upper_value</ref>;</highlight></codeline>
<codeline lineno="15" refid="class_between_expression_1a8d98ddb11f8eb8ba313287b6807a2cb5" refkind="member"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;BaseDictionary&lt;T&gt;&gt;<sp/><ref refid="class_between_expression_1a8d98ddb11f8eb8ba313287b6807a2cb5" kindref="member">valueIdMap</ref>;</highlight></codeline>
<codeline lineno="16" refid="class_between_expression_1a30cbcf3427f18f341cc0b09a6c122c9e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_between_expression_1a30cbcf3427f18f341cc0b09a6c122c9e" kindref="member">lower_value_exists</ref>;</highlight></codeline>
<codeline lineno="17" refid="class_between_expression_1aa382a5fd90e590c245dca5409fd2c8a7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_between_expression_1aa382a5fd90e590c245dca5409fd2c8a7" kindref="member">upper_value_exists</ref>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_between_expression_1aaff01795790db1e453bae0df031adf5d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_between_expression_1aaff01795790db1e453bae0df031adf5d" kindref="member">BetweenExpression</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>f,<sp/>T<sp/>_lower_value,<sp/>T<sp/>_upper_value):</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(i,<sp/>f),<sp/><ref refid="class_between_expression_1a45d2515c02eac806f07006ea7d10248a" kindref="member">lower_value</ref>(_lower_value),<sp/><ref refid="class_between_expression_1a660fe050b812d06495d5af97600493ab" kindref="member">upper_value</ref>(_upper_value)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_between_expression_1a003f18624b16a58bb57ada487b1b203f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_between_expression_1aaff01795790db1e453bae0df031adf5d" kindref="member">BetweenExpression</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/><ref refid="storage__types_8h_1ad64b8c8026a86f643d173acbb694b4f8" kindref="member">field_name_t</ref><sp/>f,<sp/>T<sp/>_lower_value,<sp/>T<sp/>_upper_value):</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(i,<sp/>f),<sp/><ref refid="class_between_expression_1a45d2515c02eac806f07006ea7d10248a" kindref="member">lower_value</ref>(_lower_value),<sp/><ref refid="class_between_expression_1a660fe050b812d06495d5af97600493ab" kindref="member">upper_value</ref>(_upper_value)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_between_expression_1a748fa9c4aad677ac15762991b2fc577d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_between_expression_1aaff01795790db1e453bae0df031adf5d" kindref="member">BetweenExpression</ref>(<ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref><sp/>_table,<sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>_field,<sp/>T<sp/>_lower_value,<sp/>T<sp/>_upper_value)<sp/>:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_field_expression" kindref="compound">SimpleFieldExpression</ref>(_table,<sp/>_field),<sp/><ref refid="class_between_expression_1a45d2515c02eac806f07006ea7d10248a" kindref="member">lower_value</ref>(_lower_value),<sp/><ref refid="class_between_expression_1a660fe050b812d06495d5af97600493ab" kindref="member">upper_value</ref>(_upper_value)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="class_between_expression_1aa484acc9f9d0a8e95d4a23118f6199b9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_between_expression_1aa484acc9f9d0a8e95d4a23118f6199b9" kindref="member">walk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t<sp/>&gt;<sp/>&amp;l)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_between_expression_1aa484acc9f9d0a8e95d4a23118f6199b9" kindref="member">SimpleFieldExpression::walk</ref>(l);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_between_expression_1a8d98ddb11f8eb8ba313287b6807a2cb5" kindref="member">valueIdMap</ref><sp/>=<sp/>std::dynamic_pointer_cast&lt;<ref refid="class_base_dictionary" kindref="compound">BaseDictionary&lt;T&gt;</ref>&gt;(<ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;dictionaryAt(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_between_expression_1a080120e2df323b562d815c0fbd00a2d6" kindref="member">lower_bound</ref>.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_between_expression_1a080120e2df323b562d815c0fbd00a2d6" kindref="member">lower_bound</ref>.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>=<sp/><ref refid="class_between_expression_1a8d98ddb11f8eb8ba313287b6807a2cb5" kindref="member">valueIdMap</ref>-&gt;getValueIdForValue(<ref refid="class_between_expression_1a45d2515c02eac806f07006ea7d10248a" kindref="member">lower_value</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_between_expression_1a30cbcf3427f18f341cc0b09a6c122c9e" kindref="member">lower_value_exists</ref><sp/>=<sp/><ref refid="class_between_expression_1a8d98ddb11f8eb8ba313287b6807a2cb5" kindref="member">valueIdMap</ref>-&gt;isValueIdValid(<ref refid="class_between_expression_1a080120e2df323b562d815c0fbd00a2d6" kindref="member">lower_bound</ref>.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref>)<sp/>&amp;&amp;<sp/><ref refid="class_between_expression_1a45d2515c02eac806f07006ea7d10248a" kindref="member">lower_value</ref><sp/>==<sp/><ref refid="class_between_expression_1a8d98ddb11f8eb8ba313287b6807a2cb5" kindref="member">valueIdMap</ref>-&gt;getValueForValueId(<ref refid="class_between_expression_1a080120e2df323b562d815c0fbd00a2d6" kindref="member">lower_bound</ref>.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_between_expression_1a1cf174416b480687d8d58c43021bca51" kindref="member">upper_bound</ref>.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_between_expression_1a1cf174416b480687d8d58c43021bca51" kindref="member">upper_bound</ref>.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>=<sp/><ref refid="class_between_expression_1a8d98ddb11f8eb8ba313287b6807a2cb5" kindref="member">valueIdMap</ref>-&gt;getValueIdForValue(<ref refid="class_between_expression_1a660fe050b812d06495d5af97600493ab" kindref="member">upper_value</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_between_expression_1aa382a5fd90e590c245dca5409fd2c8a7" kindref="member">upper_value_exists</ref><sp/>=<sp/><ref refid="class_between_expression_1a8d98ddb11f8eb8ba313287b6807a2cb5" kindref="member">valueIdMap</ref>-&gt;isValueIdValid(<ref refid="class_between_expression_1a1cf174416b480687d8d58c43021bca51" kindref="member">upper_bound</ref>.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref>)<sp/>&amp;&amp;<sp/><ref refid="class_between_expression_1a660fe050b812d06495d5af97600493ab" kindref="member">upper_value</ref><sp/>==<sp/><ref refid="class_between_expression_1a8d98ddb11f8eb8ba313287b6807a2cb5" kindref="member">valueIdMap</ref>-&gt;getValueForValueId(<ref refid="class_between_expression_1a1cf174416b480687d8d58c43021bca51" kindref="member">upper_bound</ref>.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_between_expression_1a1fd43bc66ab69aa45e612f1c3f8967ca" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_between_expression_1a1fd43bc66ab69aa45e612f1c3f8967ca" kindref="member">~BetweenExpression</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="class_between_expression_1a019dfe62d452a2c3a0bb8f2e808d661f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_between_expression_1a019dfe62d452a2c3a0bb8f2e808d661f" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>valueId<sp/>=<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;getValueId(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/>row);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((valueId.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref><sp/>==<sp/><ref refid="class_between_expression_1a080120e2df323b562d815c0fbd00a2d6" kindref="member">lower_bound</ref>.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>)<sp/>&amp;&amp;<sp/>(valueId.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref><sp/>==<sp/><ref refid="class_between_expression_1a1cf174416b480687d8d58c43021bca51" kindref="member">upper_bound</ref>.<ref refid="class_value_id_1acb1b09f9c1ba2d8866a5886afed1a13d" kindref="member">table</ref>))<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((valueId.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>&lt;=<sp/><ref refid="class_between_expression_1a1cf174416b480687d8d58c43021bca51" kindref="member">upper_bound</ref>.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref>)<sp/>&amp;&amp;<sp/>(valueId.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>&gt;=<sp/><ref refid="class_between_expression_1a080120e2df323b562d815c0fbd00a2d6" kindref="member">lower_bound</ref>.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref>))<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((valueId.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>&gt;<sp/><ref refid="class_between_expression_1a1cf174416b480687d8d58c43021bca51" kindref="member">upper_bound</ref>.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref>)<sp/>||<sp/>(valueId.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref><sp/>&lt;<sp/><ref refid="class_between_expression_1a080120e2df323b562d815c0fbd00a2d6" kindref="member">lower_bound</ref>.<ref refid="class_value_id_1aba4b7fbd1c7acac6ae904e2e5862c7af" kindref="member">valueId</ref>))<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_between_expression_1aa382a5fd90e590c245dca5409fd2c8a7" kindref="member">upper_value_exists</ref><sp/>&amp;&amp;<sp/><ref refid="class_between_expression_1a30cbcf3427f18f341cc0b09a6c122c9e" kindref="member">lower_value_exists</ref>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/>value<sp/>=<sp/><ref refid="class_simple_field_expression_1a8da8d230fd7e416f692da42a666625ec" kindref="member">table</ref>-&gt;getValue&lt;T&gt;(<ref refid="class_simple_field_expression_1ac17522bcc3e92592ed34b84d460909a7" kindref="member">field</ref>,<sp/>row);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(value<sp/>&lt;=<sp/><ref refid="class_between_expression_1a660fe050b812d06495d5af97600493ab" kindref="member">upper_value</ref>)<sp/>&amp;&amp;<sp/>(value<sp/>&gt;=<sp/><ref refid="class_between_expression_1a45d2515c02eac806f07006ea7d10248a" kindref="member">lower_value</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_ACCESS_PRED_BETWEENOPERATION_H_</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/access/pred_BetweenOperation.h"/>
  </compounddef>
</doxygen>
