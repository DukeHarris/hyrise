<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_fixed_length_vector_8h" kind="file">
    <compoundname>FixedLengthVector.h</compoundname>
    <includes local="no">atomic</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">mutex</includes>
    <includes local="no">string</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">sstream</includes>
    <includes local="no">boost/iterator/iterator_facade.hpp</includes>
    <includes refid="_abstract_attribute_vector_8h" local="no">storage/AbstractAttributeVector.h</includes>
    <includes refid="_base_attribute_vector_8h" local="no">storage/BaseAttributeVector.h</includes>
    <includes refid="_base_allocated_attribute_vector_8h" local="no">storage/BaseAllocatedAttributeVector.h</includes>
    <includes refid="_strategized_allocator_8h" local="no">memory/StrategizedAllocator.h</includes>
    <includes refid="_malloc_strategy_8h" local="no">memory/MallocStrategy.h</includes>
    <includedby refid="_example_expression_8h" local="yes">src/lib/access/ExampleExpression.h</includedby>
    <includedby refid="_histogram_8h" local="yes">src/lib/access/Histogram.h</includedby>
    <includedby refid="_prefix_sum_8h" local="yes">src/lib/access/PrefixSum.h</includedby>
    <includedby refid="_script_operation_8cpp" local="no">src/lib/access/ScriptOperation.cpp</includedby>
    <includedby refid="_attribute_vector_factory_8h" local="no">src/lib/storage/AttributeVectorFactory.h</includedby>
    <incdepgraph>
      <node id="19936">
        <label>list</label>
      </node>
      <node id="19920">
        <label>atomic</label>
      </node>
      <node id="19931">
        <label>storage/BaseAllocatedAttributeVector.h</label>
        <link refid="_base_allocated_attribute_vector_8h"/>
        <childnode refid="19930" relation="include">
        </childnode>
        <childnode refid="19932" relation="include">
        </childnode>
      </node>
      <node id="19928">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="19939">
        <label>cstdint</label>
      </node>
      <node id="19919">
        <label>src/lib/storage/FixedLengthVector.h</label>
        <link refid="FixedLengthVector.h"/>
        <childnode refid="19920" relation="include">
        </childnode>
        <childnode refid="19921" relation="include">
        </childnode>
        <childnode refid="19922" relation="include">
        </childnode>
        <childnode refid="19923" relation="include">
        </childnode>
        <childnode refid="19924" relation="include">
        </childnode>
        <childnode refid="19925" relation="include">
        </childnode>
        <childnode refid="19926" relation="include">
        </childnode>
        <childnode refid="19927" relation="include">
        </childnode>
        <childnode refid="19928" relation="include">
        </childnode>
        <childnode refid="19929" relation="include">
        </childnode>
        <childnode refid="19930" relation="include">
        </childnode>
        <childnode refid="19931" relation="include">
        </childnode>
        <childnode refid="19933" relation="include">
        </childnode>
        <childnode refid="19937" relation="include">
        </childnode>
      </node>
      <node id="19921">
        <label>errno.h</label>
      </node>
      <node id="19926">
        <label>stdexcept</label>
      </node>
      <node id="19925">
        <label>string</label>
      </node>
      <node id="19934">
        <label>stddef.h</label>
      </node>
      <node id="19927">
        <label>sstream</label>
      </node>
      <node id="19933">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="19934" relation="include">
        </childnode>
        <childnode refid="19935" relation="include">
        </childnode>
        <childnode refid="19936" relation="include">
        </childnode>
        <childnode refid="19926" relation="include">
        </childnode>
      </node>
      <node id="19922">
        <label>math.h</label>
      </node>
      <node id="19938">
        <label>iostream</label>
      </node>
      <node id="19929">
        <label>storage/AbstractAttributeVector.h</label>
        <link refid="_abstract_attribute_vector_8h"/>
      </node>
      <node id="19924">
        <label>mutex</label>
      </node>
      <node id="19930">
        <label>storage/BaseAttributeVector.h</label>
        <link refid="_base_attribute_vector_8h"/>
        <childnode refid="19923" relation="include">
        </childnode>
        <childnode refid="19926" relation="include">
        </childnode>
        <childnode refid="19929" relation="include">
        </childnode>
      </node>
      <node id="19937">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="19938" relation="include">
        </childnode>
        <childnode refid="19939" relation="include">
        </childnode>
        <childnode refid="19940" relation="include">
        </childnode>
      </node>
      <node id="19935">
        <label>algorithm</label>
      </node>
      <node id="19932">
        <label>stdio.h</label>
      </node>
      <node id="19940">
        <label>cstring</label>
      </node>
      <node id="19923">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="20002">
        <label>src/lib/storage.h</label>
        <link refid="storage_8h"/>
        <childnode refid="19969" relation="include">
        </childnode>
        <childnode refid="19970" relation="include">
        </childnode>
        <childnode refid="19971" relation="include">
        </childnode>
        <childnode refid="19972" relation="include">
        </childnode>
        <childnode refid="19973" relation="include">
        </childnode>
        <childnode refid="19974" relation="include">
        </childnode>
        <childnode refid="19975" relation="include">
        </childnode>
        <childnode refid="19976" relation="include">
        </childnode>
      </node>
      <node id="20009">
        <label>src/lib/io/shortcuts.cpp</label>
        <link refid="shortcuts_8cpp"/>
      </node>
      <node id="20004">
        <label>src/lib/access/InsertScan.cpp</label>
        <link refid="_insert_scan_8cpp"/>
      </node>
      <node id="19957">
        <label>src/lib/access/Layouter.cpp</label>
        <link refid="_layouter_8cpp"/>
      </node>
      <node id="20010">
        <label>src/lib/storage/Store.cpp</label>
        <link refid="_store_8cpp"/>
      </node>
      <node id="19997">
        <label>src/lib/storage/PointerCalculator.cpp</label>
        <link refid="_pointer_calculator_8cpp"/>
      </node>
      <node id="20013">
        <label>src/lib/storage/Table.cpp</label>
        <link refid="_table_8cpp"/>
      </node>
      <node id="20015">
        <label>src/lib/storage/TableFactory.cpp</label>
        <link refid="_table_factory_8cpp"/>
      </node>
      <node id="19959">
        <label>src/lib/access/SortScan.cpp</label>
        <link refid="lib_2access_2_sort_scan_8cpp"/>
      </node>
      <node id="20017">
        <label>src/lib/storage/TableGenerator.h</label>
        <link refid="_table_generator_8h"/>
        <childnode refid="19981" relation="include">
        </childnode>
        <childnode refid="20018" relation="include">
        </childnode>
        <childnode refid="20012" relation="include">
        </childnode>
        <childnode refid="20019" relation="include">
        </childnode>
        <childnode refid="20002" relation="include">
        </childnode>
      </node>
      <node id="19987">
        <label>src/lib/access/HashJoinProbe.cpp</label>
        <link refid="_hash_join_probe_8cpp"/>
      </node>
      <node id="19948">
        <label>src/lib/access/PrefixSum.cpp</label>
        <link refid="_prefix_sum_8cpp"/>
      </node>
      <node id="20007">
        <label>src/lib/access/UpdateScan.cpp</label>
        <link refid="_update_scan_8cpp"/>
      </node>
      <node id="19966">
        <label>src/lib/storage/MutableVerticalTable.h</label>
        <link refid="_mutable_vertical_table_8h"/>
        <childnode refid="19956" relation="include">
        </childnode>
        <childnode refid="19967" relation="include">
        </childnode>
        <childnode refid="19977" relation="include">
        </childnode>
        <childnode refid="19979" relation="include">
        </childnode>
        <childnode refid="19950" relation="include">
        </childnode>
        <childnode refid="19952" relation="include">
        </childnode>
        <childnode refid="19980" relation="include">
        </childnode>
        <childnode refid="19981" relation="include">
        </childnode>
        <childnode refid="19960" relation="include">
        </childnode>
        <childnode refid="19982" relation="include">
        </childnode>
        <childnode refid="19983" relation="include">
        </childnode>
        <childnode refid="19998" relation="include">
        </childnode>
        <childnode refid="20003" relation="include">
        </childnode>
        <childnode refid="20011" relation="include">
        </childnode>
        <childnode refid="20012" relation="include">
        </childnode>
        <childnode refid="20002" relation="include">
        </childnode>
      </node>
      <node id="19982">
        <label>src/lib/storage/MutableVerticalTable.cpp</label>
        <link refid="_mutable_vertical_table_8cpp"/>
      </node>
      <node id="19977">
        <label>src/lib/access/MultiplyRefField.h</label>
        <link refid="_multiply_ref_field_8h"/>
        <childnode refid="19978" relation="include">
        </childnode>
      </node>
      <node id="19945">
        <label>src/lib/access/TableScan.cpp</label>
        <link refid="_table_scan_8cpp"/>
      </node>
      <node id="19951">
        <label>src/lib/access/PrefixSum.h</label>
        <link refid="_prefix_sum_8h"/>
        <childnode refid="19948" relation="include">
        </childnode>
      </node>
      <node id="19941">
        <label>src/lib/storage/FixedLengthVector.h</label>
        <link refid="FixedLengthVector.h"/>
        <childnode refid="19942" relation="include">
        </childnode>
        <childnode refid="19946" relation="include">
        </childnode>
        <childnode refid="19951" relation="include">
        </childnode>
        <childnode refid="19952" relation="include">
        </childnode>
        <childnode refid="19953" relation="include">
        </childnode>
      </node>
      <node id="19965">
        <label>src/lib/storage/HorizontalTable.cpp</label>
        <link refid="_horizontal_table_8cpp"/>
      </node>
      <node id="19953">
        <label>src/lib/storage/AttributeVectorFactory.h</label>
        <link refid="_attribute_vector_factory_8h"/>
        <childnode refid="19954" relation="include">
        </childnode>
        <childnode refid="19955" relation="include">
        </childnode>
      </node>
      <node id="19976">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="19967">
        <label>src/lib/access/MergeJoin.hpp</label>
        <link refid="_merge_join_8hpp"/>
        <childnode refid="19968" relation="include">
        </childnode>
      </node>
      <node id="19947">
        <label>src/lib/access/Histogram.cpp</label>
        <link refid="_histogram_8cpp"/>
      </node>
      <node id="19949">
        <label>src/lib/access/RadixCluster.h</label>
        <link refid="_radix_cluster_8h"/>
        <childnode refid="19950" relation="include">
        </childnode>
      </node>
      <node id="19950">
        <label>src/lib/access/RadixCluster.cpp</label>
        <link refid="_radix_cluster_8cpp"/>
      </node>
      <node id="20000">
        <label>src/lib/io/TableDump.cpp</label>
        <link refid="_table_dump_8cpp"/>
      </node>
      <node id="19952">
        <label>src/lib/access/ScriptOperation.cpp</label>
        <link refid="_script_operation_8cpp"/>
      </node>
      <node id="19986">
        <label>src/lib/access/GroupByScan.cpp</label>
        <link refid="lib_2access_2_group_by_scan_8cpp"/>
      </node>
      <node id="19942">
        <label>src/lib/access/ExampleExpression.h</label>
        <link refid="_example_expression_8h"/>
        <childnode refid="19943" relation="include">
        </childnode>
        <childnode refid="19944" relation="include">
        </childnode>
        <childnode refid="19945" relation="include">
        </childnode>
      </node>
      <node id="19978">
        <label>src/lib/access/MultiplyRefField.cpp</label>
        <link refid="_multiply_ref_field_8cpp"/>
      </node>
      <node id="19972">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="19998">
        <label>src/lib/storage/PointerCalculatorFactory.cpp</label>
        <link refid="_pointer_calculator_factory_8cpp"/>
      </node>
      <node id="19943">
        <label>src/bin/perf_regression/scan_performance.cpp</label>
        <link refid="scan__performance_8cpp"/>
      </node>
      <node id="19995">
        <label>src/lib/access/ProjectionScan.cpp</label>
        <link refid="lib_2access_2_projection_scan_8cpp"/>
      </node>
      <node id="19991">
        <label>src/lib/access/insertonly_merger.cpp</label>
        <link refid="insertonly__merger_8cpp"/>
      </node>
      <node id="20008">
        <label>src/lib/io/MPassCSVLoader.cpp</label>
        <link refid="_m_pass_c_s_v_loader_8cpp"/>
      </node>
      <node id="19979">
        <label>src/lib/access/NestedLoopEquiJoin.cpp</label>
        <link refid="_nested_loop_equi_join_8cpp"/>
      </node>
      <node id="19961">
        <label>src/lib/storage/GroupValue.cpp</label>
        <link refid="_group_value_8cpp"/>
      </node>
      <node id="19975">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="19981">
        <label>src/lib/io/Loader.cpp</label>
        <link refid="_loader_8cpp"/>
      </node>
      <node id="20003">
        <label>src/lib/storage/Store.h</label>
        <link refid="_store_8h"/>
        <childnode refid="20004" relation="include">
        </childnode>
        <childnode refid="20005" relation="include">
        </childnode>
        <childnode refid="20006" relation="include">
        </childnode>
        <childnode refid="20007" relation="include">
        </childnode>
        <childnode refid="19981" relation="include">
        </childnode>
        <childnode refid="20008" relation="include">
        </childnode>
        <childnode refid="20009" relation="include">
        </childnode>
        <childnode refid="20000" relation="include">
        </childnode>
        <childnode refid="19960" relation="include">
        </childnode>
        <childnode refid="19997" relation="include">
        </childnode>
        <childnode refid="20010" relation="include">
        </childnode>
        <childnode refid="20002" relation="include">
        </childnode>
      </node>
      <node id="19990">
        <label>src/lib/access/insertonly_valid.h</label>
        <link refid="insertonly__valid_8h"/>
        <childnode refid="19989" relation="include">
        </childnode>
        <childnode refid="19991" relation="include">
        </childnode>
      </node>
      <node id="19955">
        <label>src/lib/storage/Table.h</label>
        <link refid="_table_8h"/>
        <childnode refid="19956" relation="include">
        </childnode>
        <childnode refid="19957" relation="include">
        </childnode>
        <childnode refid="19958" relation="include">
        </childnode>
        <childnode refid="19948" relation="include">
        </childnode>
        <childnode refid="19959" relation="include">
        </childnode>
        <childnode refid="19960" relation="include">
        </childnode>
        <childnode refid="19961" relation="include">
        </childnode>
        <childnode refid="19962" relation="include">
        </childnode>
        <childnode refid="19966" relation="include">
        </childnode>
        <childnode refid="20013" relation="include">
        </childnode>
        <childnode refid="20011" relation="include">
        </childnode>
        <childnode refid="20014" relation="include">
        </childnode>
        <childnode refid="20016" relation="include">
        </childnode>
        <childnode refid="20002" relation="include">
        </childnode>
      </node>
      <node id="19946">
        <label>src/lib/access/Histogram.h</label>
        <link refid="_histogram_8h"/>
        <childnode refid="19947" relation="include">
        </childnode>
        <childnode refid="19948" relation="include">
        </childnode>
        <childnode refid="19949" relation="include">
        </childnode>
      </node>
      <node id="19969">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="19973">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="19962">
        <label>src/lib/storage/HorizontalTable.h</label>
        <link refid="_horizontal_table_8h"/>
        <childnode refid="19963" relation="include">
        </childnode>
        <childnode refid="19964" relation="include">
        </childnode>
        <childnode refid="19965" relation="include">
        </childnode>
      </node>
      <node id="20019">
        <label>src/lib/storage/TestDataGenerator.cpp</label>
        <link refid="_test_data_generator_8cpp"/>
      </node>
      <node id="20014">
        <label>src/lib/storage/TableFactory.h</label>
        <link refid="_table_factory_8h"/>
        <childnode refid="19981" relation="include">
        </childnode>
        <childnode refid="19966" relation="include">
        </childnode>
        <childnode refid="20015" relation="include">
        </childnode>
        <childnode refid="20002" relation="include">
        </childnode>
      </node>
      <node id="19989">
        <label>src/lib/access/insertonly.cpp</label>
        <link refid="insertonly_8cpp"/>
      </node>
      <node id="20001">
        <label>src/lib/storage/storage_types_helper.cpp</label>
        <link refid="storage__types__helper_8cpp"/>
      </node>
      <node id="19970">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="19960">
        <label>src/lib/storage/AbstractTable.cpp</label>
        <link refid="_abstract_table_8cpp"/>
      </node>
      <node id="19964">
        <label>src/lib/access/UnionScan.cpp</label>
        <link refid="lib_2access_2_union_scan_8cpp"/>
      </node>
      <node id="19983">
        <label>src/lib/storage/PointerCalculator.h</label>
        <link refid="_pointer_calculator_8h"/>
        <childnode refid="19984" relation="include">
        </childnode>
        <childnode refid="19985" relation="include">
        </childnode>
        <childnode refid="19986" relation="include">
        </childnode>
        <childnode refid="19987" relation="include">
        </childnode>
        <childnode refid="19946" relation="include">
        </childnode>
        <childnode refid="19988" relation="include">
        </childnode>
        <childnode refid="19989" relation="include">
        </childnode>
        <childnode refid="19990" relation="include">
        </childnode>
        <childnode refid="19992" relation="include">
        </childnode>
        <childnode refid="19993" relation="include">
        </childnode>
        <childnode refid="19994" relation="include">
        </childnode>
        <childnode refid="19967" relation="include">
        </childnode>
        <childnode refid="19977" relation="include">
        </childnode>
        <childnode refid="19979" relation="include">
        </childnode>
        <childnode refid="19995" relation="include">
        </childnode>
        <childnode refid="19952" relation="include">
        </childnode>
        <childnode refid="19980" relation="include">
        </childnode>
        <childnode refid="19996" relation="include">
        </childnode>
        <childnode refid="19959" relation="include">
        </childnode>
        <childnode refid="19945" relation="include">
        </childnode>
        <childnode refid="19963" relation="include">
        </childnode>
        <childnode refid="19964" relation="include">
        </childnode>
        <childnode refid="19997" relation="include">
        </childnode>
        <childnode refid="19998" relation="include">
        </childnode>
        <childnode refid="19999" relation="include">
        </childnode>
        <childnode refid="20002" relation="include">
        </childnode>
      </node>
      <node id="19999">
        <label>src/lib/storage/storage_types_helper.h</label>
        <link refid="storage__types__helper_8h"/>
        <childnode refid="20000" relation="include">
        </childnode>
        <childnode refid="19960" relation="include">
        </childnode>
        <childnode refid="19961" relation="include">
        </childnode>
        <childnode refid="20001" relation="include">
        </childnode>
      </node>
      <node id="19980">
        <label>src/lib/access/SimpleRawTableScan.cpp</label>
        <link refid="_simple_raw_table_scan_8cpp"/>
      </node>
      <node id="20016">
        <label>src/lib/storage/TableGenerator-impl.h</label>
        <link refid="_table_generator-impl_8h"/>
        <childnode refid="20017" relation="include">
        </childnode>
      </node>
      <node id="19963">
        <label>src/lib/access/UnionAll.cpp</label>
        <link refid="_union_all_8cpp"/>
      </node>
      <node id="19971">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="20005">
        <label>src/lib/access/LayoutTable.cpp</label>
        <link refid="_layout_table_8cpp"/>
      </node>
      <node id="20011">
        <label>src/lib/storage/TableBuilder.cpp</label>
        <link refid="_table_builder_8cpp"/>
      </node>
      <node id="19968">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="19969" relation="include">
        </childnode>
        <childnode refid="19970" relation="include">
        </childnode>
        <childnode refid="19971" relation="include">
        </childnode>
        <childnode refid="19972" relation="include">
        </childnode>
        <childnode refid="19973" relation="include">
        </childnode>
        <childnode refid="19974" relation="include">
        </childnode>
        <childnode refid="19975" relation="include">
        </childnode>
        <childnode refid="19976" relation="include">
        </childnode>
      </node>
      <node id="20018">
        <label>src/lib/io/ValidityTableGeneration.cpp</label>
        <link refid="_validity_table_generation_8cpp"/>
      </node>
      <node id="19956">
        <label>src/lib/access/ExpressionScan.cpp</label>
        <link refid="_expression_scan_8cpp"/>
      </node>
      <node id="20012">
        <label>src/lib/storage/TableGenerator.cpp</label>
        <link refid="_table_generator_8cpp"/>
      </node>
      <node id="19974">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="19992">
        <label>src/lib/access/InsertOnlyOperators.cpp</label>
        <link refid="_insert_only_operators_8cpp"/>
      </node>
      <node id="20006">
        <label>src/lib/access/MergeTable.cpp</label>
        <link refid="_merge_table_8cpp"/>
      </node>
      <node id="19996">
        <label>src/lib/access/SimpleTableScan.cpp</label>
        <link refid="lib_2access_2_simple_table_scan_8cpp"/>
      </node>
      <node id="19944">
        <label>src/lib/access/ExampleExpression.cpp</label>
        <link refid="_example_expression_8cpp"/>
      </node>
      <node id="19954">
        <label>src/lib/storage/Table-impl.h</label>
        <link refid="_table-impl_8h"/>
        <childnode refid="19955" relation="include">
        </childnode>
      </node>
      <node id="19988">
        <label>src/lib/access/IndexScan.cpp</label>
        <link refid="_index_scan_8cpp"/>
      </node>
      <node id="19958">
        <label>src/lib/access/MaterializingScan.cpp</label>
        <link refid="_materializing_scan_8cpp"/>
      </node>
      <node id="19993">
        <label>src/lib/access/IntersectPositions.cpp</label>
        <link refid="_intersect_positions_8cpp"/>
      </node>
      <node id="19994">
        <label>src/lib/access/JoinScan.cpp</label>
        <link refid="lib_2access_2_join_scan_8cpp"/>
      </node>
      <node id="19985">
        <label>src/lib/access/Distinct.cpp</label>
        <link refid="_distinct_8cpp"/>
      </node>
      <node id="19984">
        <label>src/lib/access/CreateIndex.cpp</label>
        <link refid="_create_index_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_fixed_length_vector" prot="public">FixedLengthVector</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_STORAGE_FIXEDLENGTHVECTOR_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_STORAGE_FIXEDLENGTHVECTOR_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mutex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/iterator/iterator_facade.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_abstract_attribute_vector_8h" kindref="compound">storage/AbstractAttributeVector.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_base_attribute_vector_8h" kindref="compound">storage/BaseAttributeVector.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_base_allocated_attribute_vector_8h" kindref="compound">storage/BaseAllocatedAttributeVector.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_strategized_allocator_8h" kindref="compound">memory/StrategizedAllocator.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_malloc_strategy_8h" kindref="compound">memory/MallocStrategy.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FixedLengthVectorIterator;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//template<sp/>&lt;typename<sp/>T,<sp/>typename<sp/>Allocator<sp/>=<sp/>StrategizedAllocator&lt;T,<sp/>MemalignStrategy&lt;4096&gt;<sp/>&gt;<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator<sp/>=<sp/>StrategizedAllocator&lt;T,<sp/>MallocStrategy<sp/>&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="28" refid="class_fixed_length_vector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_fixed_length_vector" kindref="compound">FixedLengthVector</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_base_allocated_attribute_vector" kindref="compound">BaseAllocatedAttributeVector</ref>&lt;<sp/>FixedLengthVector&lt;T,<sp/>Allocator&gt;,<sp/>Allocator&gt;<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="30" refid="class_fixed_length_vector_1a30bb851334c770ce98a243b514797504" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/>*<ref refid="class_fixed_length_vector_1a30bb851334c770ce98a243b514797504" kindref="member">_values</ref>;</highlight></codeline>
<codeline lineno="31" refid="class_fixed_length_vector_1ab4d55672bc07d5acf7720bd0ce953954" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1ab4d55672bc07d5acf7720bd0ce953954" kindref="member">_rows</ref>;</highlight></codeline>
<codeline lineno="32" refid="class_fixed_length_vector_1aa921631f79c5f6aa809a729032a0d879" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1aa921631f79c5f6aa809a729032a0d879" kindref="member">_columns</ref>;</highlight></codeline>
<codeline lineno="33" refid="class_fixed_length_vector_1a215b7e830da7a7fd2a898c759fd7bb30" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a215b7e830da7a7fd2a898c759fd7bb30" kindref="member">_allocated_bytes</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_fixed_length_vector_1ad759dc6f633dd8a859ee43d7ae478576" refkind="member"><highlight class="normal"><sp/><sp/>std::mutex<sp/><ref refid="class_fixed_length_vector_1ad759dc6f633dd8a859ee43d7ae478576" kindref="member">_allocate_mtx</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a535b96ed380e7ce77d3134ca01f5efde" kindref="member">FixedLengthVector</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>columns,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a721e56be76b936452ad0c3df2180043c" kindref="member">~FixedLengthVector</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="class_fixed_length_vector_1a313ffe404c12360ef1b27fbb12176b30" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_fixed_length_vector_1a313ffe404c12360ef1b27fbb12176b30" kindref="member">data</ref>()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a30bb851334c770ce98a243b514797504" kindref="member">_values</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_fixed_length_vector_1adf129ec11f1c754038a6bca3412adec5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1adf129ec11f1c754038a6bca3412adec5" kindref="member">setNumRows</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1ab4d55672bc07d5acf7720bd0ce953954" kindref="member">_rows</ref><sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="class_fixed_length_vector_1a2959a5e85b497671085be18aebd67333" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a51a1d0c0e9ce0434be8d7e9c812ceac7" kindref="member">checkAccess</ref>(column,<sp/>row);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a30bb851334c770ce98a243b514797504" kindref="member">_values</ref>[row<sp/>*<sp/><ref refid="class_fixed_length_vector_1aa921631f79c5f6aa809a729032a0d879" kindref="member">_columns</ref><sp/>+<sp/>column];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="class_fixed_length_vector_1a500a003ac0cba8cee9c75d3e3c4b9ffd" kindref="member">getRef</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="class_fixed_length_vector_1a42414bcd71ad5deeb2c398b6f207addf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/>T<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a51a1d0c0e9ce0434be8d7e9c812ceac7" kindref="member">checkAccess</ref>(column,<sp/>row);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a30bb851334c770ce98a243b514797504" kindref="member">_values</ref>[row<sp/>*<sp/><ref refid="class_fixed_length_vector_1aa921631f79c5f6aa809a729032a0d879" kindref="member">_columns</ref><sp/>+<sp/>column]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1ae5af76653e782e01fc70dfbb7485bd89" kindref="member">reserve</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1acfeeb818ea4391fc7daa3143c75abd7a" kindref="member">clear</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a98af98094d2fa27569002e2151154490" kindref="member">size</ref>();</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_fixed_length_vector_1aab44a5f3dc7fd5b12cb2a98b02fc5a05" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1aab44a5f3dc7fd5b12cb2a98b02fc5a05" kindref="member">resize</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1ae5af76653e782e01fc70dfbb7485bd89" kindref="member">reserve</ref>(rows);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1ab4d55672bc07d5acf7720bd0ce953954" kindref="member">_rows</ref><sp/>=<sp/>rows;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_fixed_length_vector_1a7df930f2c2a15ff0a88f9cc4f0d3d092" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a7df930f2c2a15ff0a88f9cc4f0d3d092" kindref="member">rewriteColumn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bits)<sp/>{}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>returns<sp/>the<sp/>capacity<sp/>of<sp/>the<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_fixed_length_vector_1a1abf2d0f2f9b56aac7ef64b4c88de96f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="class_fixed_length_vector_1a1abf2d0f2f9b56aac7ef64b4c88de96f" kindref="member">capacity</ref>()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a215b7e830da7a7fd2a898c759fd7bb30" kindref="member">_allocated_bytes</ref><sp/>/<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="class_fixed_length_vector_1a892cf91e4d99636e1368fcf46508549f" kindref="member">value_type</ref>)<sp/>*<sp/><ref refid="class_fixed_length_vector_1aa921631f79c5f6aa809a729032a0d879" kindref="member">_columns</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>std::shared_ptr&lt;BaseAttributeVector&lt;T&gt;&gt;<sp/><ref refid="class_fixed_length_vector_1a06d8fb329941a9ff1dd345c31e7b3696" kindref="member">copy</ref>();</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>the<sp/>value<sp/>by<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_fixed_length_vector_1a4d1e20c4ce62f2ae945afa7196fefcdc" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_fixed_length_vector_1a4d1e20c4ce62f2ae945afa7196fefcdc" kindref="member">inc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a51a1d0c0e9ce0434be8d7e9c812ceac7" kindref="member">checkAccess</ref>(column,<sp/>row);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a30bb851334c770ce98a243b514797504" kindref="member">_values</ref>[row<sp/>*<sp/><ref refid="class_fixed_length_vector_1aa921631f79c5f6aa809a729032a0d879" kindref="member">_columns</ref><sp/>+<sp/>column]++;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Atomic<sp/>Increment<sp/>the<sp/>value<sp/>by<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="class_fixed_length_vector_1af90f06d454ea103323c5ac9764dbec6b" refkind="member"><highlight class="normal"><sp/><sp/>T<sp/><ref refid="class_fixed_length_vector_1af90f06d454ea103323c5ac9764dbec6b" kindref="member">atomic_inc</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1a51a1d0c0e9ce0434be8d7e9c812ceac7" kindref="member">checkAccess</ref>(column,<sp/>row);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>__sync_fetch_and_add(&amp;<ref refid="class_fixed_length_vector_1a30bb851334c770ce98a243b514797504" kindref="member">_values</ref>[row<sp/>*<sp/><ref refid="class_fixed_length_vector_1aa921631f79c5f6aa809a729032a0d879" kindref="member">_columns</ref><sp/>+<sp/>column],<sp/>1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="class_fixed_length_vector_1a1475874577cc04c8c94e9c05eda83f4f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_fixed_length_vector_1a1475874577cc04c8c94e9c05eda83f4f" kindref="member">print</ref>()<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::stringstream<sp/>buf;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Table:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>---<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/><ref refid="class_fixed_length_vector_1a98af98094d2fa27569002e2151154490" kindref="member">size</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j=0;<sp/>j<sp/>&lt;<sp/><ref refid="class_fixed_length_vector_1aa921631f79c5f6aa809a729032a0d879" kindref="member">_columns</ref>;<sp/>++j)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(j,<sp/>i)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>|&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>buf<sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>---&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buf.str();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_fixed_length_vector_1a892cf91e4d99636e1368fcf46508549f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_fixed_length_vector_1a892cf91e4d99636e1368fcf46508549f" kindref="member">value_type</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a90a3a3444f9a84c908f4a21100644206" kindref="member">allocate</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="class_fixed_length_vector_1a51a1d0c0e9ce0434be8d7e9c812ceac7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a51a1d0c0e9ce0434be8d7e9c812ceac7" kindref="member">checkAccess</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">&amp;<sp/>rows)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPENSIVE_ASSERTIONS</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>&gt;=<sp/><ref refid="class_fixed_length_vector_1aa921631f79c5f6aa809a729032a0d879" kindref="member">_columns</ref>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>access<sp/>column<sp/>&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespacehyrise_1aec58f00f171c12aa4ef29682158b9fc2" kindref="member">std::to_string</ref>(column)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>where<sp/>only<sp/>&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespacehyrise_1aec58f00f171c12aa4ef29682158b9fc2" kindref="member">std::to_string</ref>(<ref refid="class_fixed_length_vector_1aa921631f79c5f6aa809a729032a0d879" kindref="member">_columns</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>&gt;=<sp/><ref refid="class_fixed_length_vector_1ab4d55672bc07d5acf7720bd0ce953954" kindref="member">_rows</ref>)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::out_of_range(</highlight><highlight class="stringliteral">&quot;Trying<sp/>to<sp/>access<sp/>rows<sp/>&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespacehyrise_1aec58f00f171c12aa4ef29682158b9fc2" kindref="member">std::to_string</ref>(rows)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>where<sp/>only<sp/>&apos;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="namespacehyrise_1aec58f00f171c12aa4ef29682158b9fc2" kindref="member">std::to_string</ref>(<ref refid="class_fixed_length_vector_1ab4d55672bc07d5acf7720bd0ce953954" kindref="member">_rows</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;&apos;<sp/>available&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="131" refid="class_fixed_length_vector_1a535b96ed380e7ce77d3134ca01f5efde" refkind="member"><highlight class="normal"><ref refid="class_fixed_length_vector_1a535b96ed380e7ce77d3134ca01f5efde" kindref="member">FixedLengthVector&lt;T, Allocator&gt;::FixedLengthVector</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>columns,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows)<sp/>:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>_values(<ref refid="csb__tree_8cpp_1ab979d9d4b4923f7c54d6caa6e1a61936" kindref="member">nullptr</ref>),<sp/>_rows(0),<sp/>_columns(columns),<sp/>_allocated_bytes(0)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_fixed_length_vector_1ae5af76653e782e01fc70dfbb7485bd89" kindref="member">reserve</ref>(rows);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="139" refid="class_fixed_length_vector_1a721e56be76b936452ad0c3df2180043c" refkind="member"><highlight class="normal"><ref refid="class_fixed_length_vector_1a721e56be76b936452ad0c3df2180043c" kindref="member">FixedLengthVector&lt;T, Allocator&gt;::~FixedLengthVector</ref>()<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>Allocator::Strategy::deallocate(_values,<sp/>_allocated_bytes);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="144" refid="class_fixed_length_vector_1a500a003ac0cba8cee9c75d3e3c4b9ffd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="class_fixed_length_vector_1a500a003ac0cba8cee9c75d3e3c4b9ffd" kindref="member">FixedLengthVector&lt;T, Allocator&gt;::getRef</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>checkAccess(column,<sp/>row);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_values[row<sp/>*<sp/>_columns<sp/>+<sp/>column];</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="151" refid="class_fixed_length_vector_1ae5af76653e782e01fc70dfbb7485bd89" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1ae5af76653e782e01fc70dfbb7485bd89" kindref="member">FixedLengthVector&lt;T, Allocator&gt;::reserve</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>allocate(_columns<sp/>*<sp/>rows<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T));</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="156" refid="class_fixed_length_vector_1acfeeb818ea4391fc7daa3143c75abd7a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1acfeeb818ea4391fc7daa3143c75abd7a" kindref="member">FixedLengthVector&lt;T, Allocator&gt;::clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>allocate(8);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>_rows<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="162" refid="class_fixed_length_vector_1a98af98094d2fa27569002e2151154490" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a98af98094d2fa27569002e2151154490" kindref="member">FixedLengthVector&lt;T, Allocator&gt;::size</ref>()<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_rows;</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="167" refid="class_fixed_length_vector_1a90a3a3444f9a84c908f4a21100644206" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_fixed_length_vector_1a90a3a3444f9a84c908f4a21100644206" kindref="member">FixedLengthVector&lt;T, Allocator&gt;::allocate</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>std::lock_guard&lt;std::mutex&gt;<sp/>guard(_allocate_mtx);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes<sp/>!=<sp/>_allocated_bytes)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*new_values<sp/>=<sp/>Allocator::Strategy::reallocate(_values,<sp/>bytes,<sp/>_allocated_bytes);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes<sp/>&gt;<sp/>_allocated_bytes)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/>new_values)<sp/>+<sp/>_allocated_bytes,<sp/>0,<sp/>bytes<sp/>-<sp/>_allocated_bytes);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_values<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Allocator::Strategy::deallocate(_values,<sp/>_allocated_bytes);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::bad_alloc();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>_values<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(new_values);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>_allocated_bytes<sp/>=<sp/>bytes;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Allocator&gt;</highlight></codeline>
<codeline lineno="188" refid="class_fixed_length_vector_1a06d8fb329941a9ff1dd345c31e7b3696" refkind="member"><highlight class="normal">std::shared_ptr&lt;BaseAttributeVector&lt;T&gt;&gt;<sp/><ref refid="class_fixed_length_vector_1a06d8fb329941a9ff1dd345c31e7b3696" kindref="member">FixedLengthVector&lt;T, Allocator&gt;::copy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>copy<sp/>=<sp/>std::make_shared&lt;FixedLengthVector&lt;T,<sp/>Allocator&gt;&gt;(_columns,<sp/>_rows);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>copy-&gt;_rows<sp/>=<sp/>_rows;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>copy-&gt;allocate(_allocated_bytes);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/>memcpy(copy-&gt;_values,<sp/>_values,<sp/>_allocated_bytes);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>copy;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_STORAGE_FIXEDLENGTHVECTOR_H_</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/storage/FixedLengthVector.h"/>
  </compounddef>
</doxygen>
