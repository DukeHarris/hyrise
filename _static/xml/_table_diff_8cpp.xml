<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_table_diff_8cpp" kind="file">
    <compoundname>TableDiff.cpp</compoundname>
    <includes refid="_table_diff_8h" local="yes">TableDiff.h</includes>
    <includes refid="_abstract_table_8h" local="no">storage/AbstractTable.h</includes>
    <includes refid="meta__storage_8h" local="no">storage/meta_storage.h</includes>
    <incdepgraph>
      <node id="23246">
        <label>list</label>
      </node>
      <node id="23268">
        <label>boost/mpl/size.hpp</label>
      </node>
      <node id="23229">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="23233">
        <label>limits</label>
      </node>
      <node id="23264">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="23240">
        <label>assert.h</label>
      </node>
      <node id="23219">
        <label>src/lib/storage/TableDiff.cpp</label>
        <link refid="TableDiff.cpp"/>
        <childnode refid="23220" relation="include">
        </childnode>
        <childnode refid="23232" relation="include">
        </childnode>
        <childnode refid="23265" relation="include">
        </childnode>
      </node>
      <node id="23231">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="23256">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="23235">
        <label>cstdint</label>
      </node>
      <node id="23253">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="23224" relation="include">
        </childnode>
        <childnode refid="23242" relation="include">
        </childnode>
        <childnode refid="23254" relation="include">
        </childnode>
      </node>
      <node id="23227">
        <label>stdint.h</label>
      </node>
      <node id="23252">
        <label>stdlib.h</label>
      </node>
      <node id="23250">
        <label>errno.h</label>
      </node>
      <node id="23226">
        <label>stdexcept</label>
      </node>
      <node id="23225">
        <label>string</label>
      </node>
      <node id="23266">
        <label>boost/mpl/at.hpp</label>
      </node>
      <node id="23222">
        <label>map</label>
      </node>
      <node id="23238">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="23239" relation="include">
        </childnode>
        <childnode refid="23258" relation="include">
        </childnode>
      </node>
      <node id="23249">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="23250" relation="include">
        </childnode>
        <childnode refid="23251" relation="include">
        </childnode>
        <childnode refid="23252" relation="include">
        </childnode>
      </node>
      <node id="23261">
        <label>exception</label>
      </node>
      <node id="23244">
        <label>stddef.h</label>
      </node>
      <node id="23258">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="23224" relation="include">
        </childnode>
        <childnode refid="23242" relation="include">
        </childnode>
        <childnode refid="23253" relation="include">
        </childnode>
        <childnode refid="23254" relation="include">
        </childnode>
        <childnode refid="23259" relation="include">
        </childnode>
        <childnode refid="23257" relation="include">
        </childnode>
        <childnode refid="23261" relation="include">
        </childnode>
        <childnode refid="23221" relation="include">
        </childnode>
        <childnode refid="23222" relation="include">
        </childnode>
        <childnode refid="23223" relation="include">
        </childnode>
        <childnode refid="23262" relation="include">
        </childnode>
        <childnode refid="23263" relation="include">
        </childnode>
        <childnode refid="23264" relation="include">
        </childnode>
      </node>
      <node id="23228">
        <label>ostream</label>
      </node>
      <node id="23262">
        <label>limits.h</label>
      </node>
      <node id="23220">
        <label>TableDiff.h</label>
        <link refid="_table_diff_8h"/>
        <childnode refid="23221" relation="include">
        </childnode>
        <childnode refid="23222" relation="include">
        </childnode>
        <childnode refid="23223" relation="include">
        </childnode>
        <childnode refid="23224" relation="include">
        </childnode>
      </node>
      <node id="23254">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="23255" relation="include">
        </childnode>
        <childnode refid="23256" relation="include">
        </childnode>
      </node>
      <node id="23242">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="23221" relation="include">
        </childnode>
        <childnode refid="23225" relation="include">
        </childnode>
        <childnode refid="23223" relation="include">
        </childnode>
        <childnode refid="23243" relation="include">
        </childnode>
        <childnode refid="23247" relation="include">
        </childnode>
        <childnode refid="23249" relation="include">
        </childnode>
        <childnode refid="23224" relation="include">
        </childnode>
      </node>
      <node id="23260">
        <label>string.h</label>
      </node>
      <node id="23232">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="23233" relation="include">
        </childnode>
        <childnode refid="23223" relation="include">
        </childnode>
        <childnode refid="23226" relation="include">
        </childnode>
        <childnode refid="23221" relation="include">
        </childnode>
        <childnode refid="23225" relation="include">
        </childnode>
        <childnode refid="23234" relation="include">
        </childnode>
        <childnode refid="23236" relation="include">
        </childnode>
        <childnode refid="23224" relation="include">
        </childnode>
        <childnode refid="23237" relation="include">
        </childnode>
        <childnode refid="23238" relation="include">
        </childnode>
      </node>
      <node id="23236">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="23263">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="23221">
        <label>vector</label>
      </node>
      <node id="23267">
        <label>boost/mpl/int.hpp</label>
      </node>
      <node id="23234">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="23235" relation="include">
        </childnode>
        <childnode refid="23225" relation="include">
        </childnode>
        <childnode refid="23233" relation="include">
        </childnode>
        <childnode refid="23223" relation="include">
        </childnode>
        <childnode refid="23221" relation="include">
        </childnode>
      </node>
      <node id="23265">
        <label>storage/meta_storage.h</label>
        <link refid="meta__storage_8h"/>
        <childnode refid="23226" relation="include">
        </childnode>
        <childnode refid="23266" relation="include">
        </childnode>
        <childnode refid="23267" relation="include">
        </childnode>
        <childnode refid="23268" relation="include">
        </childnode>
        <childnode refid="23224" relation="include">
        </childnode>
      </node>
      <node id="23255">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="23243">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="23244" relation="include">
        </childnode>
        <childnode refid="23245" relation="include">
        </childnode>
        <childnode refid="23246" relation="include">
        </childnode>
        <childnode refid="23226" relation="include">
        </childnode>
      </node>
      <node id="23241">
        <label>iostream</label>
      </node>
      <node id="23237">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="23224" relation="include">
        </childnode>
        <childnode refid="23225" relation="include">
        </childnode>
        <childnode refid="23226" relation="include">
        </childnode>
      </node>
      <node id="23230">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="23257">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="23247">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="23241" relation="include">
        </childnode>
        <childnode refid="23235" relation="include">
        </childnode>
        <childnode refid="23248" relation="include">
        </childnode>
      </node>
      <node id="23239">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="23240" relation="include">
        </childnode>
        <childnode refid="23241" relation="include">
        </childnode>
        <childnode refid="23223" relation="include">
        </childnode>
        <childnode refid="23224" relation="include">
        </childnode>
        <childnode refid="23242" relation="include">
        </childnode>
        <childnode refid="23253" relation="include">
        </childnode>
        <childnode refid="23254" relation="include">
        </childnode>
        <childnode refid="23257" relation="include">
        </childnode>
        <childnode refid="23255" relation="include">
        </childnode>
      </node>
      <node id="23245">
        <label>algorithm</label>
      </node>
      <node id="23251">
        <label>stdio.h</label>
      </node>
      <node id="23248">
        <label>cstring</label>
      </node>
      <node id="23259">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="23221" relation="include">
        </childnode>
        <childnode refid="23241" relation="include">
        </childnode>
        <childnode refid="23246" relation="include">
        </childnode>
        <childnode refid="23223" relation="include">
        </childnode>
        <childnode refid="23260" relation="include">
        </childnode>
        <childnode refid="23240" relation="include">
        </childnode>
        <childnode refid="23256" relation="include">
        </childnode>
      </node>
      <node id="23223">
        <label>memory</label>
      </node>
      <node id="23224">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="23221" relation="include">
        </childnode>
        <childnode refid="23225" relation="include">
        </childnode>
        <childnode refid="23226" relation="include">
        </childnode>
        <childnode refid="23227" relation="include">
        </childnode>
        <childnode refid="23228" relation="include">
        </childnode>
        <childnode refid="23229" relation="include">
        </childnode>
        <childnode refid="23230" relation="include">
        </childnode>
        <childnode refid="23231" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_table_diff_8h" kindref="compound">TableDiff.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_abstract_table_8h" kindref="compound">storage/AbstractTable.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="meta__storage_8h" kindref="compound">storage/meta_storage.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="structhyrise_1_1storage_1_1type__switch" kindref="compound">hyrise::storage::type_switch&lt;hyrise_basic_types&gt;</ref><sp/>ts;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">EqualValueFunctor<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_left;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>_right;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;_line_left,<sp/>_line_right;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;_col_left,<sp/>_col_right;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value_type;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>EqualValueFunctor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>left,</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>right,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;line_left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>&amp;line_right,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>&amp;col_left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>&amp;col_right)<sp/>:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>_left(left),<sp/>_right(right),</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>_line_left(line_left),<sp/>_line_right(line_right),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>_col_left(col_left),<sp/>_col_right(col_right)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>{}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>R&gt;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()()<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_left-&gt;getValue&lt;R&gt;(_col_left,<sp/>_line_left)<sp/>==<sp/>_right-&gt;getValue&lt;R&gt;(_col_right,<sp/>_line_right);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>line_equal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>left,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>right,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>line_left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>line_right,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;field_t,<sp/>field_t&gt;<sp/>mapFields)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>col_left<sp/>=<sp/>0;<sp/>col_left<sp/>&lt;<sp/>left-&gt;<ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>++col_left)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>column_name<sp/>=<sp/>left-&gt;<ref refid="class_abstract_table_1aa126cb17995eef9d0833ff2a4a673853" kindref="member">nameOfColumn</ref>(col_left);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>col_right;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mapFields.find(col_left)<sp/>==<sp/>mapFields.end())</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>col_right<sp/>=<sp/>mapFields[col_left];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>EqualValueFunctor<sp/>ev(left,<sp/>right,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_left,<sp/>line_right,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_left,<sp/>col_right);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>equal<sp/>=<sp/>ts(left-&gt;<ref refid="class_abstract_table_1ad6de2b7c7b99098e9766b060b4d4b8c7" kindref="member">typeOfColumn</ref>(col_left),<sp/>ev);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!equal)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">std::map&lt;field_t,<sp/>field_t&gt;<sp/>compareSchemes(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>left,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>std::map&lt;field_t,<sp/>field_t&gt;<sp/>m;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>col_left<sp/>=<sp/>0;<sp/>col_left<sp/>&lt;<sp/>left-&gt;<ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>col_left++)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>col_right<sp/>=<sp/>right-&gt;<ref refid="class_abstract_table_1aaea606e4fd8c92a43febced405de1c6c" kindref="member">numberOfColumn</ref>(left-&gt;<ref refid="class_abstract_table_1aa126cb17995eef9d0833ff2a4a673853" kindref="member">nameOfColumn</ref>(col_left));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m[col_left]<sp/>=<sp/>col_right;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(<ref refid="class_missing_column_exception" kindref="compound">MissingColumnException</ref><sp/>exception)<sp/>{}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}<sp/></highlight><highlight class="comment">//namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="class_table_diff_1aec3f42e05ab23f5d24075a65f8a120ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1aec3f42e05ab23f5d24075a65f8a120ff" kindref="member">TableDiff::compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1afb3c1ba4da3387f3441a2baad8ca6a4f" kindref="member">TableDiff::RelationEqType</ref><sp/>eqType)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(eqType)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1afb3c1ba4da3387f3441a2baad8ca6a4fa4a016008eb4c31a3a8c647851403f4de" kindref="member">TableDiff::RelationEq</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1aabd53adc062850ae461747d7fcf55828" kindref="member">equal</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1afb3c1ba4da3387f3441a2baad8ca6a4fa69fdf704e360dac18621929ec9b0931d" kindref="member">TableDiff::RelationEqSorted</ref>:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1aa1fbaf4083a5ec99ca3f6da73b292d1c" kindref="member">equalSorted</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//connot<sp/>happen<sp/>but<sp/>there<sp/>is<sp/>a<sp/>compiler<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78" refid="class_table_diff_1aabd53adc062850ae461747d7fcf55828" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1aabd53adc062850ae461747d7fcf55828" kindref="member">TableDiff::equal</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1af3c16ebe9ae6ddaea7dc8570746f1fa6" kindref="member">rowsMatched</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_table_diff_1a67b4394614a4131e58640bdb2fd99c70" kindref="member">schemesMatched</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81" refid="class_table_diff_1aa1fbaf4083a5ec99ca3f6da73b292d1c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1aa1fbaf4083a5ec99ca3f6da73b292d1c" kindref="member">TableDiff::equalSorted</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1a6ff83efeb648c0cd9f37b03d884756a2" kindref="member">rowsMatchedSorted</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_table_diff_1a67b4394614a4131e58640bdb2fd99c70" kindref="member">schemesMatched</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_table_diff_1a67b4394614a4131e58640bdb2fd99c70" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1a67b4394614a4131e58640bdb2fd99c70" kindref="member">TableDiff::schemesMatched</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/><ref refid="class_table_diff_1abd2d1d75c9d5a0e0b97a9abfe3bcff56" kindref="member">fields</ref>.begin();<sp/>i<sp/>!=<sp/><ref refid="class_table_diff_1abd2d1d75c9d5a0e0b97a9abfe3bcff56" kindref="member">fields</ref>.end();<sp/>i++)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*i<sp/>!=<sp/><ref refid="class_table_diff_1a9d12bc57dc56ca5498e945912afb1879ae9cfc8f658090daf11e84f27bac57879" kindref="member">TableDiff::FieldCorrect</ref>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="class_table_diff_1a6ff83efeb648c0cd9f37b03d884756a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1a6ff83efeb648c0cd9f37b03d884756a2" kindref="member">TableDiff::rowsMatchedSorted</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1ac1c038a5d4ad5bdf7679d6c1894ef54c" kindref="member">wrongRows</ref>.empty()<sp/>&amp;&amp;<sp/><ref refid="class_table_diff_1a4be97a2ae477903c0c85972bda950860" kindref="member">falsePositionRows</ref>.empty();</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95" refid="class_table_diff_1af3c16ebe9ae6ddaea7dc8570746f1fa6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1af3c16ebe9ae6ddaea7dc8570746f1fa6" kindref="member">TableDiff::rowsMatched</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_table_diff_1ac1c038a5d4ad5bdf7679d6c1894ef54c" kindref="member">wrongRows</ref>.empty();</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_table_diff_1a6b883a5406b2f00a527e9e2b708d8ce5" refkind="member"><highlight class="normal"><ref refid="class_table_diff" kindref="compound">TableDiff</ref><sp/><ref refid="class_table_diff_1a6b883a5406b2f00a527e9e2b708d8ce5" kindref="member">TableDiff::diffTables</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>left,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table" kindref="compound">AbstractTable</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><ref refid="class_table_diff" kindref="compound">TableDiff</ref><sp/>diff;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>std::vector&lt;bool&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seen_right(right-&gt;<ref refid="class_abstract_table_1a2b3fde5fb0c70f288eda47c4c66bb151" kindref="member">size</ref>(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>mapFields<sp/>=<sp/>compareSchemes(left<sp/>,right);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//compare<sp/>relation<sp/>scheme</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>diff.<ref refid="class_table_diff_1abd2d1d75c9d5a0e0b97a9abfe3bcff56" kindref="member">fields</ref>.resize(left-&gt;<ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>(),<sp/><ref refid="class_table_diff_1a9d12bc57dc56ca5498e945912afb1879a99322223dea5df7571561dc3f63b2dee" kindref="member">TableDiff::FieldWrong</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>mapFields.begin();<sp/>i<sp/>!=<sp/>mapFields.end();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(right-&gt;<ref refid="class_abstract_table_1ad6de2b7c7b99098e9766b060b4d4b8c7" kindref="member">typeOfColumn</ref>(i-&gt;second)<sp/>==<sp/>left-&gt;<ref refid="class_abstract_table_1ad6de2b7c7b99098e9766b060b4d4b8c7" kindref="member">typeOfColumn</ref>(i-&gt;first))</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>diff.<ref refid="class_table_diff_1abd2d1d75c9d5a0e0b97a9abfe3bcff56" kindref="member">fields</ref>[i-&gt;first]<sp/>=<sp/><ref refid="class_table_diff_1a9d12bc57dc56ca5498e945912afb1879ae9cfc8f658090daf11e84f27bac57879" kindref="member">TableDiff::FieldCorrect</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>diff.<ref refid="class_table_diff_1abd2d1d75c9d5a0e0b97a9abfe3bcff56" kindref="member">fields</ref>[i-&gt;first]<sp/>=<sp/><ref refid="class_table_diff_1a9d12bc57dc56ca5498e945912afb1879a18bfca2f3d97c9d43380a85a7bf498eb" kindref="member">TableDiff::FieldWrongType</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//remove<sp/>wrong<sp/>typed<sp/>fields<sp/>from<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>diff.<ref refid="class_table_diff_1abd2d1d75c9d5a0e0b97a9abfe3bcff56" kindref="member">fields</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(diff.<ref refid="class_table_diff_1abd2d1d75c9d5a0e0b97a9abfe3bcff56" kindref="member">fields</ref>[i]<sp/>!=<sp/><ref refid="class_table_diff_1a9d12bc57dc56ca5498e945912afb1879ae9cfc8f658090daf11e84f27bac57879" kindref="member">FieldCorrect</ref>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mapFields.erase(i);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//compare<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>line_left<sp/>=<sp/>0;<sp/>line_left<sp/>&lt;<sp/>left-&gt;<ref refid="class_abstract_table_1a2b3fde5fb0c70f288eda47c4c66bb151" kindref="member">size</ref>();<sp/>++line_left)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>foundMatch<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>line_right<sp/>=<sp/>0;<sp/>line_right<sp/>&lt;<sp/>right-&gt;<ref refid="class_abstract_table_1a2b3fde5fb0c70f288eda47c4c66bb151" kindref="member">size</ref>();<sp/>++line_right)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>let&apos;s<sp/>not<sp/>check<sp/>lines<sp/>that<sp/>have<sp/>already<sp/>been<sp/>marked<sp/>as<sp/>seen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seen_right[line_right])</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_equal(left,<sp/>right,<sp/>line_left,<sp/>line_right,<sp/>mapFields))<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seen_right[line_right]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_left<sp/>!=<sp/>line_right)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diff.<ref refid="class_table_diff_1a4be97a2ae477903c0c85972bda950860" kindref="member">falsePositionRows</ref>[line_left]=line_right;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>foundMatch<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!foundMatch)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>diff.<ref refid="class_table_diff_1ac1c038a5d4ad5bdf7679d6c1894ef54c" kindref="member">wrongRows</ref>.push_back(line_left);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>diff;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/storage/TableDiff.cpp"/>
  </compounddef>
</doxygen>
