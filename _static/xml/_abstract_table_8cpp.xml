<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_abstract_table_8cpp" kind="file">
    <compoundname>AbstractTable.cpp</compoundname>
    <includes refid="_numa_strategy_8h" local="no">memory/NumaStrategy.h</includes>
    <includes refid="_memalign_strategy_8h" local="no">memory/MemalignStrategy.h</includes>
    <includes refid="_abstract_table_8h" local="no">storage/AbstractTable.h</includes>
    <includes refid="_mutable_vertical_table_8h" local="no">storage/MutableVerticalTable.h</includes>
    <includes refid="_table_8h" local="no">storage/Table.h</includes>
    <includes refid="_store_8h" local="no">storage/Store.h</includes>
    <includes refid="_column_metadata_8h" local="no">storage/ColumnMetadata.h</includes>
    <includes refid="storage__types_8h" local="no">storage/storage_types.h</includes>
    <includes refid="_pretty_printer_8h" local="no">storage/PrettyPrinter.h</includes>
    <includes refid="storage__types__helper_8h" local="no">storage/storage_types_helper.h</includes>
    <includes refid="_table_diff_8h" local="no">storage/TableDiff.h</includes>
    <includes refid="_table_utils_8h" local="no">storage/TableUtils.h</includes>
    <includes local="no">fstream</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="18052">
        <label>list</label>
      </node>
      <node id="18098">
        <label>boost/mpl/size.hpp</label>
      </node>
      <node id="18075">
        <label>atomic</label>
      </node>
      <node id="18079">
        <label>storage/BaseAllocatedAttributeVector.h</label>
        <link refid="_base_allocated_attribute_vector_8h"/>
        <childnode refid="18071" relation="include">
        </childnode>
        <childnode refid="18028" relation="include">
        </childnode>
      </node>
      <node id="18041">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="18030">
        <label>limits</label>
      </node>
      <node id="18067">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="18070">
        <label>storage/AbstractAllocatedTable.h</label>
        <link refid="_abstract_allocated_table_8h"/>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18053" relation="include">
        </childnode>
        <childnode refid="18026" relation="include">
        </childnode>
      </node>
      <node id="18047">
        <label>assert.h</label>
      </node>
      <node id="18043">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="18058">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="18036">
        <label>cstdint</label>
      </node>
      <node id="18068">
        <label>storage/MutableVerticalTable.h</label>
        <link refid="_mutable_vertical_table_8h"/>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18069" relation="include">
        </childnode>
        <childnode refid="18083" relation="include">
        </childnode>
        <childnode refid="18044" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
      </node>
      <node id="18099">
        <label>storage/cast_functor.h</label>
        <link refid="cast__functor_8h"/>
        <childnode refid="18043" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
      </node>
      <node id="18074">
        <label>storage/FixedLengthVector.h</label>
        <link refid="_fixed_length_vector_8h"/>
        <childnode refid="18075" relation="include">
        </childnode>
        <childnode refid="18027" relation="include">
        </childnode>
        <childnode refid="18076" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18077" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18032" relation="include">
        </childnode>
        <childnode refid="18078" relation="include">
        </childnode>
        <childnode refid="18058" relation="include">
        </childnode>
        <childnode refid="18072" relation="include">
        </childnode>
        <childnode refid="18071" relation="include">
        </childnode>
        <childnode refid="18079" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18053" relation="include">
        </childnode>
      </node>
      <node id="18055">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18048" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
      </node>
      <node id="18073">
        <label>storage/AttributeVectorFactory.h</label>
        <link refid="_attribute_vector_factory_8h"/>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18071" relation="include">
        </childnode>
        <childnode refid="18074" relation="include">
        </childnode>
        <childnode refid="18080" relation="include">
        </childnode>
      </node>
      <node id="18039">
        <label>stdint.h</label>
      </node>
      <node id="18024">
        <label>stdlib.h</label>
      </node>
      <node id="18082">
        <label>cmath</label>
      </node>
      <node id="18027">
        <label>errno.h</label>
      </node>
      <node id="18032">
        <label>stdexcept</label>
      </node>
      <node id="18034">
        <label>string</label>
      </node>
      <node id="18096">
        <label>boost/mpl/at.hpp</label>
      </node>
      <node id="18064">
        <label>map</label>
      </node>
      <node id="18045">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="18046" relation="include">
        </childnode>
        <childnode refid="18060" relation="include">
        </childnode>
      </node>
      <node id="18026">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="18027" relation="include">
        </childnode>
        <childnode refid="18028" relation="include">
        </childnode>
        <childnode refid="18024" relation="include">
        </childnode>
      </node>
      <node id="18063">
        <label>exception</label>
      </node>
      <node id="18050">
        <label>stddef.h</label>
      </node>
      <node id="18102">
        <label>fstream</label>
      </node>
      <node id="18060">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18048" relation="include">
        </childnode>
        <childnode refid="18055" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
        <childnode refid="18061" relation="include">
        </childnode>
        <childnode refid="18059" relation="include">
        </childnode>
        <childnode refid="18063" relation="include">
        </childnode>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18064" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18065" relation="include">
        </childnode>
        <childnode refid="18066" relation="include">
        </childnode>
        <childnode refid="18067" relation="include">
        </childnode>
      </node>
      <node id="18040">
        <label>ostream</label>
      </node>
      <node id="18086">
        <label>storage/AbstractMergeStrategy.h</label>
        <link refid="_abstract_merge_strategy_8h"/>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
      </node>
      <node id="18065">
        <label>limits.h</label>
      </node>
      <node id="18101">
        <label>storage/TableDiff.h</label>
        <link refid="_table_diff_8h"/>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18064" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
      </node>
      <node id="18056">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="18057" relation="include">
        </childnode>
        <childnode refid="18058" relation="include">
        </childnode>
      </node>
      <node id="18084">
        <label>storage/Store.h</label>
        <link refid="_store_8h"/>
        <childnode refid="18068" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
        <childnode refid="18085" relation="include">
        </childnode>
        <childnode refid="18090" relation="include">
        </childnode>
        <childnode refid="18091" relation="include">
        </childnode>
        <childnode refid="18070" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
      </node>
      <node id="18048">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18049" relation="include">
        </childnode>
        <childnode refid="18053" relation="include">
        </childnode>
        <childnode refid="18026" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
      </node>
      <node id="18069">
        <label>storage/Table.h</label>
        <link refid="_table_8h"/>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18044" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
        <childnode refid="18048" relation="include">
        </childnode>
        <childnode refid="18070" relation="include">
        </childnode>
        <childnode refid="18071" relation="include">
        </childnode>
        <childnode refid="18073" relation="include">
        </childnode>
        <childnode refid="18081" relation="include">
        </childnode>
      </node>
      <node id="18023">
        <label>memory/NumaStrategy.h</label>
        <link refid="_numa_strategy_8h"/>
        <childnode refid="18024" relation="include">
        </childnode>
        <childnode refid="18025" relation="include">
        </childnode>
      </node>
      <node id="18062">
        <label>string.h</label>
      </node>
      <node id="18029">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="18030" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18032" relation="include">
        </childnode>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18037" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18044" relation="include">
        </childnode>
        <childnode refid="18045" relation="include">
        </childnode>
      </node>
      <node id="18037">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="18083">
        <label>storage/TableFactory.h</label>
        <link refid="_table_factory_8h"/>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
        <childnode refid="18069" relation="include">
        </childnode>
      </node>
      <node id="18093">
        <label>storage/PrettyPrinter.h</label>
        <link refid="_pretty_printer_8h"/>
        <childnode refid="18035" relation="include">
        </childnode>
      </node>
      <node id="18087">
        <label>storage/AbstractMerger.h</label>
        <link refid="_abstract_merger_8h"/>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18088" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
        <childnode refid="18089" relation="include">
        </childnode>
      </node>
      <node id="18066">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="18033">
        <label>vector</label>
      </node>
      <node id="18090">
        <label>storage/LogarithmicMergeStrategy.h</label>
        <link refid="_logarithmic_merge_strategy_8h"/>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18086" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
      </node>
      <node id="18097">
        <label>boost/mpl/int.hpp</label>
      </node>
      <node id="18035">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="18036" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18030" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18033" relation="include">
        </childnode>
      </node>
      <node id="18078">
        <label>sstream</label>
      </node>
      <node id="18095">
        <label>storage/meta_storage.h</label>
        <link refid="meta__storage_8h"/>
        <childnode refid="18032" relation="include">
        </childnode>
        <childnode refid="18096" relation="include">
        </childnode>
        <childnode refid="18097" relation="include">
        </childnode>
        <childnode refid="18098" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
      </node>
      <node id="18022">
        <label>src/lib/storage/AbstractTable.cpp</label>
        <link refid="AbstractTable.cpp"/>
        <childnode refid="18023" relation="include">
        </childnode>
        <childnode refid="18026" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
        <childnode refid="18068" relation="include">
        </childnode>
        <childnode refid="18069" relation="include">
        </childnode>
        <childnode refid="18084" relation="include">
        </childnode>
        <childnode refid="18044" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18093" relation="include">
        </childnode>
        <childnode refid="18094" relation="include">
        </childnode>
        <childnode refid="18101" relation="include">
        </childnode>
        <childnode refid="18089" relation="include">
        </childnode>
        <childnode refid="18102" relation="include">
        </childnode>
        <childnode refid="18025" relation="include">
        </childnode>
      </node>
      <node id="18092">
        <label>storage/DictionaryPosition.h</label>
        <link refid="_dictionary_position_8h"/>
      </node>
      <node id="18100">
        <label>storage/PointerCalculator.h</label>
        <link refid="_pointer_calculator_8h"/>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18078" relation="include">
        </childnode>
        <childnode refid="18051" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
        <childnode refid="18068" relation="include">
        </childnode>
      </node>
      <node id="18091">
        <label>storage/SequentialHeapMerger.h</label>
        <link refid="_sequential_heap_merger_8h"/>
        <childnode refid="18045" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
        <childnode refid="18087" relation="include">
        </childnode>
        <childnode refid="18092" relation="include">
        </childnode>
      </node>
      <node id="18094">
        <label>storage/storage_types_helper.h</label>
        <link refid="storage__types__helper_8h"/>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18095" relation="include">
        </childnode>
        <childnode refid="18099" relation="include">
        </childnode>
        <childnode refid="18100" relation="include">
        </childnode>
      </node>
      <node id="18057">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="18049">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="18050" relation="include">
        </childnode>
        <childnode refid="18051" relation="include">
        </childnode>
        <childnode refid="18052" relation="include">
        </childnode>
        <childnode refid="18032" relation="include">
        </childnode>
      </node>
      <node id="18076">
        <label>math.h</label>
      </node>
      <node id="18025">
        <label>iostream</label>
      </node>
      <node id="18085">
        <label>storage/TableMerger.h</label>
        <link refid="_table_merger_8h"/>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18035" relation="include">
        </childnode>
        <childnode refid="18029" relation="include">
        </childnode>
        <childnode refid="18086" relation="include">
        </childnode>
        <childnode refid="18087" relation="include">
        </childnode>
      </node>
      <node id="18044">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18032" relation="include">
        </childnode>
      </node>
      <node id="18072">
        <label>storage/AbstractAttributeVector.h</label>
        <link refid="_abstract_attribute_vector_8h"/>
      </node>
      <node id="18088">
        <label>unordered_map</label>
      </node>
      <node id="18042">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="18077">
        <label>mutex</label>
      </node>
      <node id="18089">
        <label>storage/TableUtils.h</label>
        <link refid="_table_utils_8h"/>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18088" relation="include">
        </childnode>
      </node>
      <node id="18059">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="18081">
        <label>Table-impl.h</label>
        <link refid="_table-impl_8h"/>
        <childnode refid="18082" relation="include">
        </childnode>
        <childnode refid="18073" relation="include">
        </childnode>
      </node>
      <node id="18080">
        <label>storage/BitCompressedVector.h</label>
        <link refid="_bit_compressed_vector_8h"/>
        <childnode refid="18076" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18054" relation="include">
        </childnode>
        <childnode refid="18077" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18032" relation="include">
        </childnode>
        <childnode refid="18072" relation="include">
        </childnode>
        <childnode refid="18071" relation="include">
        </childnode>
      </node>
      <node id="18071">
        <label>storage/BaseAttributeVector.h</label>
        <link refid="_base_attribute_vector_8h"/>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18032" relation="include">
        </childnode>
        <childnode refid="18072" relation="include">
        </childnode>
      </node>
      <node id="18053">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="18025" relation="include">
        </childnode>
        <childnode refid="18036" relation="include">
        </childnode>
        <childnode refid="18054" relation="include">
        </childnode>
      </node>
      <node id="18046">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="18047" relation="include">
        </childnode>
        <childnode refid="18025" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18038" relation="include">
        </childnode>
        <childnode refid="18048" relation="include">
        </childnode>
        <childnode refid="18055" relation="include">
        </childnode>
        <childnode refid="18056" relation="include">
        </childnode>
        <childnode refid="18059" relation="include">
        </childnode>
        <childnode refid="18057" relation="include">
        </childnode>
      </node>
      <node id="18051">
        <label>algorithm</label>
      </node>
      <node id="18028">
        <label>stdio.h</label>
      </node>
      <node id="18054">
        <label>cstring</label>
      </node>
      <node id="18061">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18025" relation="include">
        </childnode>
        <childnode refid="18052" relation="include">
        </childnode>
        <childnode refid="18031" relation="include">
        </childnode>
        <childnode refid="18062" relation="include">
        </childnode>
        <childnode refid="18047" relation="include">
        </childnode>
        <childnode refid="18058" relation="include">
        </childnode>
      </node>
      <node id="18031">
        <label>memory</label>
      </node>
      <node id="18038">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="18033" relation="include">
        </childnode>
        <childnode refid="18034" relation="include">
        </childnode>
        <childnode refid="18032" relation="include">
        </childnode>
        <childnode refid="18039" relation="include">
        </childnode>
        <childnode refid="18040" relation="include">
        </childnode>
        <childnode refid="18041" relation="include">
        </childnode>
        <childnode refid="18042" relation="include">
        </childnode>
        <childnode refid="18043" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_numa_strategy_8h" kindref="compound">memory/NumaStrategy.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_memalign_strategy_8h" kindref="compound">memory/MemalignStrategy.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_abstract_table_8h" kindref="compound">storage/AbstractTable.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_mutable_vertical_table_8h" kindref="compound">storage/MutableVerticalTable.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_table_8h" kindref="compound">storage/Table.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_store_8h" kindref="compound">storage/Store.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_column_metadata_8h" kindref="compound">storage/ColumnMetadata.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_column_metadata_8h" kindref="compound">storage/ColumnMetadata.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="storage__types_8h" kindref="compound">storage/storage_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_pretty_printer_8h" kindref="compound">storage/PrettyPrinter.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="storage__types__helper_8h" kindref="compound">storage/storage_types_helper.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_table_diff_8h" kindref="compound">storage/TableDiff.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_table_utils_8h" kindref="compound">storage/TableUtils.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_abstract_table_1a0439c8c9642d0a5dbbbf2d3e37c690fc" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_abstract_table_1a0439c8c9642d0a5dbbbf2d3e37c690fc" kindref="member">AbstractTable::copy_structure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a36fbc31395a53b7ece189846e4d3253c" kindref="member">field_list_t</ref><sp/>*fields,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reuse_dict,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>initial_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_containers,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compressed)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>ColumnMetadata<sp/>*&gt;<sp/><ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr&gt;<sp/>*<ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(reuse_dict)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>dictionaries<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr&gt;();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fields<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>&amp;<sp/>field:<sp/>*fields)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata.push_back(<ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(field));</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dictionaries<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionaries-&gt;push_back(<ref refid="class_abstract_table_1a001566ba79ef4dfcde544b4867dd69e7" kindref="member">dictionaryAt</ref>(field));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata.push_back(<ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(i));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dictionaries<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionaries-&gt;push_back(<ref refid="class_abstract_table_1a001566ba79ef4dfcde544b4867dd69e7" kindref="member">dictionaryAt</ref>(i));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>res<sp/>=<sp/><sp/>std::make_shared&lt;Table&lt;&gt;&gt;(&amp;<ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>,<sp/><ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref>,<sp/>initial_size,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>0,<sp/>0,<sp/>compressed);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_abstract_table_1ab2e5350c658908dc343dd2b8c36eed14" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_abstract_table_1ab2e5350c658908dc343dd2b8c36eed14" kindref="member">AbstractTable::copy_structure_modifiable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a36fbc31395a53b7ece189846e4d3253c" kindref="member">field_list_t</ref><sp/>*fields,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>initial_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_containers)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>std::vector&lt;const<sp/>ColumnMetadata<sp/>*&gt;<sp/><ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr<sp/>&gt;<sp/>*<ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr<sp/>&gt;;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fields<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>&amp;<sp/>field:<sp/>*fields)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata.push_back(<ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(field));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dictionaries-&gt;push_back(<ref refid="class_abstract_dictionary_1a051863f8c78b2312e92705eb3554f156" kindref="member">AbstractDictionary::dictionaryWithType</ref>&lt;<ref refid="struct_dictionary_factory" kindref="compound">DictionaryFactory&lt;OrderIndifferentDictionary&gt;</ref><sp/>&gt;(<ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(field)-&gt;getType()));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>metadata.push_back(<ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(i));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dictionaries-&gt;push_back(<ref refid="class_abstract_dictionary_1a051863f8c78b2312e92705eb3554f156" kindref="member">AbstractDictionary::dictionaryWithType</ref>&lt;<ref refid="struct_dictionary_factory" kindref="compound">DictionaryFactory&lt;OrderIndifferentDictionary&gt;</ref><sp/>&gt;(<ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(i)-&gt;getType()));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>std::make_shared&lt;Table&lt;&gt;&gt;(&amp;<ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>,<sp/><ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref>,<sp/>initial_size,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" refkind="member"><highlight class="normal">std::vector&lt;AbstractTable::SharedDictionaryPtr&gt;<sp/>*<ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">AbstractTable::dictionaries</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr&gt;();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;push_back(<ref refid="class_abstract_table_1a001566ba79ef4dfcde544b4867dd69e7" kindref="member">dictionaryAt</ref>(c));</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="class_abstract_table_1a85b7d9471c86bd31879c0f6378071b9c" refkind="member"><highlight class="normal"><ref refid="storage__types_8h_1aa70e7ba5eb63399a65e9cfb52c2bd86e" kindref="member">ValueIdList</ref><sp/><ref refid="class_abstract_table_1a85b7d9471c86bd31879c0f6378071b9c" kindref="member">AbstractTable::copyValueIds</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a36fbc31395a53b7ece189846e4d3253c" kindref="member">field_list_t</ref><sp/>*fields)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><ref refid="storage__types_8h_1aa70e7ba5eb63399a65e9cfb52c2bd86e" kindref="member">ValueIdList</ref><sp/>valueIdList;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fields)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a5ce4ecb27464dc24ba394527510dd89b" kindref="member">field_t</ref><sp/>&amp;<sp/>field:<sp/>*fields)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>valueIdList.push_back(<ref refid="class_abstract_table_1ab0dc4d8eaa3d5b2022d2f0ba1d873a14" kindref="member">getValueId</ref>(field,<sp/>row));</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>valueIdList.push_back(<ref refid="class_abstract_table_1ab0dc4d8eaa3d5b2022d2f0ba1d873a14" kindref="member">getValueId</ref>(i,<sp/>row));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>valueIdList;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="class_abstract_table_1a583da7847c5f08de7ee4288cec78e187" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1a583da7847c5f08de7ee4288cec78e187" kindref="member">AbstractTable::setGeneration</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>generation)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_table_1a58903bbdb672c10f8ad4252c0c356fc0" kindref="member">_generation</ref><sp/>=<sp/><ref refid="class_abstract_table_1a1d792fb6711c4ea00e4662576c1c3dc8" kindref="member">generation</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="class_abstract_table_1a1d792fb6711c4ea00e4662576c1c3dc8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1a1d792fb6711c4ea00e4662576c1c3dc8" kindref="member">AbstractTable::generation</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1a58903bbdb672c10f8ad4252c0c356fc0" kindref="member">_generation</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="class_abstract_table_1ae2f20cf55374dc8560dc4d2e8c4623ec" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_abstract_table_1ae2f20cf55374dc8560dc4d2e8c4623ec" kindref="member">AbstractTable::printValue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HyriseHelper::castValueByColumnRow&lt;std::string&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>column,<sp/>row);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1a4361f683288a0d1360227b309ca625f6" kindref="member">AbstractTable::copyValueFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref>&amp;<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>src_col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>src_row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dst_col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dst_row)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(source-&gt;typeOfColumn(src_col))<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a90453dde1506c63dbaaa7a1a363a06a9" kindref="member">IntegerType</ref>:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>copyValueFrom&lt;hyrise_int_t&gt;(source,<sp/>src_col,<sp/>src_row,<sp/>dst_col,<sp/>dst_row);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a866d24e407b4ee66d3efe59486be6db4" kindref="member">FloatType</ref>:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>copyValueFrom&lt;hyrise_float_t&gt;(source,<sp/>src_col,<sp/>src_row,<sp/>dst_col,<sp/>dst_row);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a83ccab8dfcfc3a9e8656224313fb61f3" kindref="member">StringType</ref>:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>copyValueFrom&lt;hyrise_string_t&gt;(source,<sp/>src_col,<sp/>src_row,<sp/>dst_col,<sp/>dst_row);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_abstract_table_1ae66e82c1f4eb0001f747af5bcf8a4ef1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1a4361f683288a0d1360227b309ca625f6" kindref="member">AbstractTable::copyValueFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref>&amp;<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>src_col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>vid,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dst_col,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dst_row)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(source-&gt;typeOfColumn(src_col))<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a90453dde1506c63dbaaa7a1a363a06a9" kindref="member">IntegerType</ref>:</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setValue&lt;hyrise_int_t&gt;(dst_col,<sp/>dst_row,<sp/>source-&gt;getValueForValueId&lt;<ref refid="storage__types_8h_1a72c5f9ba0685142ffc747d0a586a5d8a" kindref="member">hyrise_int_t</ref>&gt;(src_col,<sp/>vid));</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a866d24e407b4ee66d3efe59486be6db4" kindref="member">FloatType</ref>:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setValue&lt;hyrise_float_t&gt;(dst_col,<sp/>dst_row,<sp/>source-&gt;getValueForValueId&lt;<ref refid="storage__types_8h_1ae1d9f03fd6d4a12d5c63accb4233a2ec" kindref="member">hyrise_float_t</ref>&gt;(src_col,<sp/>vid));</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a83ccab8dfcfc3a9e8656224313fb61f3" kindref="member">StringType</ref>:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setValue&lt;hyrise_string_t&gt;(dst_col,<sp/>dst_row,<sp/>source-&gt;getValueForValueId&lt;<ref refid="storage__types_8h_1af37c27a8a9ec58aee21fbec32a793509" kindref="member">hyrise_string_t</ref>&gt;(src_col,<sp/>vid));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="class_abstract_table_1afbbf69e94a282a71fb1ecedd72ca8824" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1afbbf69e94a282a71fb1ecedd72ca8824" kindref="member">AbstractTable::copyRowFrom</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref>&amp;<sp/>source,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>src_row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dst_row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>copy_values,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_memcpy)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy_values)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column<sp/>=<sp/>0;<sp/>column<sp/>&lt;<sp/>source-&gt;columnCount();<sp/>column++)<sp/>{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_abstract_table_1a4361f683288a0d1360227b309ca625f6" kindref="member">copyValueFrom</ref>(source,<sp/>column,<sp/>src_row,<sp/>column,<sp/>dst_row);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(use_memcpy)<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>slices<sp/>&amp;<sp/>memcpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assumes<sp/>destination<sp/>(this)<sp/>is<sp/>single<sp/>row<sp/>container</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="class_abstract_table_1a593d49b1ae5ca4a47e5c5c43c1eeb4c8" kindref="member">sliceCount</ref>()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>only<sp/>gets<sp/>the<sp/>dest<sp/>pointer,<sp/>nothing<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref><sp/>*dst<sp/>=<sp/>(<ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref><sp/>*)<sp/><ref refid="class_abstract_table_1a472d2a3dc19e99e640d2b65e81a6d052" kindref="member">atSlice</ref>(0,<sp/>dst_row);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inc_width<sp/>=<sp/>0,<sp/>width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slice<sp/>=<sp/>0;<sp/>slice<sp/>&lt;<sp/>source-&gt;sliceCount();<sp/>slice++)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gets<sp/>pointer<sp/>to<sp/>container<sp/>at<sp/>the<sp/>row</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref><sp/>*src<sp/>=<sp/>(<ref refid="storage__types_8h_1a2552a37cd3427c39d92cb8fd23c90408" kindref="member">value_id_t</ref><sp/>*)<sp/>source-&gt;atSlice(slice,<sp/>src_row);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>slice<sp/>width<sp/>tells<sp/>us<sp/>how<sp/>much<sp/>memory<sp/>we<sp/>can<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>source-&gt;getSliceWidth(slice);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)(dst)<sp/>+<sp/>inc_width,<sp/>src,<sp/>width);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inc_width<sp/>+=<sp/>width;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>single<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column<sp/>=<sp/>0;<sp/>column<sp/>&lt;<sp/>source-&gt;columnCount();<sp/>column++)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_abstract_table_1ad7fabd72d657d48f1f4380132515b451" kindref="member">setValueId</ref>(column,<sp/>dst_row,<sp/>source-&gt;getValueId(column,<sp/>src_row));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_abstract_table_1ad7fabd72d657d48f1f4380132515b451" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1ad7fabd72d657d48f1f4380132515b451" kindref="member">AbstractTable::setValueId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>valueId)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Setting<sp/>valueIds<sp/>not<sp/>supported&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_abstract_table_1acf25e9092735089d88c0fd9a1cb02984" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1acf25e9092735089d88c0fd9a1cb02984" kindref="member">AbstractTable::reserve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nr_of_values)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Reserving<sp/>is<sp/>not<sp/>supported<sp/>for<sp/>Abstract<sp/>Tables&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_abstract_table_1a2c284b3bc7d1ee8522cd02be2fffa3be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1a2c284b3bc7d1ee8522cd02be2fffa3be" kindref="member">AbstractTable::resize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Resizing<sp/>is<sp/>not<sp/>supported<sp/>for<sp/>Abstract<sp/>Tables&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="class_abstract_table_1a8e1d6f1b61390fc3e6954fbaa1f7745f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1a8e1d6f1b61390fc3e6954fbaa1f7745f" kindref="member">AbstractTable::write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;filename)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>file(filename.c_str());</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column<sp/>=<sp/>0;<sp/>column<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>column++)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>md<sp/>=<sp/><ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(column);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/>md-&gt;getName();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column<sp/>=<sp/>0;<sp/>column<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>column++)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>md<sp/>=<sp/><ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(column);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/><ref refid="storage__types__helper_8cpp_1adc2db38d37650107536dd63acc79e9b7" kindref="member">data_type_to_string</ref>(md-&gt;getType());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column<sp/>=<sp/>0;<sp/>column<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>column++)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/>column<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;_R&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;===&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/><ref refid="class_abstract_table_1a2b3fde5fb0c70f288eda47c4c66bb151" kindref="member">size</ref>();<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column<sp/>=<sp/>0;<sp/>column<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>column++)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/><ref refid="class_abstract_table_1ae2f20cf55374dc8560dc4d2e8c4623ec" kindref="member">printValue</ref>(column,<sp/>row);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(column<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>file.close();</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="class_abstract_table_1af716c04f38a6ab47b277911baf050c9d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1af716c04f38a6ab47b277911baf050c9d" kindref="member">AbstractTable::contentEquals</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a1c9f919a7a3f09a8b304a98f1ebad3ee" kindref="member">hyrise::storage::c_atable_ptr_t</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_abstract_table_1a2b3fde5fb0c70f288eda47c4c66bb151" kindref="member">size</ref>()<sp/>!=<sp/>other-&gt;size())<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>()<sp/>!=<sp/>other-&gt;columnCount())<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column<sp/>=<sp/>0;<sp/>column<sp/>&lt;<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>column++)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>md<sp/>=<sp/><ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(column);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>md2<sp/>=<sp/>other-&gt;metadataAt(column);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;getType()<sp/>!=<sp/>md2-&gt;getType())<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(md-&gt;getName()<sp/>!=<sp/>md2-&gt;getName())<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/><ref refid="class_abstract_table_1a2b3fde5fb0c70f288eda47c4c66bb151" kindref="member">size</ref>();<sp/>row++)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valueEqual<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(md-&gt;getType())<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a90453dde1506c63dbaaa7a1a363a06a9" kindref="member">IntegerType</ref>:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueEqual<sp/>=<sp/>getValue&lt;hyrise_int_t&gt;(column,<sp/>row)<sp/>==<sp/>other-&gt;getValue&lt;<ref refid="storage__types_8h_1a72c5f9ba0685142ffc747d0a586a5d8a" kindref="member">hyrise_int_t</ref>&gt;(column,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a866d24e407b4ee66d3efe59486be6db4" kindref="member">FloatType</ref>:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueEqual<sp/>=<sp/>getValue&lt;hyrise_float_t&gt;(column,<sp/>row)<sp/>==<sp/>other-&gt;getValue&lt;<ref refid="storage__types_8h_1ae1d9f03fd6d4a12d5c63accb4233a2ec" kindref="member">hyrise_float_t</ref>&gt;(column,<sp/>row);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6a83ccab8dfcfc3a9e8656224313fb61f3" kindref="member">StringType</ref>:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueEqual<sp/>=<sp/>getValue&lt;std::string&gt;(column,<sp/>row).compare(other-&gt;getValue&lt;std::string&gt;(column,<sp/>row))<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!valueEqual)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="class_abstract_table_1aaea606e4fd8c92a43febced405de1c6c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1aaea606e4fd8c92a43febced405de1c6c" kindref="member">AbstractTable::numberOfColumn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;column)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(i)-&gt;<ref refid="class_column_metadata_1af6dbae4edd71bc0597ab740c965f10fb" kindref="member">getName</ref>()<sp/>==<sp/>column)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>std::string<sp/>err<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/><ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(i)-&gt;<ref refid="class_column_metadata_1af6dbae4edd71bc0597ab740c965f10fb" kindref="member">getName</ref>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="class_missing_column_exception" kindref="compound">MissingColumnException</ref>(</highlight><highlight class="stringliteral">&quot;Column<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>column<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found.<sp/>Available:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>err);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="class_abstract_table_1a64faa3ae981d0b077787fbd60c46ede1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1a64faa3ae981d0b077787fbd60c46ede1" kindref="member">AbstractTable::print</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>limit)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><ref refid="class_abstract_table_1a64faa3ae981d0b077787fbd60c46ede1" kindref="member">PrettyPrinter::print</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>std::cout,<sp/></highlight><highlight class="stringliteral">&quot;unnamed<sp/>abstract<sp/>table&quot;</highlight><highlight class="normal">,<sp/>limit);</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322" refid="class_abstract_table_1ad6de2b7c7b99098e9766b060b4d4b8c7" refkind="member"><highlight class="normal"><ref refid="storage__types_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6" kindref="member">DataType</ref><sp/><ref refid="class_abstract_table_1ad6de2b7c7b99098e9766b060b4d4b8c7" kindref="member">AbstractTable::typeOfColumn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(column)-&gt;<ref refid="class_column_metadata_1a81bf1f96407063f5efb177082338651c" kindref="member">getType</ref>();</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="class_abstract_table_1aa126cb17995eef9d0833ff2a4a673853" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_abstract_table_1aa126cb17995eef9d0833ff2a4a673853" kindref="member">AbstractTable::nameOfColumn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(column)-&gt;<ref refid="class_column_metadata_1af6dbae4edd71bc0597ab740c965f10fb" kindref="member">getName</ref>();</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" refkind="member"><highlight class="normal"><ref refid="storage__types_8h_1a8776c82cf4ebeb0f86f0e83709870655" kindref="member">metadata_vec_t</ref><sp/><ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">AbstractTable::metadata</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><ref refid="storage__types_8h_1a8776c82cf4ebeb0f86f0e83709870655" kindref="member">metadata_vec_t</ref><sp/>result(<ref refid="class_abstract_table_1a9ba326d4ed695ff02dcdc0dd125fd16c" kindref="member">columnCount</ref>());</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>result.size();<sp/>++i)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>result[i]<sp/>=<sp/>*<ref refid="class_abstract_table_1a7a16a970c5e9229616b984972d1b44b9" kindref="member">metadataAt</ref>(i);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="class_abstract_table_1a3467bc6159aa361db993c3fc56584789" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_abstract_table_8h_1ae3a004c859daed205eb7639b1e993ce4" kindref="member">attr_vectors_t</ref><sp/><ref refid="class_abstract_table_1a3467bc6159aa361db993c3fc56584789" kindref="member" tooltip="get underlying attribute vectors for column">AbstractTable::getAttributeVectors</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;getAttributeVectors<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/storage/AbstractTable.cpp"/>
  </compounddef>
</doxygen>
