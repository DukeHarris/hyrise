<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_mutable_vertical_table_8cpp" kind="file">
    <compoundname>MutableVerticalTable.cpp</compoundname>
    <includes refid="_mutable_vertical_table_8h" local="yes">storage/MutableVerticalTable.h</includes>
    <incdepgraph>
      <node id="20644">
        <label>list</label>
      </node>
      <node id="20669">
        <label>atomic</label>
      </node>
      <node id="20673">
        <label>storage/BaseAllocatedAttributeVector.h</label>
        <link refid="_base_allocated_attribute_vector_8h"/>
        <childnode refid="20665" relation="include">
        </childnode>
        <childnode refid="20649" relation="include">
        </childnode>
      </node>
      <node id="20631">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="20623">
        <label>limits</label>
      </node>
      <node id="20663">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="20664">
        <label>storage/AbstractAllocatedTable.h</label>
        <link refid="_abstract_allocated_table_8h"/>
        <childnode refid="20641" relation="include">
        </childnode>
        <childnode refid="20645" relation="include">
        </childnode>
        <childnode refid="20647" relation="include">
        </childnode>
      </node>
      <node id="20638">
        <label>assert.h</label>
      </node>
      <node id="20633">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="20654">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="20622">
        <label>cstdint</label>
      </node>
      <node id="20618">
        <label>storage/MutableVerticalTable.h</label>
        <link refid="_mutable_vertical_table_8h"/>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20621" relation="include">
        </childnode>
        <childnode refid="20625" relation="include">
        </childnode>
        <childnode refid="20677" relation="include">
        </childnode>
        <childnode refid="20626" relation="include">
        </childnode>
        <childnode refid="20634" relation="include">
        </childnode>
      </node>
      <node id="20617">
        <label>src/lib/storage/MutableVerticalTable.cpp</label>
        <link refid="MutableVerticalTable.cpp"/>
        <childnode refid="20618" relation="include">
        </childnode>
      </node>
      <node id="20668">
        <label>storage/FixedLengthVector.h</label>
        <link refid="_fixed_length_vector_8h"/>
        <childnode refid="20669" relation="include">
        </childnode>
        <childnode refid="20648" relation="include">
        </childnode>
        <childnode refid="20670" relation="include">
        </childnode>
        <childnode refid="20624" relation="include">
        </childnode>
        <childnode refid="20671" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
        <childnode refid="20672" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
        <childnode refid="20666" relation="include">
        </childnode>
        <childnode refid="20665" relation="include">
        </childnode>
        <childnode refid="20673" relation="include">
        </childnode>
        <childnode refid="20641" relation="include">
        </childnode>
        <childnode refid="20645" relation="include">
        </childnode>
      </node>
      <node id="20651">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="20627" relation="include">
        </childnode>
        <childnode refid="20640" relation="include">
        </childnode>
        <childnode refid="20652" relation="include">
        </childnode>
      </node>
      <node id="20667">
        <label>storage/AttributeVectorFactory.h</label>
        <link refid="_attribute_vector_factory_8h"/>
        <childnode refid="20624" relation="include">
        </childnode>
        <childnode refid="20665" relation="include">
        </childnode>
        <childnode refid="20668" relation="include">
        </childnode>
        <childnode refid="20674" relation="include">
        </childnode>
      </node>
      <node id="20629">
        <label>stdint.h</label>
      </node>
      <node id="20650">
        <label>stdlib.h</label>
      </node>
      <node id="20676">
        <label>cmath</label>
      </node>
      <node id="20648">
        <label>errno.h</label>
      </node>
      <node id="20628">
        <label>stdexcept</label>
      </node>
      <node id="20620">
        <label>string</label>
      </node>
      <node id="20660">
        <label>map</label>
      </node>
      <node id="20636">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="20637" relation="include">
        </childnode>
        <childnode refid="20656" relation="include">
        </childnode>
      </node>
      <node id="20647">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="20648" relation="include">
        </childnode>
        <childnode refid="20649" relation="include">
        </childnode>
        <childnode refid="20650" relation="include">
        </childnode>
      </node>
      <node id="20659">
        <label>exception</label>
      </node>
      <node id="20642">
        <label>stddef.h</label>
      </node>
      <node id="20656">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="20627" relation="include">
        </childnode>
        <childnode refid="20640" relation="include">
        </childnode>
        <childnode refid="20651" relation="include">
        </childnode>
        <childnode refid="20652" relation="include">
        </childnode>
        <childnode refid="20657" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20659" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20660" relation="include">
        </childnode>
        <childnode refid="20624" relation="include">
        </childnode>
        <childnode refid="20661" relation="include">
        </childnode>
        <childnode refid="20662" relation="include">
        </childnode>
        <childnode refid="20663" relation="include">
        </childnode>
      </node>
      <node id="20630">
        <label>ostream</label>
      </node>
      <node id="20661">
        <label>limits.h</label>
      </node>
      <node id="20652">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="20653" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
      </node>
      <node id="20640">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20624" relation="include">
        </childnode>
        <childnode refid="20641" relation="include">
        </childnode>
        <childnode refid="20645" relation="include">
        </childnode>
        <childnode refid="20647" relation="include">
        </childnode>
        <childnode refid="20627" relation="include">
        </childnode>
      </node>
      <node id="20625">
        <label>storage/Table.h</label>
        <link refid="_table_8h"/>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20624" relation="include">
        </childnode>
        <childnode refid="20621" relation="include">
        </childnode>
        <childnode refid="20626" relation="include">
        </childnode>
        <childnode refid="20634" relation="include">
        </childnode>
        <childnode refid="20640" relation="include">
        </childnode>
        <childnode refid="20664" relation="include">
        </childnode>
        <childnode refid="20665" relation="include">
        </childnode>
        <childnode refid="20667" relation="include">
        </childnode>
        <childnode refid="20675" relation="include">
        </childnode>
      </node>
      <node id="20658">
        <label>string.h</label>
      </node>
      <node id="20634">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="20623" relation="include">
        </childnode>
        <childnode refid="20624" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20621" relation="include">
        </childnode>
        <childnode refid="20635" relation="include">
        </childnode>
        <childnode refid="20627" relation="include">
        </childnode>
        <childnode refid="20626" relation="include">
        </childnode>
        <childnode refid="20636" relation="include">
        </childnode>
      </node>
      <node id="20635">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="20677">
        <label>storage/TableFactory.h</label>
        <link refid="_table_factory_8h"/>
        <childnode refid="20624" relation="include">
        </childnode>
        <childnode refid="20621" relation="include">
        </childnode>
        <childnode refid="20634" relation="include">
        </childnode>
        <childnode refid="20625" relation="include">
        </childnode>
      </node>
      <node id="20662">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="20619">
        <label>vector</label>
      </node>
      <node id="20621">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="20622" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20623" relation="include">
        </childnode>
        <childnode refid="20624" relation="include">
        </childnode>
        <childnode refid="20619" relation="include">
        </childnode>
      </node>
      <node id="20672">
        <label>sstream</label>
      </node>
      <node id="20653">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="20641">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="20642" relation="include">
        </childnode>
        <childnode refid="20643" relation="include">
        </childnode>
        <childnode refid="20644" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
      </node>
      <node id="20670">
        <label>math.h</label>
      </node>
      <node id="20639">
        <label>iostream</label>
      </node>
      <node id="20626">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="20627" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
      </node>
      <node id="20666">
        <label>storage/AbstractAttributeVector.h</label>
        <link refid="_abstract_attribute_vector_8h"/>
      </node>
      <node id="20632">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="20671">
        <label>mutex</label>
      </node>
      <node id="20655">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="20675">
        <label>Table-impl.h</label>
        <link refid="_table-impl_8h"/>
        <childnode refid="20676" relation="include">
        </childnode>
        <childnode refid="20667" relation="include">
        </childnode>
      </node>
      <node id="20674">
        <label>storage/BitCompressedVector.h</label>
        <link refid="_bit_compressed_vector_8h"/>
        <childnode refid="20670" relation="include">
        </childnode>
        <childnode refid="20629" relation="include">
        </childnode>
        <childnode refid="20646" relation="include">
        </childnode>
        <childnode refid="20671" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
        <childnode refid="20666" relation="include">
        </childnode>
        <childnode refid="20665" relation="include">
        </childnode>
      </node>
      <node id="20665">
        <label>storage/BaseAttributeVector.h</label>
        <link refid="_base_attribute_vector_8h"/>
        <childnode refid="20624" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
        <childnode refid="20666" relation="include">
        </childnode>
      </node>
      <node id="20645">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="20639" relation="include">
        </childnode>
        <childnode refid="20622" relation="include">
        </childnode>
        <childnode refid="20646" relation="include">
        </childnode>
      </node>
      <node id="20637">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="20638" relation="include">
        </childnode>
        <childnode refid="20639" relation="include">
        </childnode>
        <childnode refid="20624" relation="include">
        </childnode>
        <childnode refid="20627" relation="include">
        </childnode>
        <childnode refid="20640" relation="include">
        </childnode>
        <childnode refid="20651" relation="include">
        </childnode>
        <childnode refid="20652" relation="include">
        </childnode>
        <childnode refid="20655" relation="include">
        </childnode>
        <childnode refid="20653" relation="include">
        </childnode>
      </node>
      <node id="20643">
        <label>algorithm</label>
      </node>
      <node id="20649">
        <label>stdio.h</label>
      </node>
      <node id="20646">
        <label>cstring</label>
      </node>
      <node id="20657">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20639" relation="include">
        </childnode>
        <childnode refid="20644" relation="include">
        </childnode>
        <childnode refid="20624" relation="include">
        </childnode>
        <childnode refid="20658" relation="include">
        </childnode>
        <childnode refid="20638" relation="include">
        </childnode>
        <childnode refid="20654" relation="include">
        </childnode>
      </node>
      <node id="20624">
        <label>memory</label>
      </node>
      <node id="20627">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="20619" relation="include">
        </childnode>
        <childnode refid="20620" relation="include">
        </childnode>
        <childnode refid="20628" relation="include">
        </childnode>
        <childnode refid="20629" relation="include">
        </childnode>
        <childnode refid="20630" relation="include">
        </childnode>
        <childnode refid="20631" relation="include">
        </childnode>
        <childnode refid="20632" relation="include">
        </childnode>
        <childnode refid="20633" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_mutable_vertical_table_8h" kindref="compound">storage/MutableVerticalTable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_mutable_vertical_table_1a38878b80ae35fcb58a00e5ccdf9ce878" refkind="member"><highlight class="normal"><ref refid="class_mutable_vertical_table_1a1015340e6af0a000e874580a1cd7d1f0" kindref="member">MutableVerticalTable::MutableVerticalTable</ref>(std::vector&lt;std::vector&lt;const<sp/>ColumnMetadata<sp/>*&gt;<sp/>*&gt;<sp/>metadata,</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;AbstractTable::SharedDictionaryPtr&gt;<sp/>*&gt;<sp/>*dictionaries,</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size,</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>sorted,</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_abstract_table_factory" kindref="compound">AbstractTableFactory</ref><sp/>*factory,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compressed)<sp/>:<sp/>containers()<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;AbstractTable::SharedDictionaryPtr&gt;<sp/>*dict<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref>)</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dict<sp/>=<sp/><ref refid="class_abstract_table_1ab1d04fdc926954e4027fb883abab1d73" kindref="member">dictionaries</ref>-&gt;at(i);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(factory)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>.push_back(factory-&gt;<ref refid="class_abstract_table_factory_1a1d3b0ec6b2d1a4cd1fa961664347c0f3" kindref="member">generate</ref>(<ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>[i],<sp/>dict,<sp/>size,<sp/>sorted,<sp/>compressed));</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>.push_back(std::make_shared&lt;Table&lt;&gt;&gt;(<ref refid="class_abstract_table_1a8b854b19026e75eebc02942499a82a21" kindref="member">metadata</ref>[i],<sp/>dict,<sp/>size,<sp/>sorted));</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="class_mutable_vertical_table_1a7e3b12eac33bd80832c4f4e2695da735" kindref="member">column_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1a7e3b12eac33bd80832c4f4e2695da735" kindref="member">column_count</ref><sp/>+=<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[i]-&gt;columnCount();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//size_t<sp/>container<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><ref refid="class_mutable_vertical_table_1a1da4886a886ad7b94c09557d1f2916d4" kindref="member">slice_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[i]-&gt;columnCount();<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1acf911b5a1ebc0f2769f905befb63b783" kindref="member">container_for_column</ref>.push_back(i);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1a4eb116cc967c53b9c589e594a87631bf" kindref="member">offset_in_container</ref>.push_back(j);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[i]-&gt;sliceCount();<sp/>s++)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1a52829b86cab7116cbfd0508aa5081a55" kindref="member">container_for_slice</ref>.push_back(i);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1ad75993409560ce4bd2a0dbed063200ba" kindref="member">slice_offset_in_container</ref>.push_back(s);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1a1da4886a886ad7b94c09557d1f2916d4" kindref="member">slice_count</ref>++;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="class_mutable_vertical_table_1a32f948742c23f845f2b644f0dc3de112" kindref="member">reserve</ref>(size);</highlight></codeline>
<codeline lineno="44"><highlight class="normal">}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_mutable_vertical_table_1a3fabe0248927cf14f69d19ae3f19287b" refkind="member"><highlight class="normal"><ref refid="class_mutable_vertical_table_1a1015340e6af0a000e874580a1cd7d1f0" kindref="member">MutableVerticalTable::MutableVerticalTable</ref>(std::vector&lt;<sp/>hyrise::storage::atable_ptr_t<sp/>&gt;<sp/>&amp;tables,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>:<sp/>column_count(0)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cnum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="class_mutable_vertical_table_1a1da4886a886ad7b94c09557d1f2916d4" kindref="member">slice_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>c:<sp/>tables)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>.push_back(c);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cc<sp/>=<sp/>c-&gt;columnCount();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cc;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1acf911b5a1ebc0f2769f905befb63b783" kindref="member">container_for_column</ref>.push_back(cnum);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1a4eb116cc967c53b9c589e594a87631bf" kindref="member">offset_in_container</ref>.push_back(i);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>s<sp/>=<sp/>0;<sp/>s<sp/>&lt;<sp/>c-&gt;sliceCount();<sp/>s++)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1a52829b86cab7116cbfd0508aa5081a55" kindref="member">container_for_slice</ref>.push_back(cnum);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1ad75993409560ce4bd2a0dbed063200ba" kindref="member">slice_offset_in_container</ref>.push_back(s);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1a1da4886a886ad7b94c09557d1f2916d4" kindref="member">slice_count</ref>++;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_mutable_vertical_table_1a7e3b12eac33bd80832c4f4e2695da735" kindref="member">column_count</ref><sp/>+=<sp/>c-&gt;columnCount();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>++cnum;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_mutable_vertical_table_1a772e1c45f29697a300f71911e6e2a9cb" refkind="member"><highlight class="normal"><ref refid="class_mutable_vertical_table_1a772e1c45f29697a300f71911e6e2a9cb" kindref="member">MutableVerticalTable::~MutableVerticalTable</ref>()<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_mutable_vertical_table_1ac9f8cece531ff588333104bc40def47f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref>&amp;<sp/><ref refid="class_mutable_vertical_table_1ac9f8cece531ff588333104bc40def47f" kindref="member">MutableVerticalTable::containerAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>for_writing)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[<ref refid="class_mutable_vertical_table_1acf911b5a1ebc0f2769f905befb63b783" kindref="member">container_for_column</ref>[column_index]];</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="class_mutable_vertical_table_1a1ffd4a360438d9b5a47668ac65495d8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a1ffd4a360438d9b5a47668ac65495d8d" kindref="member">MutableVerticalTable::getOffsetInContainer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column_index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a4eb116cc967c53b9c589e594a87631bf" kindref="member">offset_in_container</ref>[column_index];</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_mutable_vertical_table_1a53599361bfad6cfed8bd12da0bfd58f6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_column_metadata" kindref="compound">ColumnMetadata</ref><sp/>*<ref refid="class_mutable_vertical_table_1a53599361bfad6cfed8bd12da0bfd58f6" kindref="member">MutableVerticalTable::metadataAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1ac9f8cece531ff588333104bc40def47f" kindref="member">containerAt</ref>(column_index)-&gt;metadataAt(<ref refid="class_mutable_vertical_table_1a4eb116cc967c53b9c589e594a87631bf" kindref="member">offset_in_container</ref>[column_index]);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_mutable_vertical_table_1a881d9ae8d8de90c649fe5800720096f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref>&amp;<sp/><ref refid="class_mutable_vertical_table_1a881d9ae8d8de90c649fe5800720096f1" kindref="member">MutableVerticalTable::dictionaryAt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>of_delta)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1ac9f8cece531ff588333104bc40def47f" kindref="member">containerAt</ref>(column)-&gt;dictionaryAt(<ref refid="class_mutable_vertical_table_1a4eb116cc967c53b9c589e594a87631bf" kindref="member">offset_in_container</ref>[column],<sp/>row,<sp/>table_id,<sp/>of_delta);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="class_mutable_vertical_table_1ae72ba0d3d273f96739789634fe607c01" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref>&amp;<sp/><ref refid="class_mutable_vertical_table_1ae72ba0d3d273f96739789634fe607c01" kindref="member">MutableVerticalTable::dictionaryByTableId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1ac9f8cece531ff588333104bc40def47f" kindref="member">containerAt</ref>(column)-&gt;dictionaryByTableId(<ref refid="class_mutable_vertical_table_1a4eb116cc967c53b9c589e594a87631bf" kindref="member">offset_in_container</ref>[column],<sp/>table_id);</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_mutable_vertical_table_1a7b31752a7b4114dffa0cef6f98fefa90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a7b31752a7b4114dffa0cef6f98fefa90" kindref="member">MutableVerticalTable::setDictionaryAt</ref>(<ref refid="class_abstract_table_1af76ff827deb697db8077a90c450381ab" kindref="member">AbstractTable::SharedDictionaryPtr</ref><sp/>dict,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1ab1b21fbdc9fcb935021666db9c910755" kindref="member">table_id_t</ref><sp/>table_id)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="class_mutable_vertical_table_1ac9f8cece531ff588333104bc40def47f" kindref="member">containerAt</ref>(column)-&gt;setDictionaryAt(dict,<sp/><ref refid="class_mutable_vertical_table_1a4eb116cc967c53b9c589e594a87631bf" kindref="member">offset_in_container</ref>[column],<sp/>row,<sp/>table_id);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_mutable_vertical_table_1a3ae55fdb096903babf43b016de5d3f71" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a3ae55fdb096903babf43b016de5d3f71" kindref="member">MutableVerticalTable::size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_mutable_vertical_table_1a7e3b12eac33bd80832c4f4e2695da735" kindref="member">column_count</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[0]-&gt;size();</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_mutable_vertical_table_1a4a6c605b27d848ca5d5110f8afe2c9e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a4a6c605b27d848ca5d5110f8afe2c9e0" kindref="member">MutableVerticalTable::columnCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a7e3b12eac33bd80832c4f4e2695da735" kindref="member">column_count</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_mutable_vertical_table_1ac17d068581c51692cec89cb51119981b" refkind="member"><highlight class="normal"><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/><ref refid="class_mutable_vertical_table_1ac17d068581c51692cec89cb51119981b" kindref="member">MutableVerticalTable::getValueId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/><ref refid="class_mutable_vertical_table_1a4eb116cc967c53b9c589e594a87631bf" kindref="member">offset_in_container</ref>[column];</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1ac9f8cece531ff588333104bc40def47f" kindref="member">containerAt</ref>(column)-&gt;getValueId(tmp,<sp/>row);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_mutable_vertical_table_1a5043d8fc47639507379f1d79d5931e4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a5043d8fc47639507379f1d79d5931e4a" kindref="member">MutableVerticalTable::setValueId</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_value_id" kindref="compound">ValueId</ref><sp/>valueId)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="class_mutable_vertical_table_1ac9f8cece531ff588333104bc40def47f" kindref="member">containerAt</ref>(column)-&gt;setValueId(<ref refid="class_mutable_vertical_table_1a4eb116cc967c53b9c589e594a87631bf" kindref="member">offset_in_container</ref>[column],<sp/>row,<sp/>valueId);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_mutable_vertical_table_1a32f948742c23f845f2b644f0dc3de112" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a32f948742c23f845f2b644f0dc3de112" kindref="member">MutableVerticalTable::reserve</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nr_of_values)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>c<sp/>:<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;reserve(nr_of_values);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_mutable_vertical_table_1a066dba630bf39bd9b9439d7307c8fd01" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a066dba630bf39bd9b9439d7307c8fd01" kindref="member">MutableVerticalTable::resize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows)<sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>c<sp/>:<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;resize(rows);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="class_mutable_vertical_table_1a97b36a60c808a10cb9489f24fc8da7bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a97b36a60c808a10cb9489f24fc8da7bf" kindref="member">MutableVerticalTable::sliceCount</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a1da4886a886ad7b94c09557d1f2916d4" kindref="member">slice_count</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_mutable_vertical_table_1a4da208b8ee5fd37aceacc35de74f407a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_mutable_vertical_table_1a4da208b8ee5fd37aceacc35de74f407a" kindref="member">MutableVerticalTable::atSlice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slice,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[<ref refid="class_mutable_vertical_table_1a52829b86cab7116cbfd0508aa5081a55" kindref="member">container_for_slice</ref>[slice]]-&gt;atSlice(<ref refid="class_mutable_vertical_table_1ad75993409560ce4bd2a0dbed063200ba" kindref="member">slice_offset_in_container</ref>[slice],<sp/>row);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_mutable_vertical_table_1abc6756e510dfd943ac93608a46103a44" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1abc6756e510dfd943ac93608a46103a44" kindref="member">MutableVerticalTable::getSliceWidth</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slice)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[<ref refid="class_mutable_vertical_table_1a52829b86cab7116cbfd0508aa5081a55" kindref="member">container_for_slice</ref>[slice]]-&gt;getSliceWidth(<ref refid="class_mutable_vertical_table_1ad75993409560ce4bd2a0dbed063200ba" kindref="member">slice_offset_in_container</ref>[slice]);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="class_mutable_vertical_table_1aa15bd1cfad6fc0218587f850acf42566" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1aa15bd1cfad6fc0218587f850acf42566" kindref="member">MutableVerticalTable::getSliceForColumn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1acf911b5a1ebc0f2769f905befb63b783" kindref="member">container_for_column</ref>[column];</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="class_mutable_vertical_table_1a823e775a9b9e1005280fffa78abac9cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a823e775a9b9e1005280fffa78abac9cb" kindref="member">MutableVerticalTable::getOffsetInSlice</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>internal_column<sp/>=<sp/>column;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>.size()<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1acf911b5a1ebc0f2769f905befb63b783" kindref="member">container_for_column</ref>[column];<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>internal_column<sp/>-=<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[i]-&gt;columnCount();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[container_for_column[column]]-&gt;getOffsetInSlice(internal_column);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_mutable_vertical_table_1a456bfc37fbbd6c119046d3e1186b2241" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_mutable_vertical_table_1a456bfc37fbbd6c119046d3e1186b2241" kindref="member">MutableVerticalTable::getContainer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[c];</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_mutable_vertical_table_1ab83f1c327f6d4fd49ef8b5b35d4355e0" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_mutable_vertical_table_1ab83f1c327f6d4fd49ef8b5b35d4355e0" kindref="member">MutableVerticalTable::copy_structure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a36fbc31395a53b7ece189846e4d3253c" kindref="member">field_list_t</ref><sp/>*fields,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>reuse_dict,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>initial_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_containers,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>compressed)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>hyrise::storage::atable_ptr_t<sp/>&gt;<sp/>new_containers;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!with_containers)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1ab83f1c327f6d4fd49ef8b5b35d4355e0" kindref="member">AbstractTable::copy_structure</ref>(fields,<sp/>reuse_dict,<sp/>initial_size,<sp/>with_containers,<sp/>compressed);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>.size();<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="storage__types_8h_1a36fbc31395a53b7ece189846e4d3253c" kindref="member">field_list_t</ref><sp/>temp_field_list;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fields<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[c]-&gt;<ref refid="class_mutable_vertical_table_1a4a6c605b27d848ca5d5110f8afe2c9e0" kindref="member">columnCount</ref>()<sp/>+<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_field_list.push_back(i<sp/>-<sp/>offset);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((i<sp/>&lt;<sp/>fields-&gt;<ref refid="class_mutable_vertical_table_1a3ae55fdb096903babf43b016de5d3f71" kindref="member">size</ref>())<sp/>&amp;&amp;<sp/>(fields-&gt;at(i)<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[c]-&gt;columnCount()<sp/>+<sp/>offset))<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_field_list.push_back(fields-&gt;at(i)<sp/>-<sp/>offset);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[c]-&gt;columnCount();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!temp_field_list.empty())<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>new_table<sp/>=<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[c]-&gt;copy_structure(&amp;temp_field_list,<sp/>reuse_dict,<sp/>initial_size,<sp/>with_containers,<sp/>compressed);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_containers.push_back(new_table);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>r<sp/>=<sp/>std::make_shared&lt;MutableVerticalTable&gt;(new_containers,<sp/>initial_size);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="class_mutable_vertical_table_1a1a9a6883fd58a563ca025b2954c31526" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_mutable_vertical_table_1a1a9a6883fd58a563ca025b2954c31526" kindref="member">MutableVerticalTable::copy_structure_modifiable</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a36fbc31395a53b7ece189846e4d3253c" kindref="member">field_list_t</ref><sp/>*fields,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>initial_size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>with_containers)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>hyrise::storage::atable_ptr_t<sp/>&gt;<sp/>new_containers;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!with_containers)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1a1a9a6883fd58a563ca025b2954c31526" kindref="member">AbstractTable::copy_structure_modifiable</ref>(fields,<sp/>initial_size,<sp/>with_containers);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>.size();<sp/>c++)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="storage__types_8h_1a36fbc31395a53b7ece189846e4d3253c" kindref="member">field_list_t</ref><sp/>temp_field_list;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fields<sp/>==<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[c]-&gt;<ref refid="class_mutable_vertical_table_1a4a6c605b27d848ca5d5110f8afe2c9e0" kindref="member">columnCount</ref>()<sp/>+<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_field_list.push_back(i<sp/>-<sp/>offset);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((i<sp/>&lt;<sp/>fields-&gt;<ref refid="class_mutable_vertical_table_1a3ae55fdb096903babf43b016de5d3f71" kindref="member">size</ref>())<sp/>&amp;&amp;<sp/>(fields-&gt;at(i)<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[c]-&gt;columnCount()<sp/>+<sp/>offset))<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp_field_list.push_back(fields-&gt;at(i)<sp/>-<sp/>offset);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>offset<sp/>+=<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[c]-&gt;columnCount();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!temp_field_list.empty())<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>new_table<sp/>=<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[c]-&gt;copy_structure_modifiable(&amp;temp_field_list,<sp/>initial_size,<sp/>with_containers);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>new_containers.push_back(new_table);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/>r<sp/>=<sp/>std::make_shared&lt;MutableVerticalTable&gt;(new_containers,<sp/>initial_size);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="class_mutable_vertical_table_1a1a406d769b179605d326a956c087f15e" refkind="member"><highlight class="normal"><ref refid="namespacehyrise_1_1storage_1a21d5e900c20019710828c453eaded1ee" kindref="member">hyrise::storage::atable_ptr_t</ref><sp/><ref refid="class_mutable_vertical_table_1a1a406d769b179605d326a956c087f15e" kindref="member">MutableVerticalTable::copy</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>containers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>hyrise::storage::atable_ptr_t<sp/>&gt;<sp/>cs;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>cs.push_back(<ref refid="class_mutable_vertical_table_1ae09136b4ec94e4239b8708aa4717b984" kindref="member">containers</ref>[i]-&gt;<ref refid="class_mutable_vertical_table_1a1a406d769b179605d326a956c087f15e" kindref="member">copy</ref>());</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>new_table<sp/>=<sp/>std::make_shared&lt;MutableVerticalTable&gt;(cs);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>new_table-&gt;setGeneration(this-&gt;<ref refid="class_abstract_table_1a1d792fb6711c4ea00e4662576c1c3dc8" kindref="member">generation</ref>());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_table;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="class_mutable_vertical_table_1abfb1083cc34203ae7f0f04adb5657db4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_abstract_table_8h_1ae3a004c859daed205eb7639b1e993ce4" kindref="member">attr_vectors_t</ref><sp/><ref refid="class_mutable_vertical_table_1abfb1083cc34203ae7f0f04adb5657db4" kindref="member" tooltip="get underlying attribute vectors for column">MutableVerticalTable::getAttributeVectors</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_mutable_vertical_table_1ac9f8cece531ff588333104bc40def47f" kindref="member">containerAt</ref>(column)-&gt;getAttributeVectors(<ref refid="class_mutable_vertical_table_1a4eb116cc967c53b9c589e594a87631bf" kindref="member">offset_in_container</ref>[column]);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/storage/MutableVerticalTable.cpp"/>
  </compounddef>
</doxygen>
