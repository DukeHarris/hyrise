<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="_query_transformation_engine_8cpp" kind="file">
    <compoundname>QueryTransformationEngine.cpp</compoundname>
    <includes refid="_query_transformation_engine_8h" local="yes">QueryTransformationEngine.h</includes>
    <includes local="no">stdexcept</includes>
    <includes refid="storage__types_8h" local="no">storage/storage_types.h</includes>
    <incdepgraph>
      <node id="10217">
        <label>list</label>
      </node>
      <node id="10188">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="10200">
        <label>queue</label>
      </node>
      <node id="10184">
        <label>limits</label>
      </node>
      <node id="10235">
        <label>boost/functional/hash.hpp</label>
      </node>
      <node id="10212">
        <label>assert.h</label>
      </node>
      <node id="10190">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="10227">
        <label>boost/iterator/iterator_facade.hpp</label>
      </node>
      <node id="10183">
        <label>cstdint</label>
      </node>
      <node id="10224">
        <label>storage/BaseDictionary.h</label>
        <link refid="_base_dictionary_8h"/>
        <childnode refid="10185" relation="include">
        </childnode>
        <childnode refid="10213" relation="include">
        </childnode>
        <childnode refid="10225" relation="include">
        </childnode>
      </node>
      <node id="10173">
        <label>stdint.h</label>
      </node>
      <node id="10223">
        <label>stdlib.h</label>
      </node>
      <node id="10221">
        <label>errno.h</label>
      </node>
      <node id="10177">
        <label>helper/epoch.h</label>
        <link refid="epoch_8h"/>
        <childnode refid="10173" relation="include">
        </childnode>
      </node>
      <node id="10186">
        <label>stdexcept</label>
      </node>
      <node id="10197">
        <label>helper/HwlocHelper.h</label>
        <link refid="_hwloc_helper_8h"/>
        <childnode refid="10198" relation="include">
        </childnode>
      </node>
      <node id="10165">
        <label>string</label>
      </node>
      <node id="10162">
        <label>QueryTransformationEngine.h</label>
        <link refid="_query_transformation_engine_8h"/>
        <childnode refid="10163" relation="include">
        </childnode>
        <childnode refid="10164" relation="include">
        </childnode>
        <childnode refid="10165" relation="include">
        </childnode>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10167" relation="include">
        </childnode>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10169" relation="include">
        </childnode>
      </node>
      <node id="10192">
        <label>taskscheduler.h</label>
        <link refid="taskscheduler_8h"/>
        <childnode refid="10193" relation="include">
        </childnode>
        <childnode refid="10199" relation="include">
        </childnode>
        <childnode refid="10202" relation="include">
        </childnode>
        <childnode refid="10178" relation="include">
        </childnode>
        <childnode refid="10201" relation="include">
        </childnode>
        <childnode refid="10194" relation="include">
        </childnode>
        <childnode refid="10203" relation="include">
        </childnode>
        <childnode refid="10204" relation="include">
        </childnode>
      </node>
      <node id="10199">
        <label>taskscheduler/SimpleTaskScheduler.h</label>
        <link refid="_simple_task_scheduler_8h"/>
        <childnode refid="10193" relation="include">
        </childnode>
        <childnode refid="10196" relation="include">
        </childnode>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10200" relation="include">
        </childnode>
        <childnode refid="10179" relation="include">
        </childnode>
        <childnode refid="10172" relation="include">
        </childnode>
        <childnode refid="10178" relation="include">
        </childnode>
        <childnode refid="10201" relation="include">
        </childnode>
        <childnode refid="10197" relation="include">
        </childnode>
      </node>
      <node id="10175">
        <label>map</label>
      </node>
      <node id="10178">
        <label>taskscheduler/Task.h</label>
        <link refid="_task_8h"/>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10179" relation="include">
        </childnode>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10180" relation="include">
        </childnode>
        <childnode refid="10165" relation="include">
        </childnode>
      </node>
      <node id="10196">
        <label>unordered_set</label>
      </node>
      <node id="10210">
        <label>storage/ValueIdMap.hpp</label>
        <link refid="_value_id_map_8hpp"/>
        <childnode refid="10211" relation="include">
        </childnode>
        <childnode refid="10229" relation="include">
        </childnode>
      </node>
      <node id="10169">
        <label>access/AbstractPlanOpTransformation.h</label>
        <link refid="_abstract_plan_op_transformation_8h"/>
        <childnode refid="10167" relation="include">
        </childnode>
        <childnode refid="10170" relation="include">
        </childnode>
      </node>
      <node id="10220">
        <label>memory/MemalignStrategy.h</label>
        <link refid="_memalign_strategy_8h"/>
        <childnode refid="10221" relation="include">
        </childnode>
        <childnode refid="10222" relation="include">
        </childnode>
        <childnode refid="10223" relation="include">
        </childnode>
      </node>
      <node id="10198">
        <label>hwloc.h</label>
      </node>
      <node id="10232">
        <label>exception</label>
      </node>
      <node id="10171">
        <label>access/OutputTask.h</label>
        <link refid="_output_task_8h"/>
        <childnode refid="10172" relation="include">
        </childnode>
        <childnode refid="10173" relation="include">
        </childnode>
        <childnode refid="10174" relation="include">
        </childnode>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10175" relation="include">
        </childnode>
        <childnode refid="10176" relation="include">
        </childnode>
        <childnode refid="10167" relation="include">
        </childnode>
        <childnode refid="10177" relation="include">
        </childnode>
        <childnode refid="10178" relation="include">
        </childnode>
      </node>
      <node id="10215">
        <label>stddef.h</label>
      </node>
      <node id="10201">
        <label>taskscheduler/CoreBoundTaskQueue.h</label>
        <link refid="_core_bound_task_queue_8h"/>
        <childnode refid="10195" relation="include">
        </childnode>
        <childnode refid="10200" relation="include">
        </childnode>
        <childnode refid="10194" relation="include">
        </childnode>
      </node>
      <node id="10229">
        <label>storage/OrderIndifferentDictionary.h</label>
        <link refid="_order_indifferent_dictionary_8h"/>
        <childnode refid="10185" relation="include">
        </childnode>
        <childnode refid="10213" relation="include">
        </childnode>
        <childnode refid="10224" relation="include">
        </childnode>
        <childnode refid="10225" relation="include">
        </childnode>
        <childnode refid="10230" relation="include">
        </childnode>
        <childnode refid="10228" relation="include">
        </childnode>
        <childnode refid="10232" relation="include">
        </childnode>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10175" relation="include">
        </childnode>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10233" relation="include">
        </childnode>
        <childnode refid="10234" relation="include">
        </childnode>
        <childnode refid="10235" relation="include">
        </childnode>
      </node>
      <node id="10187">
        <label>ostream</label>
      </node>
      <node id="10167">
        <label>json.h</label>
      </node>
      <node id="10233">
        <label>limits.h</label>
      </node>
      <node id="10225">
        <label>storage/DictionaryIterator.h</label>
        <link refid="_dictionary_iterator_8h"/>
        <childnode refid="10226" relation="include">
        </childnode>
        <childnode refid="10227" relation="include">
        </childnode>
      </node>
      <node id="10213">
        <label>storage/AbstractDictionary.h</label>
        <link refid="_abstract_dictionary_8h"/>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10165" relation="include">
        </childnode>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10214" relation="include">
        </childnode>
        <childnode refid="10218" relation="include">
        </childnode>
        <childnode refid="10220" relation="include">
        </childnode>
        <childnode refid="10185" relation="include">
        </childnode>
      </node>
      <node id="10180">
        <label>condition_variable</label>
      </node>
      <node id="10231">
        <label>string.h</label>
      </node>
      <node id="10206">
        <label>access/BasicParser.h</label>
        <link refid="_basic_parser_8h"/>
        <childnode refid="10186" relation="include">
        </childnode>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10167" relation="include">
        </childnode>
      </node>
      <node id="10207">
        <label>storage/AbstractTable.h</label>
        <link refid="_abstract_table_8h"/>
        <childnode refid="10184" relation="include">
        </childnode>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10186" relation="include">
        </childnode>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10165" relation="include">
        </childnode>
        <childnode refid="10182" relation="include">
        </childnode>
        <childnode refid="10208" relation="include">
        </childnode>
        <childnode refid="10185" relation="include">
        </childnode>
        <childnode refid="10209" relation="include">
        </childnode>
        <childnode refid="10210" relation="include">
        </childnode>
      </node>
      <node id="10203">
        <label>taskscheduler/WSCoreBoundTaskQueue.h</label>
        <link refid="_w_s_core_bound_task_queue_8h"/>
        <childnode refid="10194" relation="include">
        </childnode>
        <childnode refid="10204" relation="include">
        </childnode>
      </node>
      <node id="10208">
        <label>storage/AbstractResource.h</label>
        <link refid="_abstract_resource_8h"/>
      </node>
      <node id="10234">
        <label>boost/unordered_map.hpp</label>
      </node>
      <node id="10166">
        <label>vector</label>
      </node>
      <node id="10202">
        <label>taskscheduler/SharedScheduler.h</label>
        <link refid="_shared_scheduler_8h"/>
        <childnode refid="10193" relation="include">
        </childnode>
        <childnode refid="10199" relation="include">
        </childnode>
        <childnode refid="10201" relation="include">
        </childnode>
        <childnode refid="10186" relation="include">
        </childnode>
      </node>
      <node id="10176">
        <label>utility</label>
      </node>
      <node id="10182">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="10183" relation="include">
        </childnode>
        <childnode refid="10165" relation="include">
        </childnode>
        <childnode refid="10184" relation="include">
        </childnode>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10166" relation="include">
        </childnode>
      </node>
      <node id="10194">
        <label>taskscheduler/AbstractTaskQueue.h</label>
        <link refid="_abstract_task_queue_8h"/>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10179" relation="include">
        </childnode>
        <childnode refid="10195" relation="include">
        </childnode>
        <childnode refid="10180" relation="include">
        </childnode>
        <childnode refid="10172" relation="include">
        </childnode>
        <childnode refid="10178" relation="include">
        </childnode>
      </node>
      <node id="10163">
        <label>sstream</label>
      </node>
      <node id="10226">
        <label>storage/BaseIterator.h</label>
        <link refid="_base_iterator_8h"/>
      </node>
      <node id="10214">
        <label>memory/StrategizedAllocator.h</label>
        <link refid="_strategized_allocator_8h"/>
        <childnode refid="10215" relation="include">
        </childnode>
        <childnode refid="10216" relation="include">
        </childnode>
        <childnode refid="10217" relation="include">
        </childnode>
        <childnode refid="10186" relation="include">
        </childnode>
      </node>
      <node id="10191">
        <label>access/QueryParser.h</label>
        <link refid="_query_parser_8h"/>
        <childnode refid="10175" relation="include">
        </childnode>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10165" relation="include">
        </childnode>
        <childnode refid="10186" relation="include">
        </childnode>
        <childnode refid="10167" relation="include">
        </childnode>
        <childnode refid="10192" relation="include">
        </childnode>
        <childnode refid="10206" relation="include">
        </childnode>
      </node>
      <node id="10181">
        <label>access/OperationData.h</label>
        <link refid="_operation_data_8h"/>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10182" relation="include">
        </childnode>
        <childnode refid="10185" relation="include">
        </childnode>
      </node>
      <node id="10174">
        <label>time.h</label>
      </node>
      <node id="10164">
        <label>iostream</label>
      </node>
      <node id="10161">
        <label>src/lib/access/QueryTransformationEngine.cpp</label>
        <link refid="QueryTransformationEngine.cpp"/>
        <childnode refid="10162" relation="include">
        </childnode>
        <childnode refid="10186" relation="include">
        </childnode>
        <childnode refid="10185" relation="include">
        </childnode>
      </node>
      <node id="10209">
        <label>storage/ColumnMetadata.h</label>
        <link refid="_column_metadata_8h"/>
        <childnode refid="10185" relation="include">
        </childnode>
        <childnode refid="10165" relation="include">
        </childnode>
        <childnode refid="10186" relation="include">
        </childnode>
      </node>
      <node id="10193">
        <label>taskscheduler/AbstractTaskScheduler.h</label>
        <link refid="_abstract_task_scheduler_8h"/>
        <childnode refid="10178" relation="include">
        </childnode>
        <childnode refid="10194" relation="include">
        </childnode>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10196" relation="include">
        </childnode>
        <childnode refid="10164" relation="include">
        </childnode>
        <childnode refid="10172" relation="include">
        </childnode>
        <childnode refid="10197" relation="include">
        </childnode>
      </node>
      <node id="10205">
        <label>deque</label>
      </node>
      <node id="10189">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="10204">
        <label>taskscheduler/WSSimpleTaskScheduler.h</label>
        <link refid="_w_s_simple_task_scheduler_8h"/>
        <childnode refid="10193" relation="include">
        </childnode>
        <childnode refid="10203" relation="include">
        </childnode>
        <childnode refid="10205" relation="include">
        </childnode>
        <childnode refid="10164" relation="include">
        </childnode>
        <childnode refid="10197" relation="include">
        </childnode>
      </node>
      <node id="10179">
        <label>mutex</label>
      </node>
      <node id="10228">
        <label>storage/AbstractAllocatedDictionary.h</label>
        <link refid="_abstract_allocated_dictionary_8h"/>
      </node>
      <node id="10195">
        <label>thread</label>
      </node>
      <node id="10218">
        <label>memory/MallocStrategy.h</label>
        <link refid="_malloc_strategy_8h"/>
        <childnode refid="10164" relation="include">
        </childnode>
        <childnode refid="10183" relation="include">
        </childnode>
        <childnode refid="10219" relation="include">
        </childnode>
      </node>
      <node id="10211">
        <label>storage/OrderPreservingDictionary.h</label>
        <link refid="_order_preserving_dictionary_8h"/>
        <childnode refid="10212" relation="include">
        </childnode>
        <childnode refid="10164" relation="include">
        </childnode>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10185" relation="include">
        </childnode>
        <childnode refid="10213" relation="include">
        </childnode>
        <childnode refid="10224" relation="include">
        </childnode>
        <childnode refid="10225" relation="include">
        </childnode>
        <childnode refid="10228" relation="include">
        </childnode>
        <childnode refid="10226" relation="include">
        </childnode>
      </node>
      <node id="10170">
        <label>access/PlanOperation.h</label>
        <link refid="_plan_operation_8h"/>
        <childnode refid="10171" relation="include">
        </childnode>
        <childnode refid="10181" relation="include">
        </childnode>
        <childnode refid="10191" relation="include">
        </childnode>
        <childnode refid="10185" relation="include">
        </childnode>
        <childnode refid="10182" relation="include">
        </childnode>
        <childnode refid="10207" relation="include">
        </childnode>
        <childnode refid="10167" relation="include">
        </childnode>
      </node>
      <node id="10216">
        <label>algorithm</label>
      </node>
      <node id="10172">
        <label>log4cxx/logger.h</label>
      </node>
      <node id="10222">
        <label>stdio.h</label>
      </node>
      <node id="10219">
        <label>cstring</label>
      </node>
      <node id="10230">
        <label>storage/csb_tree.h</label>
        <link refid="csb__tree_8h"/>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10164" relation="include">
        </childnode>
        <childnode refid="10217" relation="include">
        </childnode>
        <childnode refid="10168" relation="include">
        </childnode>
        <childnode refid="10231" relation="include">
        </childnode>
        <childnode refid="10212" relation="include">
        </childnode>
        <childnode refid="10227" relation="include">
        </childnode>
      </node>
      <node id="10168">
        <label>memory</label>
      </node>
      <node id="10185">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="10166" relation="include">
        </childnode>
        <childnode refid="10165" relation="include">
        </childnode>
        <childnode refid="10186" relation="include">
        </childnode>
        <childnode refid="10173" relation="include">
        </childnode>
        <childnode refid="10187" relation="include">
        </childnode>
        <childnode refid="10188" relation="include">
        </childnode>
        <childnode refid="10189" relation="include">
        </childnode>
        <childnode refid="10190" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_query_transformation_engine_8h" kindref="compound">QueryTransformationEngine.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="storage__types_8h" kindref="compound">storage/storage_types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="class_query_transformation_engine_1a06f93b68c2cf85251845678bba654fb3" kindref="member">QueryTransformationEngine::parallelInstanceInfix</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_instance_&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><ref refid="class_query_transformation_engine_1a997a988e95e26d8430ca529cb8f5b5c7" kindref="member">QueryTransformationEngine::unionSuffix</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_union&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><ref refid="class_query_transformation_engine_1ac18716b59ae770aaa55668f099c3522f" kindref="member">QueryTransformationEngine::mergeSuffix</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_merge&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_query_transformation_engine_1a408b272bba88580a0d4235626add1a99" refkind="member"><highlight class="normal">Json::Value<sp/>&amp;<ref refid="class_query_transformation_engine_1a408b272bba88580a0d4235626add1a99" kindref="member">QueryTransformationEngine::transform</ref>(Json::Value<sp/>&amp;query)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>Json::Value::Members<sp/>operatorIds<sp/>=<sp/>query[</highlight><highlight class="stringliteral">&quot;operators&quot;</highlight><highlight class="normal">].getMemberNames();</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>Json::Value<sp/>operatorConfiguration;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>operatorIds.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>operatorConfiguration<sp/>=<sp/>query[</highlight><highlight class="stringliteral">&quot;operators&quot;</highlight><highlight class="normal">][operatorIds[i]];</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>operator<sp/>should<sp/>be<sp/>transformed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_query_transformation_engine_1ae37ab69d4396a72316b1833b4c089994" kindref="member">_factory</ref>.count(operatorConfiguration[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">].asString())<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_query_transformation_engine_1ae37ab69d4396a72316b1833b4c089994" kindref="member">_factory</ref>[operatorConfiguration[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">].asString()]-&gt;transform(operatorConfiguration,<sp/>operatorIds[i],<sp/>query);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>whether<sp/>operator<sp/>needs<sp/>to<sp/>be<sp/>parallelized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_query_transformation_engine_1ae5db298b55fd43698030c957d8ce8406" kindref="member">requestsParallelization</ref>(operatorConfiguration))</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_query_transformation_engine_1a4d40bab395e39758f5ff4348bd90cf1f" kindref="member">applyParallelizationTo</ref>(operatorConfiguration,<sp/>operatorIds[i],<sp/>query);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>query.toStyledString()&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>query;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_query_transformation_engine_1ae5db298b55fd43698030c957d8ce8406" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1ae5db298b55fd43698030c957d8ce8406" kindref="member">QueryTransformationEngine::requestsParallelization</ref>(</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;operatorConfiguration)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>parallelize<sp/>=<sp/>operatorConfiguration[</highlight><highlight class="stringliteral">&quot;instances&quot;</highlight><highlight class="normal">]<sp/>&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parallelize;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_query_transformation_engine_1a4d40bab395e39758f5ff4348bd90cf1f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1a4d40bab395e39758f5ff4348bd90cf1f" kindref="member">QueryTransformationEngine::applyParallelizationTo</ref>(</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;operatorConfiguration,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>std::string<sp/>consolidateOperatorId;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>Json::Value<sp/>consolidateOperator;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operatorConfiguration[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;HashBuild&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>consolidateOperatorId<sp/>=<sp/><ref refid="class_query_transformation_engine_1a9e700aec56967a01882c64fa0432089b" kindref="member">mergeIdFor</ref>(operatorId);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>consolidateOperator<sp/>=<sp/>this-&gt;<ref refid="class_query_transformation_engine_1abd35f068076e7365a791a97d139c5e4e" kindref="member">mergeOperator</ref>(operatorConfiguration[</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">].asString());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>consolidateOperatorId<sp/>=<sp/><ref refid="class_query_transformation_engine_1a5113a4f3bf7eb359b863bd405fd23ba2" kindref="member">unionIdFor</ref>(operatorId);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>consolidateOperator<sp/>=<sp/>this-&gt;<ref refid="class_query_transformation_engine_1a08272141a9f8b6e3d76194303d6a40cc" kindref="member">unionOperator</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;operators&quot;</highlight><highlight class="normal">][consolidateOperatorId]<sp/>=<sp/>consolidateOperator;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfInitialEdges<sp/>=<sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">].size();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>*instanceIds<sp/>=<sp/><ref refid="class_query_transformation_engine_1a76b3b66c05eeb29124e80761f8596fb2" kindref="member">buildInstances</ref>(</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>query,<sp/>operatorConfiguration,<sp/>operatorId,<sp/>consolidateOperatorId);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_query_transformation_engine_1acebb9b7966c8913305f1d6c3e5b7c530" kindref="member">replaceOperatorWithInstances</ref>(</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operatorId,<sp/>*instanceIds,<sp/>consolidateOperatorId,<sp/>query,<sp/>numberOfInitialEdges);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>instanceIds;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="class_query_transformation_engine_1a76b3b66c05eeb29124e80761f8596fb2" refkind="member"><highlight class="normal">std::vector&lt;std::string&gt;<sp/>*<ref refid="class_query_transformation_engine_1a76b3b66c05eeb29124e80761f8596fb2" kindref="member">QueryTransformationEngine::buildInstances</ref>(</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;operatorConfiguration,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;consolidateOperatorId)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfCores<sp/>=<sp/>operatorConfiguration[</highlight><highlight class="stringliteral">&quot;cores&quot;</highlight><highlight class="normal">].size();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfInstances<sp/>=<sp/>operatorConfiguration[</highlight><highlight class="stringliteral">&quot;instances&quot;</highlight><highlight class="normal">].asInt();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>std::vector&lt;std::string&gt;<sp/>*instanceIds<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>instanceIds-&gt;reserve(numberOfInstances);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfInstances;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>nextInstanceId<sp/>=<sp/><ref refid="class_query_transformation_engine_1a791e37b2cb373e525dcefda555272781" kindref="member">instanceIdFor</ref>(operatorId,<sp/>i);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>nextInstance<sp/>=<sp/><ref refid="class_query_transformation_engine_1abce6ffb7888eb104192130564de24a27" kindref="member">nextInstanceOf</ref>(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>operatorConfiguration,<sp/>operatorId,<sp/>i,<sp/>numberOfInstances,<sp/>numberOfCores);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;operators&quot;</highlight><highlight class="normal">][nextInstanceId]<sp/>=<sp/>nextInstance;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>instanceIds-&gt;push_back(nextInstanceId);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>instanceIds;</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_query_transformation_engine_1abce6ffb7888eb104192130564de24a27" refkind="member"><highlight class="normal">Json::Value<sp/><ref refid="class_query_transformation_engine_1abce6ffb7888eb104192130564de24a27" kindref="member">QueryTransformationEngine::nextInstanceOf</ref>(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;operatorConfiguration,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>instanceId,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfInstances,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfCores)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>Json::Value<sp/>nextInstance(operatorConfiguration);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>nextInstance[</highlight><highlight class="stringliteral">&quot;instances&quot;</highlight><highlight class="normal">]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>nextInstance[</highlight><highlight class="stringliteral">&quot;part&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value((Json::UInt)<sp/>instanceId);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>nextInstance[</highlight><highlight class="stringliteral">&quot;count&quot;</highlight><highlight class="normal">]<sp/>=<sp/>Json::Value((Json::UInt)<sp/>numberOfInstances);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numberOfCores<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>nextInstance[</highlight><highlight class="stringliteral">&quot;core&quot;</highlight><highlight class="normal">]<sp/>=<sp/>operatorConfiguration[</highlight><highlight class="stringliteral">&quot;cores&quot;</highlight><highlight class="normal">][(int)(instanceId<sp/>%<sp/>numberOfCores)];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nextInstance;</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_query_transformation_engine_1a08272141a9f8b6e3d76194303d6a40cc" refkind="member"><highlight class="normal">Json::Value<sp/><ref refid="class_query_transformation_engine_1a08272141a9f8b6e3d76194303d6a40cc" kindref="member">QueryTransformationEngine::unionOperator</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>Json::Value<sp/><ref refid="class_query_transformation_engine_1a08272141a9f8b6e3d76194303d6a40cc" kindref="member">unionOperator</ref>(Json::objectValue);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>unionOperator[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;UnionAll&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>unionOperator[</highlight><highlight class="stringliteral">&quot;positions&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1a08272141a9f8b6e3d76194303d6a40cc" kindref="member">unionOperator</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_query_transformation_engine_1abd35f068076e7365a791a97d139c5e4e" refkind="member"><highlight class="normal">Json::Value<sp/><ref refid="class_query_transformation_engine_1abd35f068076e7365a791a97d139c5e4e" kindref="member">QueryTransformationEngine::mergeOperator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;key)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>Json::Value<sp/><ref refid="class_query_transformation_engine_1abd35f068076e7365a791a97d139c5e4e" kindref="member">mergeOperator</ref>(Json::objectValue);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>mergeOperator[</highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;MergeHashTables&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>mergeOperator[</highlight><highlight class="stringliteral">&quot;positions&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>mergeOperator[</highlight><highlight class="stringliteral">&quot;key&quot;</highlight><highlight class="normal">]<sp/>=<sp/>key;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1abd35f068076e7365a791a97d139c5e4e" kindref="member">mergeOperator</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_query_transformation_engine_1acebb9b7966c8913305f1d6c3e5b7c530" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1acebb9b7966c8913305f1d6c3e5b7c530" kindref="member">QueryTransformationEngine::replaceOperatorWithInstances</ref>(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;instanceIds,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;consolidateOperatorId,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfInitialEdges)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><ref refid="class_query_transformation_engine_1a79a67faa858974209c84c8186c582957" kindref="member">appendInstancesDstNodeEdges</ref>(</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>operatorId,<sp/>instanceIds,<sp/>query,<sp/>numberOfInitialEdges);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="class_query_transformation_engine_1a8dfbe02d285576cda8904a5f62e00b45" kindref="member">appendConsolidateSrcNodeEdges</ref>(</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>operatorId,<sp/>instanceIds,<sp/>consolidateOperatorId,<sp/>query,<sp/>numberOfInitialEdges);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><ref refid="class_query_transformation_engine_1a5fd5db64ce9660c452cbaf49723ccf17" kindref="member">removeOperatorNodes</ref>(query,<sp/>operatorId);</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="class_query_transformation_engine_1a79a67faa858974209c84c8186c582957" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1a79a67faa858974209c84c8186c582957" kindref="member">QueryTransformationEngine::appendInstancesDstNodeEdges</ref>(</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;instanceIds,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfInitialEdges)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>Json::Value<sp/>edges<sp/>=<sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>instanceId:<sp/>instanceIds)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfInitialEdges;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Json::Value<sp/>currentEdge<sp/>=<sp/>edges[i];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEdge[1u].asString()<sp/>==<sp/>operatorId)</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_query_transformation_engine_1ad14f85550451fe715a212d0412403f47" kindref="member">appendEdge</ref>(currentEdge[0u].asString(),<sp/>instanceId,<sp/>query);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_query_transformation_engine_1a8dfbe02d285576cda8904a5f62e00b45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1a8dfbe02d285576cda8904a5f62e00b45" kindref="member">QueryTransformationEngine::appendConsolidateSrcNodeEdges</ref>(</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;std::string&gt;<sp/>&amp;instanceIds,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;consolidateOperatorId,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numberOfInitialEdges)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>Json::Value<sp/>edges<sp/>=<sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>instanceId:<sp/>instanceIds)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_query_transformation_engine_1ad14f85550451fe715a212d0412403f47" kindref="member">appendEdge</ref>(instanceId,<sp/>consolidateOperatorId,<sp/>query);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfInitialEdges;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>currentEdge<sp/>=<sp/>edges[i];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEdge[0u].asString()<sp/>==<sp/>operatorId)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_query_transformation_engine_1ad14f85550451fe715a212d0412403f47" kindref="member">appendEdge</ref>(consolidateOperatorId,<sp/>currentEdge[1u].asString(),<sp/>query);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="class_query_transformation_engine_1a5fd5db64ce9660c452cbaf49723ccf17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1a5fd5db64ce9660c452cbaf49723ccf17" kindref="member">QueryTransformationEngine::removeOperatorNodes</ref>(</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Json::Value<sp/>&amp;operatorId)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>Json::Value<sp/>remainingEdges(Json::arrayValue);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>Json::Value<sp/>jsonOperatorId(operatorId);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">].size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>currentEdge<sp/>=<sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">][i];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentEdge[0u]<sp/>!=<sp/>jsonOperatorId</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><sp/>currentEdge[1u]<sp/>!=<sp/>jsonOperatorId)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>remainingEdges.append(currentEdge);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">]<sp/>=<sp/>remainingEdges;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;operators&quot;</highlight><highlight class="normal">].removeMember(operatorId.asString());</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_query_transformation_engine_1ad14f85550451fe715a212d0412403f47" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_query_transformation_engine_1ad14f85550451fe715a212d0412403f47" kindref="member">QueryTransformationEngine::appendEdge</ref>(</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;srcId,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;dstId,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>Json::Value<sp/>&amp;query)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>Json::Value<sp/>edge(Json::arrayValue);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>edge.append(srcId);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>edge.append(dstId);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>query[</highlight><highlight class="stringliteral">&quot;edges&quot;</highlight><highlight class="normal">].append(edge);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="class_query_transformation_engine_1a791e37b2cb373e525dcefda555272781" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_query_transformation_engine_1a791e37b2cb373e525dcefda555272781" kindref="member">QueryTransformationEngine::instanceIdFor</ref>(</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>operatorId,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>instanceId)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>std::ostringstream<sp/>s;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>s<sp/>&lt;&lt;<sp/>instanceId;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operatorId<sp/>+<sp/><ref refid="class_query_transformation_engine_1a06f93b68c2cf85251845678bba654fb3" kindref="member">parallelInstanceInfix</ref><sp/>+<sp/>s.str();</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="class_query_transformation_engine_1a5113a4f3bf7eb359b863bd405fd23ba2" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_query_transformation_engine_1a5113a4f3bf7eb359b863bd405fd23ba2" kindref="member">QueryTransformationEngine::unionIdFor</ref>(</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operatorId<sp/>+<sp/><ref refid="class_query_transformation_engine_1a997a988e95e26d8430ca529cb8f5b5c7" kindref="member">unionSuffix</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="class_query_transformation_engine_1a9e700aec56967a01882c64fa0432089b" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_query_transformation_engine_1a9e700aec56967a01882c64fa0432089b" kindref="member">QueryTransformationEngine::mergeIdFor</ref>(</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;operatorId)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>operatorId<sp/>+<sp/><ref refid="class_query_transformation_engine_1ac18716b59ae770aaa55668f099c3522f" kindref="member">mergeSuffix</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/access/QueryTransformationEngine.cpp"/>
  </compounddef>
</doxygen>
