<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1.2">
  <compounddef id="pred___simple_expression_8h" kind="file">
    <compoundname>pred_SimpleExpression.h</compoundname>
    <includes refid="storage__types_8h" local="yes">storage/storage_types.h</includes>
    <includes refid="types_8h" local="yes">helper/types.h</includes>
    <includes refid="_abstract_expression_8h" local="yes">access/AbstractExpression.h</includes>
    <includedby refid="pred__common_8h" local="yes">src/lib/access/pred_common.h</includedby>
    <includedby refid="predicates_8h" local="yes">src/lib/access/predicates.h</includedby>
    <includedby refid="_simple_raw_table_scan_8h" local="yes">src/lib/access/SimpleRawTableScan.h</includedby>
    <includedby refid="_simple_table_scan_8h" local="yes">src/lib/access/SimpleTableScan.h</includedby>
    <includedby refid="_table_scan_8cpp" local="yes">src/lib/access/TableScan.cpp</includedby>
    <includedby refid="_update_scan_8h" local="yes">src/lib/access/UpdateScan.h</includedby>
    <incdepgraph>
      <node id="9471">
        <label>boost/mpl/vector.hpp</label>
      </node>
      <node id="9476">
        <label>limits</label>
      </node>
      <node id="9473">
        <label>boost/lexical_cast.hpp</label>
      </node>
      <node id="9475">
        <label>cstdint</label>
      </node>
      <node id="9469">
        <label>stdint.h</label>
      </node>
      <node id="9468">
        <label>stdexcept</label>
      </node>
      <node id="9467">
        <label>string</label>
      </node>
      <node id="9470">
        <label>ostream</label>
      </node>
      <node id="9478">
        <label>access/AbstractExpression.h</label>
        <link refid="_abstract_expression_8h"/>
        <childnode refid="9466" relation="include">
        </childnode>
        <childnode refid="9474" relation="include">
        </childnode>
      </node>
      <node id="9466">
        <label>vector</label>
      </node>
      <node id="9474">
        <label>helper/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="9475" relation="include">
        </childnode>
        <childnode refid="9467" relation="include">
        </childnode>
        <childnode refid="9476" relation="include">
        </childnode>
        <childnode refid="9477" relation="include">
        </childnode>
        <childnode refid="9466" relation="include">
        </childnode>
      </node>
      <node id="9464">
        <label>src/lib/access/pred_SimpleExpression.h</label>
        <link refid="pred_SimpleExpression.h"/>
        <childnode refid="9465" relation="include">
        </childnode>
        <childnode refid="9474" relation="include">
        </childnode>
        <childnode refid="9478" relation="include">
        </childnode>
      </node>
      <node id="9472">
        <label>boost/mpl/map.hpp</label>
      </node>
      <node id="9477">
        <label>memory</label>
      </node>
      <node id="9465">
        <label>storage/storage_types.h</label>
        <link refid="storage__types_8h"/>
        <childnode refid="9466" relation="include">
        </childnode>
        <childnode refid="9467" relation="include">
        </childnode>
        <childnode refid="9468" relation="include">
        </childnode>
        <childnode refid="9469" relation="include">
        </childnode>
        <childnode refid="9470" relation="include">
        </childnode>
        <childnode refid="9471" relation="include">
        </childnode>
        <childnode refid="9472" relation="include">
        </childnode>
        <childnode refid="9473" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="9515">
        <label>src/lib/access/UpdateScan.cpp</label>
        <link refid="_update_scan_8cpp"/>
      </node>
      <node id="9513">
        <label>src/lib/access/TableScan.cpp</label>
        <link refid="_table_scan_8cpp"/>
      </node>
      <node id="9501">
        <label>src/lib/access/pred_CompoundExpression.h</label>
        <link refid="pred___compound_expression_8h"/>
        <childnode refid="9482" relation="include">
        </childnode>
        <childnode refid="9502" relation="include">
        </childnode>
      </node>
      <node id="9493">
        <label>src/bin/perf_regression/UnionScan.cpp</label>
        <link refid="bin_2perf__regression_2_union_scan_8cpp"/>
      </node>
      <node id="9494">
        <label>src/lib/access/MergeJoin.hpp</label>
        <link refid="_merge_join_8hpp"/>
        <childnode refid="9485" relation="include">
        </childnode>
      </node>
      <node id="9495">
        <label>src/lib/access/pred_buildExpression.cpp</label>
        <link refid="pred__build_expression_8cpp"/>
      </node>
      <node id="9498">
        <label>src/lib/access/pred_buildExpression.h</label>
        <link refid="pred__build_expression_8h"/>
        <childnode refid="9495" relation="include">
        </childnode>
        <childnode refid="9482" relation="include">
        </childnode>
        <childnode refid="9499" relation="include">
        </childnode>
        <childnode refid="9500" relation="include">
        </childnode>
      </node>
      <node id="9480">
        <label>src/lib/access/pred_common.h</label>
        <link refid="pred__common_8h"/>
        <childnode refid="9481" relation="include">
        </childnode>
        <childnode refid="9497" relation="include">
        </childnode>
        <childnode refid="9498" relation="include">
        </childnode>
        <childnode refid="9501" relation="include">
        </childnode>
        <childnode refid="9504" relation="include">
        </childnode>
        <childnode refid="9506" relation="include">
        </childnode>
        <childnode refid="9507" relation="include">
        </childnode>
        <childnode refid="9508" relation="include">
        </childnode>
        <childnode refid="9509" relation="include">
        </childnode>
        <childnode refid="9510" relation="include">
        </childnode>
        <childnode refid="9502" relation="include">
        </childnode>
      </node>
      <node id="9481">
        <label>src/lib/access/pred_BetweenOperation.h</label>
        <link refid="pred___between_operation_8h"/>
        <childnode refid="9482" relation="include">
        </childnode>
      </node>
      <node id="9489">
        <label>src/bin/perf_regression/JoinScan.cpp</label>
        <link refid="bin_2perf__regression_2_join_scan_8cpp"/>
      </node>
      <node id="9505">
        <label>src/bin/perf_regression/scan_performance.cpp</label>
        <link refid="scan__performance_8cpp"/>
      </node>
      <node id="9506">
        <label>src/lib/access/pred_GreaterThanExpression.h</label>
        <link refid="pred___greater_than_expression_8h"/>
        <childnode refid="9482" relation="include">
        </childnode>
      </node>
      <node id="9492">
        <label>src/bin/perf_regression/SortScan.cpp</label>
        <link refid="bin_2perf__regression_2_sort_scan_8cpp"/>
      </node>
      <node id="9486">
        <label>src/bin/perf_regression/GroupByScan.cpp</label>
        <link refid="bin_2perf__regression_2_group_by_scan_8cpp"/>
      </node>
      <node id="9490">
        <label>src/bin/perf_regression/ProjectionScan.cpp</label>
        <link refid="bin_2perf__regression_2_projection_scan_8cpp"/>
      </node>
      <node id="9503">
        <label>src/lib/access/pred_PredicateBuilder.cpp</label>
        <link refid="pred___predicate_builder_8cpp"/>
      </node>
      <node id="9487">
        <label>src/bin/perf_regression/HashJoin.cpp</label>
        <link refid="_hash_join_8cpp"/>
      </node>
      <node id="9511">
        <label>src/lib/access/SimpleRawTableScan.h</label>
        <link refid="_simple_raw_table_scan_8h"/>
        <childnode refid="9499" relation="include">
        </childnode>
        <childnode refid="9485" relation="include">
        </childnode>
      </node>
      <node id="9479">
        <label>src/lib/access/pred_SimpleExpression.h</label>
        <link refid="pred_SimpleExpression.h"/>
        <childnode refid="9480" relation="include">
        </childnode>
        <childnode refid="9482" relation="include">
        </childnode>
        <childnode refid="9511" relation="include">
        </childnode>
        <childnode refid="9512" relation="include">
        </childnode>
        <childnode refid="9513" relation="include">
        </childnode>
        <childnode refid="9514" relation="include">
        </childnode>
      </node>
      <node id="9512">
        <label>src/lib/access/SimpleTableScan.h</label>
        <link refid="_simple_table_scan_8h"/>
        <childnode refid="9500" relation="include">
        </childnode>
        <childnode refid="9485" relation="include">
        </childnode>
      </node>
      <node id="9499">
        <label>src/lib/access/SimpleRawTableScan.cpp</label>
        <link refid="_simple_raw_table_scan_8cpp"/>
      </node>
      <node id="9488">
        <label>src/bin/perf_regression/HashValueJoin.cpp</label>
        <link refid="_hash_value_join_8cpp"/>
      </node>
      <node id="9485">
        <label>src/lib/access.h</label>
        <link refid="access_8h"/>
        <childnode refid="9486" relation="include">
        </childnode>
        <childnode refid="9487" relation="include">
        </childnode>
        <childnode refid="9488" relation="include">
        </childnode>
        <childnode refid="9489" relation="include">
        </childnode>
        <childnode refid="9490" relation="include">
        </childnode>
        <childnode refid="9491" relation="include">
        </childnode>
        <childnode refid="9492" relation="include">
        </childnode>
        <childnode refid="9493" relation="include">
        </childnode>
      </node>
      <node id="9482">
        <label>src/lib/access/predicates.h</label>
        <link refid="predicates_8h"/>
        <childnode refid="9483" relation="include">
        </childnode>
        <childnode refid="9494" relation="include">
        </childnode>
        <childnode refid="9495" relation="include">
        </childnode>
        <childnode refid="9496" relation="include">
        </childnode>
        <childnode refid="9485" relation="include">
        </childnode>
      </node>
      <node id="9509">
        <label>src/lib/access/pred_MultiTableEqualsExpression.h</label>
        <link refid="pred___multi_table_equals_expression_8h"/>
        <childnode refid="9482" relation="include">
        </childnode>
      </node>
      <node id="9514">
        <label>src/lib/access/UpdateScan.h</label>
        <link refid="_update_scan_8h"/>
        <childnode refid="9515" relation="include">
        </childnode>
        <childnode refid="9485" relation="include">
        </childnode>
      </node>
      <node id="9508">
        <label>src/lib/access/pred_MultiTableBetweenExpression.h</label>
        <link refid="pred___multi_table_between_expression_8h"/>
        <childnode refid="9482" relation="include">
        </childnode>
      </node>
      <node id="9491">
        <label>src/bin/perf_regression/SimpleTableScan.cpp</label>
        <link refid="bin_2perf__regression_2_simple_table_scan_8cpp"/>
      </node>
      <node id="9504">
        <label>src/lib/access/pred_EqualsExpression.h</label>
        <link refid="pred___equals_expression_8h"/>
        <childnode refid="9505" relation="include">
        </childnode>
        <childnode refid="9482" relation="include">
        </childnode>
      </node>
      <node id="9500">
        <label>src/lib/access/SimpleTableScan.cpp</label>
        <link refid="lib_2access_2_simple_table_scan_8cpp"/>
      </node>
      <node id="9510">
        <label>src/lib/access/pred_MultiTableLessThanExpression.h</label>
        <link refid="pred___multi_table_less_than_expression_8h"/>
        <childnode refid="9482" relation="include">
        </childnode>
      </node>
      <node id="9497">
        <label>src/lib/access/pred_SimpleFieldExpression.h</label>
        <link refid="pred___simple_field_expression_8h"/>
        <childnode refid="9480" relation="include">
        </childnode>
        <childnode refid="9482" relation="include">
        </childnode>
      </node>
      <node id="9483">
        <label>src/lib/access/JoinScan.h</label>
        <link refid="_join_scan_8h"/>
        <childnode refid="9484" relation="include">
        </childnode>
        <childnode refid="9485" relation="include">
        </childnode>
      </node>
      <node id="9484">
        <label>src/lib/access/JoinScan.cpp</label>
        <link refid="lib_2access_2_join_scan_8cpp"/>
      </node>
      <node id="9507">
        <label>src/lib/access/pred_LessThanExpression.h</label>
        <link refid="pred___less_than_expression_8h"/>
        <childnode refid="9482" relation="include">
        </childnode>
      </node>
      <node id="9502">
        <label>src/lib/access/pred_PredicateBuilder.h</label>
        <link refid="pred___predicate_builder_8h"/>
        <childnode refid="9482" relation="include">
        </childnode>
        <childnode refid="9503" relation="include">
        </childnode>
      </node>
      <node id="9496">
        <label>src/lib/access/pred_expression_factory.h</label>
        <link refid="pred__expression__factory_8h"/>
        <childnode refid="9495" relation="include">
        </childnode>
        <childnode refid="9482" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_simple_expression" prot="public">SimpleExpression</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2012<sp/>Hasso-Plattner-Institut<sp/>fuer<sp/>Softwaresystemtechnik<sp/>GmbH.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SRC_LIB_ACCESS_PRED_SIMPLEEXPRESSION_H_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SRC_LIB_ACCESS_PRED_SIMPLEEXPRESSION_H_</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="storage__types_8h" kindref="compound">storage/storage_types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">helper/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_abstract_expression_8h" kindref="compound">access/AbstractExpression.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_simple_expression" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_simple_expression" kindref="compound">SimpleExpression</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhyrise_1_1access_1_1_abstract_expression" kindref="compound" tooltip="Abstract expression interface.">hyrise::access::AbstractExpression</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_simple_expression_1a059a1058d13c3e746d645404544c586c" kindref="member">walk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;hyrise::storage::c_atable_ptr_t&gt;<sp/>&amp;l)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="class_simple_expression_1ae06428047fe77732ef121f42b1ee6ce2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a543d59ef56384af4a7af9aa551bc6825" kindref="member">pos_list_t</ref>*<sp/><ref refid="class_simple_expression_1ae06428047fe77732ef121f42b1ee6ce2" kindref="member">match</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stop)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>pl<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="storage__types_8h_1a543d59ef56384af4a7af9aa551bc6825" kindref="member">pos_list_t</ref>;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row=0;<sp/>row<sp/>&lt;<sp/>stop;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">()(row))<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl-&gt;push_back(row);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pl;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="class_simple_expression_1a0910401328b20cde7ea3493a02a957cc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_simple_expression_1a0910401328b20cde7ea3493a02a957cc" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>call<sp/>base<sp/>class&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SRC_LIB_ACCESS_PRED_SIMPLEEXPRESSION_H_</highlight></codeline>
    </programlisting>
    <location file="/home/grund/hyrise/src/lib/access/pred_SimpleExpression.h"/>
  </compounddef>
</doxygen>
